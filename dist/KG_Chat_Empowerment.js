// ==UserScript==
// @name         KG_Chat_Empowerment
// @namespace    klavogonki
// @version      1.2.4 
// @description  Enhance the chat abilities
// @author       Patcher
// @match        *://klavogonki.ru/g*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=klavogonki.ru
// @grant        none
// ==/UserScript==

// ==UserScript==
// @name         KG_Chat_Empowerment
// @namespace    klavogonki
// @version      1.2.4 
// @description  Enhance the chat abilities
// @author       Patcher
// @match        *://klavogonki.ru/g*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=klavogonki.ru
// @grant        none
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/chat/chatMessagesRemover/chatMessagesRemover.scss":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/chat/chatMessagesRemover/chatMessagesRemover.scss ***!
  \********************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.toggle-button-hidden {\n  background-color: hsl(0, 20%, 10%);\n  color: hsl(0, 50%, 50%);\n  border: 1px solid hsl(0, 50%, 50%);\n}\n\n.toggle-button-show {\n  background-color: hsl(90, 20%, 10%);\n  color: hsl(90, 50%, 50%);\n  border: 1px solid hsl(90, 50%, 50%);\n}\n\n.toggle-button-hide {\n  background-color: hsl(50, 20%, 10%);\n  color: hsl(50, 50%, 50%);\n  border: 1px solid hsl(50, 50%, 50%);\n}\n\n.delete-btn {\n  z-index: 999;\n  padding: 8px 16px;\n  transition: all 0.3s;\n  cursor: pointer;\n  filter: brightness(1);\n  border-radius: 0.2em !important;\n}\n.delete-btn.message-mode {\n  background-color: hsl(0, 50%, 20%);\n  color: hsl(0, 60%, 70%);\n  border: 1px solid hsl(0, 50%, 35%);\n}\n.delete-btn.username-mode {\n  background-color: hsl(145, 50%, 20%);\n  color: hsl(145, 60%, 70%);\n  border: 1px solid hsl(145, 50%, 35%);\n}\n.delete-btn.time-mode {\n  background-color: hsl(200, 50%, 20%);\n  color: hsl(200, 60%, 70%);\n  border: 1px solid hsl(200, 50%, 35%);\n}\n.delete-btn:hover {\n  filter: brightness(1.5);\n}\n\n.selected-message {\n  background-clip: padding-box !important;\n}\n.selected-message.message-mode {\n  background-color: hsla(0, 50%, 50%, 0.2) !important;\n  box-shadow: inset 0px 0px 0px 1px hsla(0, 50%, 50%, 0.4) !important;\n}\n.selected-message.username-mode {\n  background-color: hsla(145, 50%, 30%, 0.2) !important;\n  box-shadow: inset 0px 0px 0px 1px hsla(145, 50%, 50%, 0.4) !important;\n}\n.selected-message.time-mode {\n  background-color: hsla(200, 50%, 30%, 0.2) !important;\n  box-shadow: inset 0px 0px 0px 1px hsla(200, 50%, 50%, 0.4) !important;\n}\n\n.shown-message {\n  background-color: hsla(30, 60%, 30%, 0.2) !important;\n  box-shadow: inset 0px 0px 0px 1px hsla(30, 60%, 50%, 0.4) !important;\n  background-clip: padding-box !important;\n}\n\n.hidden-message {\n  display: none;\n}\n\n.toggle-button {\n  font: bold 0.9em \"Montserrat\", sans-serif;\n  position: absolute;\n  top: 0;\n  right: 2em;\n  padding: 8px 16px;\n  transition: filter 0.3s;\n  border-radius: 0 0 0.2em 0.2em !important;\n  border-top: none;\n  min-width: 4em;\n}\n.toggle-button.toggle-hidden {\n  background: linear-gradient(to top, hsl(0, 50%, 20%), hsl(0, 50%, 25%));\n  color: hsl(0, 60%, 70%);\n  border-left: 1px solid hsl(0, 50%, 35%);\n  border-right: 1px solid hsl(0, 50%, 35%);\n  border-bottom: 1px solid hsl(0, 50%, 35%);\n}\n.toggle-button.toggle-shown {\n  background: linear-gradient(to top, hsl(30, 50%, 20%), hsl(30, 50%, 25%));\n  color: hsl(30, 60%, 70%);\n  border-left: 1px solid hsl(30, 50%, 35%);\n  border-right: 1px solid hsl(30, 50%, 35%);\n  border-bottom: 1px solid hsl(30, 50%, 35%);\n}\n.toggle-button:hover {\n  filter: brightness(1.5);\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatMessagesRemover/chatMessagesRemover.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/cache/cache.scss":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/cache/cache.scss ***!
  \******************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* showCachePanel */\n.cached-users-panel {\n  opacity: 0;\n  background-color: #1b1b1b;\n  border-radius: 0.6em !important;\n  position: fixed;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80vw;\n  height: 80vh;\n  z-index: 1000;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto 1fr;\n  grid-template-areas: \"header header\" \"sort sort\" \"cache scroll\";\n  /* Common styles for all descriptions */\n  /* Common styles for user container elements in cached users panel */\n  /* Common styles for the visits element */\n  /* Common styles for the action log container */\n}\n.cached-users-panel .panel-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0.6em;\n  grid-area: header;\n}\n.cached-users-panel .drop-time {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: fit-content;\n}\n.cached-users-panel .drop-time-threshold-description {\n  padding: 0.6em;\n  color: #c6b209;\n}\n.cached-users-panel .drop-time-threshold {\n  padding: 0.6em;\n  color: lightcoral;\n  font-family: \"Roboto Mono\", monospace;\n  font-size: 1.1em;\n  font-weight: bold;\n  border-radius: 0.2em !important;\n  border: 1px solid rgba(240, 128, 128, 0.2);\n  background-color: rgba(240, 128, 128, 0.05);\n  transition: filter 0.3s;\n  filter: sepia(0);\n  cursor: pointer;\n}\n.cached-users-panel .drop-time-threshold:hover {\n  filter: sepia(1);\n}\n.cached-users-panel .drop-time-expiration-description {\n  padding: 0.6em;\n  color: #d0562c;\n}\n.cached-users-panel .drop-time-expiration {\n  padding: 0.6em;\n  color: antiquewhite;\n  font-family: \"Roboto Mono\", monospace;\n  font-size: 1.1em;\n}\n.cached-users-panel .search-for-cached-users {\n  width: 100%;\n  margin: 0 0.5em;\n  display: flex;\n}\n.cached-users-panel .cached-users-search-input {\n  outline: none;\n  height: 48px;\n  width: 100%;\n  padding: 10px;\n  font-size: 1em;\n  font-family: \"Montserrat\";\n  color: bisque !important;\n  border-radius: 0.2em !important;\n  box-sizing: border-box;\n  background-color: #111;\n  border: 1px solid #222;\n}\n.cached-users-panel .sort-buttons-container {\n  display: flex;\n  gap: 5px;\n  margin: 0 0.6em 0.6em;\n  height: fit-content;\n  grid-area: sort;\n}\n.cached-users-panel .sort-buttons-container .sort-button {\n  padding: 5px 10px;\n  background-color: #333;\n  border: none !important;\n  cursor: pointer;\n  border-radius: 3px !important;\n  height: fit-content;\n}\n.cached-users-panel .sort-buttons-container .sort-button.active {\n  background-color: #555;\n}\n.cached-users-panel .fetched-users {\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  height: fit-content;\n  max-height: calc(100% - 0.5em);\n  overflow-y: auto;\n  grid-area: cache;\n}\n.cached-users-panel .users-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  gap: 12px;\n  padding: 1em;\n  height: fit-content;\n}\n.cached-users-panel .description {\n  color: bisque;\n  font-family: Montserrat;\n  font-size: 1em;\n  margin: 0;\n  padding: 0.4em 0.2em;\n  grid-column: 1/-1;\n  height: fit-content;\n}\n.cached-users-panel .user-item {\n  display: grid;\n  grid-template-columns: auto 1fr;\n  align-items: center;\n  height: fit-content;\n  gap: 0.6em;\n  margin-bottom: 1em;\n}\n.cached-users-panel .visits {\n  margin-left: 8px;\n  padding: 4px 6px;\n  border-radius: 2px !important;\n  cursor: pointer;\n  white-space: pre;\n}\n.cached-users-panel .visits.tracked {\n  color: greenyellow;\n  background-color: #003500;\n  border: 1px solid darkgreen;\n  font-weight: bold;\n}\n.cached-users-panel .visits.untracked {\n  color: orange;\n  background-color: #111111;\n  font-weight: normal;\n}\n.cached-users-panel .action-log {\n  position: fixed;\n  opacity: 0;\n  padding: 8px;\n  gap: 4px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-height: 85vh;\n  overflow-y: auto;\n  scrollbar-width: none;\n  overflow-x: hidden;\n  display: flex;\n  flex-wrap: wrap;\n  background-color: #111111;\n  justify-content: center;\n  border: 3px dashed #212121;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08) !important;\n  border-radius: 0.2em !important;\n}\n.cached-users-panel .rank {\n  padding: 2px 0;\n}\n.cached-users-panel .registered {\n  color: cadetblue;\n  font-size: 12px;\n}\n.cached-users-panel .user-metrics {\n  display: inline-flex;\n  grid-column: span 2;\n  white-space: nowrap;\n}\n.cached-users-panel .user-metrics span {\n  margin-right: 0.2em !important;\n}\n.cached-users-panel .avatar {\n  font-size: 1.8rem;\n}\n.cached-users-panel .avatar img {\n  height: 24px;\n  width: 24px;\n}\n.cached-users-panel .present-marker {\n  display: inline-flex;\n  width: 8px;\n  height: 8px;\n  margin-right: 4px;\n  border-radius: 50% !important;\n  position: relative;\n}\n.cached-users-panel .present-marker::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 40%;\n  transform: translateX(-50%);\n  width: 6px;\n  height: 6px;\n  border-radius: 50% !important;\n  background: radial-gradient(circle, hsla(0, 0%, 100%, 0.7) 20%, hsla(0, 0%, 100%, 0) 100%);\n  pointer-events: none;\n}\n.cached-users-panel .present-marker.waiting {\n  background-color: hsl(0, 0%, 50%);\n  box-shadow: 0 1px 3px 0 hsla(0, 0%, 15%, 0.5), 0 0 0 1px hsla(0, 0%, 15%, 0.1) inset, 0 2px 6px 0 hsla(0, 0%, 15%, 0.25) !important;\n}\n.cached-users-panel .present-marker.online {\n  background-color: hsl(80, 80%, 50%);\n  box-shadow: 0 1px 3px 0 hsla(80, 80%, 15%, 0.5), 0 0 0 1px hsla(80, 80%, 15%, 0.1) inset, 0 2px 6px 0 hsla(80, 80%, 15%, 0.25) !important;\n}\n.cached-users-panel .present-marker.offline {\n  background-color: hsl(350, 80%, 50%);\n  box-shadow: 0 1px 3px 0 hsla(350, 80%, 15%, 0.5), 0 0 0 1px hsla(350, 80%, 15%, 0.1) inset, 0 2px 6px 0 hsla(350, 80%, 15%, 0.25) !important;\n}\n.cached-users-panel .login {\n  color: skyblue !important;\n  text-decoration: none;\n  font-family: \"Montserrat\", sans-serif;\n  transition: color 0.3s ease;\n}\n.cached-users-panel .login:hover {\n  color: cornsilk !important;\n}\n@media (max-width: 1199px) {\n  .cached-users-panel {\n    width: 90vw;\n    height: 85vh;\n    min-width: unset;\n  }\n}\n@media (max-width: 991px) {\n  .cached-users-panel {\n    width: 95vw;\n    height: 90vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content auto;\n    grid-template-areas: \"header\" \"cache\";\n  }\n  .cached-users-panel .panel-header {\n    flex-wrap: wrap;\n  }\n  .cached-users-panel .search-for-cached-users {\n    margin: 0.5em 0;\n    order: 1;\n  }\n  .cached-users-panel .users-container {\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  }\n}\n@media (max-width: 576px) {\n  .cached-users-panel {\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0 !important;\n  }\n  .cached-users-panel .panel-header {\n    padding: 0.5em;\n  }\n  .cached-users-panel .drop-time-threshold,\n  .cached-users-panel .drop-time-expiration {\n    padding: 0.4em;\n  }\n  .cached-users-panel .users-container {\n    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n    gap: 8px;\n    padding: 0.5em;\n  }\n  .cached-users-panel .user-item {\n    gap: 0.4em;\n    margin-bottom: 1em;\n  }\n  .cached-users-panel .avatar {\n    font-size: 1.4rem;\n  }\n  .cached-users-panel .avatar img {\n    height: 20px;\n    width: 20px;\n  }\n  .cached-users-panel .login {\n    font-size: 0.9em;\n  }\n  .cached-users-panel .visits {\n    font-size: 0.8em;\n    padding: 2px 4px;\n  }\n  .cached-users-panel .registered {\n    font-size: 10px;\n  }\n}\n@media (max-width: 576px) and (max-width: 520px) {\n  .cached-users-panel .drop-time-threshold-description,\n  .cached-users-panel .drop-time-expiration-description {\n    display: none !important;\n  }\n}\n@media (max-width: 576px) and (max-width: 320px) {\n  .cached-users-panel .drop-time {\n    display: none !important;\n  }\n  .cached-users-panel .panel-control-buttons {\n    width: 100% !important;\n    justify-content: end !important;\n  }\n}\n\n.fetch-mode-button {\n  background-color: #b2a4f9;\n}\n.fetch-mode-button svg {\n  stroke: darkslateblue;\n}\n\n.cache-mode-button {\n  background-color: darkslateblue;\n}\n.cache-mode-button svg {\n  stroke: #b2a4f9;\n}\n\n.cache-user-count {\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  bottom: 0;\n  transform: translate(-50%, 50%);\n  z-index: 1;\n  height: 20px;\n  padding: 0 4px;\n  border-radius: 2px !important;\n  background-color: #9db380;\n  color: rgb(2, 2, 2);\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n  font-weight: bold;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cache.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/chatlogs/chatlogs.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/chatlogs/chatlogs.scss ***!
  \************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* positionChatLogsButton */\n.chat-logs-button {\n  position: relative;\n  z-index: 1;\n}\n\n/* showChatLogsPanel */\n.chat-logs-panel {\n  opacity: 0;\n  background-color: #1b1b1b;\n  border-radius: 0.6em !important;\n  position: fixed;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80vw;\n  height: 80vh;\n  z-index: 1000;\n  min-width: 1000px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content;\n  grid-template-areas: \"header header header\" \"messages scroll users\";\n  /* Adaptivity */\n}\n.chat-logs-panel .panel-header {\n  display: flex;\n  flex-direction: row;\n  grid-area: header;\n  justify-content: flex-end;\n  padding: 0.6em;\n}\n.chat-logs-panel .panel-control-buttons {\n  display: flex;\n}\n.chat-logs-panel .search-for-chatlogs-messages {\n  width: 100%;\n  margin: 0 0.5em 0 0;\n  display: flex;\n}\n.chat-logs-panel .chatlogs-search-input {\n  outline: none;\n  height: 48px;\n  width: 100%;\n  padding: 10px;\n  font-size: 1em;\n  font-family: Montserrat;\n  color: bisque !important;\n  border-radius: 0.2em !important;\n  box-sizing: border-box;\n  background-color: #111;\n  border: 1px solid #222 !important;\n}\n.chat-logs-panel .chatlogs-date-input {\n  background-color: #111;\n  color: bisque;\n  border: 1px solid #222;\n  width: fit-content;\n  height: 48px;\n  padding: 10px;\n  font-size: 1em;\n  font-family: Montserrat;\n  border-radius: 0.2em !important;\n  box-sizing: border-box;\n  margin-right: 0.5em;\n}\n.chat-logs-panel .chat-logs-container {\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: calc(100% - 0.5em);\n  padding: 1em;\n  display: flex;\n  grid-area: messages;\n  flex-direction: column;\n}\n.chat-logs-panel .message-item {\n  padding: 0.2em;\n  display: inline-flex;\n  cursor: pointer;\n  align-items: start;\n}\n.chat-logs-panel .message-time {\n  color: darkseagreen;\n  margin: 0 0.4em;\n  cursor: pointer;\n  transition: color 0.2s ease;\n  height: fit-content;\n}\n.chat-logs-panel .message-time:hover {\n  color: lightgreen;\n}\n.chat-logs-panel .message-username {\n  cursor: pointer;\n  margin: 0 0.4em;\n  height: fit-content;\n}\n.chat-logs-panel .message-text {\n  color: hsl(0, 10%, 70%);\n  margin: 0 0.4em;\n  overflow-wrap: anywhere;\n  height: fit-content;\n}\n.chat-logs-panel .active-users {\n  padding: 1em;\n  height: calc(100% - 1em);\n  width: fit-content;\n  overflow-y: auto;\n  overflow-x: hidden;\n  grid-area: users;\n  display: flex;\n  flex-direction: column;\n}\n.chat-logs-panel .active-users .active-user-item {\n  display: flex;\n  height: fit-content;\n  align-items: center;\n  justify-content: left;\n  margin: 0.2em 0;\n  cursor: pointer;\n  transition: filter 0.15s;\n}\n.chat-logs-panel .active-users .active-user-item:hover {\n  filter: brightness(0.8);\n}\n.chat-logs-panel .active-users .active-user-item .active-user-name {\n  padding: 0.4em;\n}\n.chat-logs-panel .active-users .active-user-item .active-user-messages-count {\n  padding: 0.4em;\n  border-radius: 0.2em !important;\n}\n.chat-logs-panel .saved-chatlog-url {\n  color: darkseagreen !important;\n  text-decoration: none;\n  display: inline-flex;\n  padding: 0.5em;\n}\n.chat-logs-panel .saved-chatlog-url-title {\n  color: lightsteelblue;\n  padding: 0.5em;\n}\n.chat-logs-panel .saved-chatlog-container {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  background-color: rgb(30, 40, 45);\n  border: 1px solid rgb(60, 70, 80) !important;\n  border-radius: 0.2em !important;\n  position: absolute;\n  padding: 0.5em;\n  height: fit-content;\n  width: max-content;\n  max-height: 400px;\n  top: calc(50px + 1em);\n  right: 0;\n}\n@media (max-width: 1199px) {\n  .chat-logs-panel {\n    width: 90vw;\n    height: 85vh;\n    min-width: unset;\n  }\n  .chat-logs-panel .active-users {\n    width: 200px;\n  }\n}\n@media (max-width: 991px) {\n  .chat-logs-panel {\n    width: 95vw;\n    height: 90vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content auto auto;\n    grid-template-areas: \"header\" \"messages\" \"users\";\n  }\n  .chat-logs-panel .active-users {\n    width: 100%;\n    height: auto;\n    max-height: 200px;\n    overflow-y: auto;\n  }\n  .chat-logs-panel .panel-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  .chat-logs-panel .search-for-chatlogs-messages {\n    width: 100%;\n    margin-bottom: 0.5em;\n  }\n  .chat-logs-panel .panel-control-buttons {\n    width: 100%;\n    justify-content: center;\n  }\n  .chat-logs-panel .active-users,\n  .chat-logs-panel .panel-header-toggle-button {\n    display: none !important;\n  }\n}\n@media (max-width: 576px) {\n  .chat-logs-panel {\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0 !important;\n  }\n  .chat-logs-panel .panel-header {\n    padding: 0.5em;\n  }\n  .chat-logs-panel .active-users {\n    display: none;\n  }\n  .chat-logs-panel .message-item {\n    padding: 0.1em;\n  }\n  .chat-logs-panel .message-time,\n  .chat-logs-panel .message-username,\n  .chat-logs-panel .message-text {\n    margin: 0 0.2em;\n    font-size: 0.9em;\n  }\n  .chat-logs-panel .video-container,\n  .chat-logs-panel .youtube-thumb {\n    transform-origin: top left;\n    transform: scale(0.8);\n  }\n  .chat-logs-panel .toggle-mention-messages-counter,\n  .chat-logs-panel .toggle-media-messages-counter {\n    font-size: 10px;\n  }\n  .chat-logs-panel .saved-chatlog-container {\n    max-height: 300px;\n  }\n}\n\n.toggle-mention-messages-counter,\n.toggle-media-messages-counter {\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  padding: 2px 4px;\n  border-radius: 2px !important;\n  font-size: 12px;\n  font-family: Roboto;\n  font-weight: bold;\n  bottom: 0px;\n  left: 0px;\n  transform: translate(-50%, 50%);\n  color: #020202;\n  pointer-events: none;\n  user-select: none;\n}\n\n.toggle-mention-messages-counter {\n  background-color: #ffa07a;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5) !important;\n}\n\n.toggle-media-messages-counter {\n  background-color: #71c4c4;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5) !important;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogs.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/messages/messages.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/messages/messages.scss ***!
  \************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* positionMessagesButton */\n.personal-messages-button {\n  position: relative;\n  z-index: 2;\n}\n.personal-messages-button .message-count {\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  height: 20px;\n  padding: 0 4px;\n  border-radius: 2px !important;\n  color: rgb(2, 2, 2);\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n  font-weight: bold;\n  bottom: 0;\n}\n.personal-messages-button .total-message-count {\n  left: 0;\n  transform: translate(-50%, 50%);\n  background-color: #fa8072;\n}\n.personal-messages-button .new-message-count {\n  right: 0;\n  transform: translate(50%, 50%);\n  background-color: #ffd700;\n}\n\n/* showMessagesPanel */\n.cached-messages-panel {\n  opacity: 0;\n  background-color: #1b1b1b;\n  border-radius: 0.6em !important;\n  position: fixed;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 50vw;\n  height: 80vh;\n  z-index: 1000;\n  min-width: 1000px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content;\n  grid-template-areas: \"header header\" \"messages scroll\";\n  /* Adaptivity */\n}\n.cached-messages-panel .panel-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  /* Aligns to the right */\n  padding: 0.6em;\n  grid-area: header;\n}\n.cached-messages-panel .search-for-personal-messages {\n  width: 100%;\n  margin: 0 0.5em 0 0;\n  display: flex;\n}\n.cached-messages-panel .personal-messages-search-input {\n  outline: none;\n  height: 48px;\n  width: 100%;\n  padding: 10px;\n  font-size: 1em;\n  font-family: Montserrat, sans-serif;\n  color: bisque !important;\n  border-radius: 0.2em !important;\n  box-sizing: border-box;\n  background-color: #111;\n  border: 1px solid #222 !important;\n}\n.cached-messages-panel .messages-container {\n  overflow-y: auto;\n  height: calc(100% - 0.5em);\n  padding: 1em;\n  grid-area: messages;\n}\n.cached-messages-panel .message-item {\n  padding: 0.2em;\n}\n.cached-messages-panel .message-time {\n  display: inline-flex;\n  margin: 0px 0.4em;\n  height: fit-content;\n  cursor: pointer;\n  transition: color 0.2s ease;\n}\n.cached-messages-panel .message-username {\n  display: inline-flex;\n  cursor: pointer;\n  margin: 0px 0.4em;\n  height: fit-content;\n}\n.cached-messages-panel .message-text {\n  cursor: pointer;\n  margin: 0px 0.4em;\n  height: fit-content;\n}\n@media (max-width: 1199px) {\n  .cached-messages-panel {\n    width: 90vw;\n    height: 85vh;\n    min-width: unset;\n  }\n}\n@media (max-width: 991px) {\n  .cached-messages-panel {\n    width: 95vw;\n    height: 90vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content auto;\n    grid-template-areas: \"header\" \"messages\";\n  }\n  .cached-messages-panel .panel-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  .cached-messages-panel panel-control-buttons .search-for-personal-messages {\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 0.5em;\n  }\n  .cached-messages-panel .panel-control-buttons {\n    width: 100%;\n    justify-content: center;\n  }\n}\n@media (max-width: 630px) {\n  .cached-messages-panel .panel-header-date-button,\n  .cached-messages-panel .chatlogs-date-input {\n    display: none !important;\n  }\n}\n@media (max-width: 576px) {\n  .cached-messages-panel {\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0 !important;\n  }\n  .cached-messages-panel .panel-header {\n    padding: 0.5em;\n  }\n  .cached-messages-panel .message-item {\n    padding: 0.1em;\n  }\n  .cached-messages-panel .message-time,\n  .cached-messages-panel .message-username,\n  .cached-messages-panel .message-text {\n    margin: 0 0.2em;\n    font-size: 0.9em;\n  }\n  .cached-messages-panel .video-container,\n  .cached-messages-panel .youtube-thumb {\n    transform-origin: top left;\n    transform: scale(0.8);\n  }\n  .cached-messages-panel .message-count {\n    font-size: 10px;\n    height: 16px;\n    padding: 0 3px;\n  }\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messages.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/messages/messagesParser.scss":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/messages/messagesParser.scss ***!
  \******************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.messages-parser-date-indicator {\n  transition: 0.2s ease-in-out;\n  font-family: \"Montserrat\", sans-serif;\n  font-size: 1.5em;\n  font-weight: 500;\n  font-variant-numeric: tabular-nums;\n  padding: 8px 12px;\n  min-width: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: default;\n  border-radius: 0.2em !important;\n}\n\n.messages-parser-progress-container {\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 50px;\n  right: 5px;\n  gap: 10px;\n  user-select: none;\n  pointer-events: none;\n  z-index: 3000;\n  background: none;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 1em;\n  border-radius: 0.5em !important;\n}\n\n.messages-parser-date-indicator {\n  color: hsl(88, 50%, 55%);\n  background-color: hsl(88, 40%, 20%);\n  border: 1px solid hsl(88, 45%, 35%);\n  min-width: 120px;\n  justify-content: flex-start;\n}\n\n.messages-parser-progress-bar {\n  height: 18px;\n  width: 100%;\n  background: hsl(50, 0%, 15%);\n  border: 1px solid hsl(50, 0%, 30%);\n  border-radius: 0.2em !important;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n}\n\n.messages-parser-progress-bar-inner {\n  height: 100%;\n  background: linear-gradient(90deg, hsl(88, 50%, 55%) 0%, hsl(208, 50%, 70%) 100%);\n  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 0.2em !important;\n}\n\n.messages-parser-progress-label {\n  display: inline-flex;\n  justify-content: center;\n  color: hsl(88, 50%, 55%);\n  font-size: 1em;\n  font-weight: 400;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messagesParser.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/settings/settings.scss":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/settings/settings.scss ***!
  \************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* showSettingsPanel */\n.settings-panel {\n  opacity: 0;\n  background-color: #1b1b1b;\n  border-radius: 0.6em !important;\n  position: fixed;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 50vw;\n  height: 80vh;\n  z-index: 1000;\n  min-width: 1000px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content;\n  grid-template-areas: \"header header\" \"settings scroll\";\n}\n.settings-panel .panel-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0.6em;\n  grid-area: header;\n}\n.settings-panel .settings-content-container {\n  overflow-y: auto;\n  height: calc(100% - 0.5em);\n  padding: 1em;\n  grid-area: settings;\n}\n.settings-panel .settings-description {\n  position: relative;\n  font: 1em Montserrat;\n  color: burlywood;\n  background-color: rgba(222, 184, 135, 0.1);\n  width: fit-content;\n  margin: 0 0 1em;\n  padding: 0.4em 0.8em;\n  border-radius: 0.4em !important;\n  left: 50%;\n  transform: translateX(-50%);\n}\n.settings-panel .settings-spoiler button {\n  display: inline-flex !important;\n  position: relative;\n  font: 1em Montserrat;\n  color: lightgreen;\n  background-color: rgba(222, 184, 135, 0.1);\n  margin: 0 0 3em 0;\n  padding: 0.4em 0.8em;\n  border-radius: 0.4em !important;\n  left: 50%;\n  transform: translateX(-50%);\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  border: none;\n}\n.settings-panel .settings-spoiler button:hover {\n  background-color: rgba(222, 184, 135, 0.25);\n}\n.settings-panel .settings-field {\n  height: 30px;\n  max-width: 200px;\n  min-width: 150px;\n  padding: 0.4em;\n  font: 1em Montserrat;\n  font-family: Montserrat;\n  color: bisque;\n  border-radius: 0.2em !important;\n  box-sizing: border-box;\n  background-color: rgb(17, 17, 17);\n  border: 1px solid rgb(34, 34, 34);\n}\n.settings-panel .settings-button {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.2em !important;\n  cursor: pointer;\n  transition: filter 0.3s;\n  filter: brightness(1);\n}\n.settings-panel .settings-button:hover {\n  filter: brightness(0.8);\n}\n.settings-panel .settings-button.disabled {\n  filter: grayscale(1);\n  pointer-events: none;\n  opacity: 0.5;\n}\n.settings-panel select {\n  height: 30px;\n  min-width: 105px;\n  max-width: 120px;\n  padding: 0.4em;\n  font: 1em Montserrat, sans-serif;\n  color: bisque !important;\n  border-radius: 0.2em !important;\n  box-sizing: border-box;\n  background-color: rgb(17, 17, 17) !important;\n  border: 1px solid rgb(34, 34, 34) !important;\n}\n.settings-panel option {\n  height: 30px;\n  background-color: rgb(17, 17, 17) !important;\n  color: bisque !important;\n  font-family: \"Montserrat\", sans-serif;\n}\n.settings-panel .remove-settings-button {\n  stroke: #ee9090;\n  background-color: #6b2f2f;\n}\n.settings-panel .assigned-settings-button {\n  stroke: lightsteelblue;\n  background-color: steelblue;\n}\n.settings-panel .add-settings-button {\n  stroke: #d190ee;\n  background-color: #502f6b;\n}\n.settings-panel .toggle-item {\n  display: inline-flex;\n  align-items: center;\n  gap: 1em;\n}\n.settings-panel .toggle-description {\n  cursor: pointer;\n  color: burlywood;\n  transition: color 0.15s ease-in-out;\n}\n.settings-panel .toggle-description:hover {\n  color: lightgoldenrodyellow;\n}\n.settings-panel .settings-container {\n  width: 100%;\n  gap: 0.4em;\n  display: inline-flex;\n  flex-wrap: wrap;\n  align-items: start;\n  margin-bottom: 4em;\n}\n.settings-panel .settings-toggle-container {\n  flex-direction: column;\n}\n.settings-panel [class\\$=item] {\n  display: inline-flex;\n  gap: 0.4em;\n}\n@media (max-width: 1199px) {\n  .settings-panel {\n    width: 90vw;\n    height: 85vh;\n    min-width: unset;\n  }\n  .settings-panel .settings-field,\n  .settings-panel select {\n    max-width: 180px;\n  }\n}\n@media (max-width: 991px) {\n  .settings-panel {\n    width: 95vw;\n    height: 90vh;\n    grid-template-columns: 1fr;\n    grid-template-rows: min-content auto;\n    grid-template-areas: \"header\" \"settings\";\n  }\n  .settings-panel .panel-header {\n    flex-wrap: wrap;\n  }\n  .settings-panel .settings-field,\n  .settings-panel select {\n    max-width: 160px;\n    min-width: 120px;\n  }\n  .settings-panel .settings-container {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n}\n@media (max-width: 576px) {\n  .settings-panel {\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    transform: none;\n    border-radius: 0 !important;\n  }\n  .settings-panel .settings-description,\n  .settings-panel .toggle-description {\n    font-size: 0.9em;\n  }\n  .settings-panel .settings-container {\n    flex-direction: column;\n    gap: 0.2em;\n    margin-bottom: 2em;\n  }\n  .settings-panel .toggle-item {\n    gap: 0.5em;\n  }\n  .settings-panel [class\\$=item] {\n    gap: 0.2em;\n  }\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settings.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/style.scss":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/style.scss ***!
  \*****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.empowerment-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  cursor: pointer;\n  background-color: #212226;\n  border: 1px solid #45474b;\n}\n\n.previous-message,\n.focused-message {\n  background-color: hsla(60, 80%, 60%, 0.05) !important;\n  border: 1px solid hsla(60, 80%, 60%, 0.1) !important;\n  border-radius: 0.2em !important;\n}\n\n.popup-panel .fetched-users,\n.popup-panel .messages-container,\n.popup-panel .chat-logs-container,\n.popup-panel .active-users,\n.popup-panel .settings-content-container {\n  scrollbar-width: thin !important;\n  scrollbar-color: #2f2f2f #1b1b1b;\n}\n.popup-panel .fetched-users::-webkit-scrollbar,\n.popup-panel .messages-container::-webkit-scrollbar,\n.popup-panel .chat-logs-container::-webkit-scrollbar,\n.popup-panel .active-users::-webkit-scrollbar,\n.popup-panel .settings-content-container::-webkit-scrollbar {\n  width: 6px;\n  background: #1b1b1b;\n}\n.popup-panel .fetched-users::-webkit-scrollbar-thumb,\n.popup-panel .messages-container::-webkit-scrollbar-thumb,\n.popup-panel .chat-logs-container::-webkit-scrollbar-thumb,\n.popup-panel .active-users::-webkit-scrollbar-thumb,\n.popup-panel .settings-content-container::-webkit-scrollbar-thumb {\n  background: #2f2f2f;\n}\n.popup-panel .fetched-users::-webkit-scrollbar-thumb:hover,\n.popup-panel .messages-container::-webkit-scrollbar-thumb:hover,\n.popup-panel .chat-logs-container::-webkit-scrollbar-thumb:hover,\n.popup-panel .active-users::-webkit-scrollbar-thumb:hover,\n.popup-panel .settings-content-container::-webkit-scrollbar-thumb:hover {\n  background: #4f4f4f;\n}\n.popup-panel .hidden-message,\n.popup-panel .hidden-date {\n  display: none !important;\n}\n.popup-panel .input-error {\n  transition: background-color 300ms ease-in-out;\n  background-color: #6b2f2f !important;\n}\n.popup-panel .date-item {\n  position: relative;\n  font: 1em Montserrat, sans-serif;\n  color: burlywood;\n  background-color: rgba(222, 184, 135, 0.1);\n  width: fit-content;\n  margin: 2em 1em 1em;\n  padding: 0.4em 0.8em;\n  text-align: center;\n  border-radius: 0.4em !important;\n  left: 50%;\n  transform: translateX(-50%);\n}\n.popup-panel .search-messages-info,\n.popup-panel .search-results-info,\n.popup-panel .search-messages-date,\n.popup-panel .no-messages-info,\n.popup-panel .error-message-info {\n  padding: 0.5em;\n  border-radius: 0.4em !important;\n  width: fit-content;\n  margin: 0.5em;\n  grid-column: 1/-1;\n}\n.popup-panel .search-messages-info,\n.popup-panel .search-results-info {\n  color: hsl(80, 60%, 70%);\n  background: hsla(80, 60%, 70%, 0.1);\n}\n.popup-panel .search-messages-date {\n  color: hsl(40, 60%, 70%);\n  background: hsla(40, 60%, 70%, 0.1);\n}\n.popup-panel .no-messages-info,\n.popup-panel .error-message-info {\n  color: hsl(0, 60%, 70%);\n  background: hsla(0, 60%, 70%, 0.1);\n}\n.popup-panel .parse-match-message,\n.popup-panel .search-match-username,\n.popup-panel .search-match-message {\n  text-decoration: underline;\n}\n.popup-panel .parse-match-message {\n  color: hsl(120, 75%, 75%);\n}\n.popup-panel .search-match-message {\n  color: hsl(30, 75%, 75%);\n}\n\n.length-field-popup {\n  position: absolute;\n  font: bold 12px Montserrat;\n  bottom: 40px;\n  transition: left 100ms ease-out;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 4px;\n  margin: 2px;\n  opacity: 0;\n  border: none !important;\n}\n\n.bounce-in {\n  animation: bounceIn 500ms forwards;\n}\n\n@keyframes bounceIn {\n  0% {\n    transform: translateY(0);\n    opacity: 0;\n  }\n  50% {\n    transform: translateY(-10px);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n.bounce-out {\n  animation: bounceOut 500ms forwards;\n}\n\n@keyframes bounceOut {\n  0% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n  50% {\n    transform: translateY(-10px);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 0;\n  }\n}\n.userlist .avatar,\n.user-item .avatar {\n  width: 24px;\n  height: 24px;\n  display: inline-flex;\n}\n.userlist .avatar img,\n.user-item .avatar img {\n  border-radius: 0.2em !important;\n  transform-origin: left;\n  transition: transform 0.15s;\n}\n.userlist .avatar img:hover,\n.user-item .avatar img:hover {\n  transform: scale(2);\n  z-index: 2;\n}\n\n.chat-logs-panel .message-text a,\n.cached-messages-panel .message-text a {\n  color: burlywood !important;\n  transition: color 0.15s ease-in-out;\n}\n.chat-logs-panel .message-text a:hover,\n.cached-messages-panel .message-text a:hover {\n  color: lightgoldenrodyellow !important;\n}\n\n.empowerment-panel {\n  position: fixed;\n  top: 50%;\n  transform: translateY(-100%);\n  right: 15px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1000;\n  gap: 0.2em;\n}\n\n.participant-count {\n  filter: grayscale(100%);\n  transition: 0.2s ease-in-out;\n  font-family: \"Orbitron\", sans-serif;\n  font-size: 24px;\n  color: #83cf40;\n  background-color: #2b4317;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #4b7328;\n  cursor: default;\n}\n\n.pulse-effect {\n  animation: pulse 500ms ease-out;\n}\n\n@keyframes pulse {\n  0% {\n    filter: brightness(1);\n  }\n  50% {\n    filter: brightness(1.5);\n  }\n  100% {\n    filter: brightness(1);\n  }\n}\n.shake-effect {\n  animation: shake 500ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n}\n\n@keyframes shake {\n  0% {\n    transform: translateX(0);\n  }\n  10% {\n    transform: translateX(-4px);\n  }\n  20% {\n    transform: translateX(6px);\n  }\n  30% {\n    transform: translateX(-8px);\n  }\n  40% {\n    transform: translateX(8px);\n  }\n  50% {\n    transform: translateX(-6px);\n  }\n  60% {\n    transform: translateX(5px);\n  }\n  70% {\n    transform: translateX(-3px);\n  }\n  80% {\n    transform: translateX(2px);\n  }\n  90% {\n    transform: translateX(-1px);\n  }\n  100% {\n    transform: translateX(0);\n  }\n}\n.custom-tooltip-popup {\n  position: fixed;\n  background: rgb(22, 22, 22);\n  color: rgb(222, 222, 222);\n  padding: 0.5em;\n  z-index: 1200;\n  font-size: 0.9em;\n  pointer-events: none;\n  white-space: nowrap;\n  opacity: 0;\n  transition: opacity 0.1s;\n  display: none;\n  flex-direction: column;\n  left: 0;\n  top: 0;\n  border: 1px solid rgb(60, 60, 60) !important;\n  border-radius: 4px !important;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3) !important;\n}\n.custom-tooltip-popup .tooltip-item {\n  display: inline-flex !important;\n  align-items: center !important;\n}\n.custom-tooltip-popup .tooltip-action {\n  font-weight: 500 !important;\n  color: hsl(100, 50%, 50%) !important;\n}\n\n.static-chat-notification {\n  cursor: default;\n  white-space: nowrap;\n  padding: 8px;\n  display: inline-flex;\n  flex: 0 auto;\n  justify-content: center;\n  margin: 4px;\n  font-size: 1em;\n  align-items: center;\n  border-radius: 4px !important;\n}\n\n.dynamic-chat-notifications-container {\n  z-index: 1000;\n  width: 0;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding-top: 160px;\n}\n\n.dynamic-chat-notification {\n  cursor: default;\n  white-space: nowrap;\n  position: relative;\n  align-items: center;\n  width: fit-content;\n  display: flex;\n  margin-bottom: 0.2em;\n  padding: 8px 16px 8px 12px;\n  border-radius: 0 4px 4px 0 !important;\n  left: 0;\n  transform: translateX(-100%);\n  opacity: 1;\n  transition: transform 0.3s cubic-bezier(0.83, 0, 0.17, 1), opacity 0.3s cubic-bezier(0.83, 0, 0.17, 1);\n}\n\n.user-enter {\n  color: hsl(100, 50%, 50%) !important;\n  background-color: hsl(100, 50%, 10%) !important;\n  border: 1px solid hsl(100, 50%, 25%) !important;\n}\n\n.user-left {\n  color: hsl(0, 50%, 70%) !important;\n  background-color: hsl(0, 50%, 15%) !important;\n  border: 1px solid hsl(0, 50%, 40%) !important;\n}\n\n.clickable-thumbnail {\n  display: flex !important;\n  opacity: 1;\n  transition: opacity 0.15s ease-in-out;\n  border: none !important;\n  max-width: 150px;\n  max-height: 150px;\n  cursor: pointer;\n  background-color: transparent;\n  margin: 6px;\n  overflow: hidden !important;\n}\n.clickable-thumbnail img {\n  max-height: 100%;\n  max-width: 100%;\n  background-color: transparent;\n  object-fit: contain;\n}\n.clickable-thumbnail:hover {\n  opacity: 0.8;\n}\n\n.scaled-thumbnail {\n  top: 50%;\n  left: 50%;\n  transform-origin: center center;\n  transform: translate(-50%, -50%) scale(1);\n  position: fixed;\n  opacity: 0;\n  z-index: 1000;\n  transform-origin: center center;\n  max-height: 90vh;\n  max-width: 90vw;\n  cursor: pointer;\n  border-radius: 0.6em !important;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3), 0 1px 3px rgba(0, 0, 0, 0.28) !important;\n}\n\n.video-wrapper {\n  display: flex;\n  flex-direction: column;\n}\n.video-wrapper .processed-video {\n  margin-bottom: 0.2em !important;\n}\n.video-wrapper .youtube-info {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.2em;\n  font-family: \"Montserrat\", sans-serift;\n  font-size: 0.9em;\n  color: #8ede87;\n  font-weight: 500;\n  white-space: break-spaces;\n}\n\n.video-container,\n.youtube-thumb {\n  border-radius: 0.4em !important;\n  display: flex;\n  border: none;\n  height: 200px !important;\n  width: 356px !important;\n}\n\n.youtube-thumb {\n  cursor: pointer !important;\n  object-fit: cover !important;\n}\n\n.dimming-background {\n  background: black;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: fixed;\n  opacity: 0;\n  z-index: 998;\n}\n\n.profile-iframe-container {\n  opacity: 0;\n  border: none;\n  display: flex;\n  position: fixed;\n  z-index: 1001;\n  width: 1080px !important;\n  min-width: 1080px !important;\n  height: 80vh;\n  top: 48.5vh;\n  left: 50vw;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08) !important;\n  border-radius: 0.6em !important;\n}\n\n.scroll-buttons-container {\n  display: flex;\n  justify-content: center;\n  grid-area: scroll;\n  flex-direction: column;\n  height: calc(100% - 1em);\n  padding: 1em;\n}\n.scroll-buttons-container .scroll-button {\n  margin: 0.25em 0;\n  background-color: rgba(222, 222, 222, 0.1);\n}\n\n.large-button {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 0.2em !important;\n  filter: brightness(1);\n  transition: filter 0.3s ease, opacity 0.3s ease;\n}\n.large-button:hover {\n  filter: brightness(0.8);\n}\n\n.panel-control-buttons {\n  display: flex;\n}\n.panel-control-buttons > div:not(:last-child) {\n  margin-right: 0.5em;\n}\n\n.panel-header-parse-button {\n  background-color: hsl(150, 40%, 25%);\n}\n\n.panel-header-clear-button {\n  background-color: brown;\n}\n\n.panel-header-close-button {\n  background-color: darkolivegreen;\n}\n\n.panel-header-save-button {\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n  background-color: #2f6b63;\n}\n\n.panel-header-import-button {\n  background-color: #502f6b;\n}\n\n.panel-header-export-button {\n  background-color: #2f4c6b;\n}\n\n.panel-header-copy-button,\n.panel-header-date-button {\n  background-color: steelblue;\n}\n\n.panel-header-toggle-button {\n  background-color: #144e9d;\n}\n\n.panel-header-toggle-media-messages-button {\n  background-color: darkslategray !important;\n}\n.panel-header-toggle-media-messages-button svg {\n  stroke: #71c4c4 !important;\n}\n.panel-header-toggle-media-messages-button.active {\n  background-color: #71c4c4 !important;\n}\n.panel-header-toggle-media-messages-button.active svg {\n  stroke: darkslategray !important;\n}\n\n.panel-header-toggle-mention-messages-button {\n  background-color: saddlebrown !important;\n}\n.panel-header-toggle-mention-messages-button svg {\n  stroke: #ffa07a !important;\n}\n.panel-header-toggle-mention-messages-button.active {\n  background-color: #ffa07a !important;\n}\n.panel-header-toggle-mention-messages-button.active svg {\n  stroke: saddlebrown !important;\n}\n\n.panel-header-one-day-back-button,\n.panel-header-one-day-forward-button {\n  background-color: darkcyan;\n}\n\n.panel-header-shuffle-button {\n  background-color: hsl(250, 40%, 40%);\n}\n.panel-header-shuffle-button.today {\n  background-color: hsl(50, 100%, 15%);\n}\n\n#chat-general .userlist-content {\n  opacity: 0;\n}\n#chat-general .smile-tab {\n  position: relative;\n  z-index: 1;\n}\n\n.chat-user-list {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 20px;\n  padding-top: 8px;\n  width: 200px;\n  height: 94%;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n.chat-user-list [class^=rank-group] {\n  display: flex;\n  flex-direction: column;\n}\n.chat-user-list [class^=user] {\n  display: inline-flex;\n  margin: 2px 0;\n}\n.chat-user-list .name {\n  text-decoration: none;\n  display: inline-flex;\n  width: auto;\n  height: 24px;\n  line-height: 24px;\n  padding: 0 8px;\n  max-width: 124px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.chat-user-list .name:hover {\n  text-decoration: underline;\n}\n.chat-user-list .profile,\n.chat-user-list .tracked,\n.chat-user-list .ignored,\n.chat-user-list .moderator {\n  display: inline-flex;\n  width: 24px;\n  height: 24px;\n  justify-content: center;\n  align-items: center;\n}\n\n.mention {\n  display: inline-flex;\n  color: #83cf40;\n  font-family: Roboto Mono, monospace;\n  font-weight: bold;\n}\n\n.popup-messages-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: start;\n  user-select: none;\n  pointer-events: none;\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 50px;\n  bottom: 0;\n}\n\n.popup-chat-message {\n  display: flex;\n  align-items: center;\n  background-color: hsl(100, 50%, 10%);\n  position: relative;\n  max-width: 70vw;\n  border-radius: 0.2em !important;\n  color: hsl(100, 50%, 50%);\n  border: 1px solid hsl(100, 50%, 25%);\n  padding: 4px;\n  margin: 6px 15vw;\n  opacity: 0;\n  transform: translateY(20px);\n  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n  animation: fadeIn 0.3s ease-in-out forwards;\n}\n.popup-chat-message > div {\n  padding: 2px;\n  display: flex;\n  font-family: \"Montserrat\", sans-serif;\n}\n.popup-chat-message .time,\n.popup-chat-message .time-icon {\n  opacity: 0.7;\n}\n.popup-chat-message.fade-out {\n  animation: fadeOut 0.3s ease-in-out forwards;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n}\n.voice-settings {\n  position: absolute;\n  top: 65px;\n  right: 70px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  font-family: Orbitron, sans-serif;\n}\n.voice-settings .voice-value-info {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-bottom: 6px;\n}\n.voice-settings .voice-speed {\n  color: hsl(100, 50%, 50%);\n}\n.voice-settings .voice-speed-progress {\n  display: block;\n  width: 120px;\n  height: 12px;\n  background-color: hsl(90, 60%, 30%);\n}\n.voice-settings .voice-speed-progress .voice-speed-progress-fill {\n  display: block;\n  height: 100%;\n  background-color: hsl(90, 60%, 50%);\n}\n.voice-settings .voice-pitch {\n  color: hsl(180, 60%, 50%);\n}\n.voice-settings .voice-pitch-progress {\n  display: block;\n  width: 120px;\n  height: 12px;\n  background-color: hsl(180, 60%, 30%);\n}\n.voice-settings .voice-pitch-progress .voice-pitch-progress-fill {\n  display: block;\n  height: 100%;\n  background-color: hsl(180, 60%, 50%);\n}\n\n@media (max-width: 991px) {\n  .scroll-buttons-container {\n    position: absolute !important;\n    right: 0.5em !important;\n    justify-content: end !important;\n  }\n}\n@media (max-width: 630px) {\n  .scroll-buttons-container {\n    display: none !important;\n  }\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/style.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\r\n\r\nmodule.exports = function (i) {\r\n  return i[1];\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce =  true ? __webpack_require__.nc : 0;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/animations.js":
/*!***************************!*\
  !*** ./src/animations.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addJumpEffect: () => (/* binding */ addJumpEffect),\n/* harmony export */   addPulseEffect: () => (/* binding */ addPulseEffect),\n/* harmony export */   addShakeEffect: () => (/* binding */ addShakeEffect)\n/* harmony export */ });\nfunction addJumpEffect(element, initialTranslateX = 0, initialTranslateY = 0) {\r\n  // Define keyframes with specified percentages, scale effect, and calc for Y translation\r\n  const keyframes = [\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}%)) scale(1)` }, // 0%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}% - 60%)) scale(1.1)` }, // 20%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}% + 15%)) scale(1)` }, // 40%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}% - 20%)) scale(1.05)` }, // 60%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}% + 8%)) scale(1)` }, // 75%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}% - 10%)) scale(1.05)` }, // 85%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}% + 4%)) scale(1)` }, // 92%\r\n    { transform: `translate(${initialTranslateX}%, calc(${initialTranslateY}%)) scale(1)` } // 100%\r\n  ];\r\n\r\n  // Animation options\r\n  const options = {\r\n    duration: 500, // Total animation duration in ms (adjust as needed)\r\n    easing: 'ease', // Smooth easing between keyframes\r\n    iterations: 1 // Play once\r\n  };\r\n\r\n  // Start the animation\r\n  const animation = element.animate(keyframes, options);\r\n\r\n  // Optional: Return a promise that resolves when animation completes\r\n  return animation.finished;\r\n}\r\n\r\n// Helper function to add shake effect\r\nfunction addShakeEffect(element) {\r\n  element.classList.add('shake-effect');\r\n  setTimeout(() => {\r\n    element.classList.remove('shake-effect');\r\n  }, 500);\r\n}\r\n\r\nfunction addPulseEffect(element) {\r\n  element.classList.add('pulse-effect');\r\n  setTimeout(() => {\r\n    element.classList.remove('pulse-effect');\r\n  }, 500);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/animations.js?");

/***/ }),

/***/ "./src/chat/chatDomUtils.js":
/*!**********************************!*\
  !*** ./src/chat/chatDomUtils.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChatElements: () => (/* binding */ getChatElements)\n/* harmony export */ });\n// Utility for getting all relevant chat DOM elements\r\nconst getChatElements = () => {\r\n  const activeTab = localStorage.getItem('activeChatTab') || 'game';\r\n  const isGameLocation = window.location.href.includes('gmid');\r\n\r\n  // Determine selectors based on activeTab and isGameLocation\r\n  const chatFieldSelector = isGameLocation\r\n    ? (activeTab === 'game' ? '[id^=\"chat-game\"] .text' : '#chat-general .text')\r\n    : '#chat-general .text';\r\n\r\n  const chatSendSelector = isGameLocation\r\n    ? (activeTab === 'game' ? '[id^=\"chat-game\"] .send' : '#chat-general .send')\r\n    : '#chat-general .send';\r\n\r\n  const messagesContainerSelector = isGameLocation\r\n    ? (activeTab === 'game' ? '[id^=\"chat-game\"] .messages' : '#chat-general .messages')\r\n    : '#chat-general .messages';\r\n\r\n  // Get user lists for both chat types\r\n  const userList = {\r\n    game: document.querySelector('[id^=\"chat-game\"] .userlist-content'),\r\n    general: document.querySelector('#chat-general .userlist-content')\r\n  };\r\n\r\n  // Get the currently active tab based on localStorage's activeTab value (used for restore)\r\n  const activeChatTab = document.querySelector(\r\n    isGameLocation\r\n      ? (activeTab === 'game' ? '.game.c' : '.general.c')\r\n      : (activeTab === 'general' ? '.general.c' : '.game.c')\r\n  );\r\n\r\n  // Get next tab to switch (either general or game)\r\n  const nextChatTab = document.querySelector(\r\n    isGameLocation\r\n      ? (document.querySelector('.game.c.active') ? '.general.c' : '.game.c')\r\n      : (document.querySelector('.general.c.active') ? '.game.c' : '.general.c')\r\n  );\r\n\r\n  // Select all messages from both general and game chats\r\n  const allMessages = document.querySelectorAll('.messages-content p');\r\n\r\n  // Query the messages container\r\n  const messagesContainer = document.querySelector(messagesContainerSelector);\r\n\r\n  return {\r\n    chatField: document.querySelector(chatFieldSelector),\r\n    chatSend: document.querySelector(chatSendSelector),\r\n    activeChatTab,\r\n    nextChatTab,\r\n    chatHidden: document.querySelector('#chat-wrapper.chat-hidden'),\r\n    allMessages,\r\n    messagesContainer,\r\n    userList\r\n  };\r\n};\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatDomUtils.js?");

/***/ }),

/***/ "./src/chat/chatIgnore.js":
/*!********************************!*\
  !*** ./src/chat/chatIgnore.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertRussianUsernameToLatin: () => (/* binding */ convertRussianUsernameToLatin),\n/* harmony export */   removeIgnoredUserMessages: () => (/* binding */ removeIgnoredUserMessages)\n/* harmony export */ });\n/* harmony import */ var _chatDomUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chatDomUtils.js */ \"./src/chat/chatDomUtils.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n\r\n\r\nconst { ignored } = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.settingsState;\r\n\r\n// Function to convert Cyrillic characters to Latin\r\nfunction convertCyrillicToLatin(input) {\r\n  const cyrillicToLatinMap = {\r\n    'А': 'A', 'Б': 'B', 'В': 'V', 'Г': 'G', 'Д': 'D',\r\n    'Е': 'E', 'Ё': 'Yo', 'Ж': 'Zh', 'З': 'Z', 'И': 'I',\r\n    'Й': 'Y', 'К': 'K', 'Л': 'L', 'М': 'M', 'Н': 'N',\r\n    'О': 'O', 'П': 'P', 'Р': 'R', 'С': 'S', 'Т': 'T',\r\n    'У': 'U', 'Ф': 'F', 'Х': 'Kh', 'Ц': 'Ts', 'Ч': 'Ch',\r\n    'Ш': 'Sh', 'Щ': 'Shch', 'Ъ': 'y', // 'ъ' maps to 'y'\r\n    'Ы': 'Y', 'Ь': 'i', // 'ь' maps to 'i'\r\n    'Э': 'E', 'Ю': 'Yu', 'Я': 'Ya',\r\n    'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd',\r\n    'е': 'e', 'ё': 'yo', 'ж': 'zh', 'з': 'z', 'и': 'i',\r\n    'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n',\r\n    'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't',\r\n    'у': 'u', 'ф': 'f', 'х': 'kh', 'ц': 'ts', 'ч': 'ch',\r\n    'ш': 'sh', 'щ': 'shch', 'ъ': 'y', // 'ъ' maps to 'y'\r\n    'ы': 'y', 'ь': 'i', // 'ь' maps to 'i'\r\n    'э': 'e', 'ю': 'yu', 'я': 'ya'\r\n  };\r\n\r\n  // Convert the input string to Latin using the mapping\r\n  return input.split('').map(char => cyrillicToLatinMap[char] || char).join('');\r\n}\r\n\r\n// Function to convert Russian usernames\r\nfunction convertRussianUsernameToLatin(username) {\r\n  // Use the conversion function on the username\r\n  return convertCyrillicToLatin(username);\r\n}\r\n\r\n// ---- Chat ignored messages remover ----\r\nfunction removeIgnoredUserMessages() {\r\n  const { allMessages } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_0__.getChatElements)(); // Get all messages from getChatElements\r\n\r\n  allMessages.forEach(message => {\r\n    const usernameElement = message.querySelector('.username'); // Adjust selector if needed\r\n    const username = usernameElement?.textContent?.replace(/[<>]/g, '') || null;\r\n    const messageText = message.textContent || '';\r\n\r\n    // Hide message if the sender is ignored\r\n    if (username && ignored.includes(username)) {\r\n      const latinUsername = `from-${convertRussianUsernameToLatin(username)}`;\r\n      message.classList.add('ignored-user', latinUsername);\r\n      message.style.display = 'none';\r\n      return;\r\n    }\r\n\r\n    // Hide message if it is addressed to an ignored user (e.g., \"username,\" or \"username \")\r\n    let addressedUsername = null;\r\n    if (/^[^\\s,]+,/.test(messageText)) {\r\n      addressedUsername = messageText.split(',')[0].trim();\r\n    } else if (/^[^\\s]+ /.test(messageText)) {\r\n      addressedUsername = messageText.split(' ')[0].trim();\r\n    }\r\n    if (addressedUsername && ignored.includes(addressedUsername)) {\r\n      const latinAddressedUsername = `to-${convertRussianUsernameToLatin(addressedUsername)}`;\r\n      message.classList.add('ignored-user', latinAddressedUsername);\r\n      message.style.display = 'none';\r\n      return;\r\n    }\r\n\r\n    // Hide message if it contains any ignored username anywhere in the text\r\n    if (ignored.some(ignoredUser => messageText.includes(ignoredUser))) {\r\n      ignored.forEach(ignoredUser => {\r\n        if (messageText.includes(ignoredUser)) {\r\n          const latinIgnored = `to-${convertRussianUsernameToLatin(ignoredUser)}`;\r\n          message.classList.add('ignored-user', latinIgnored);\r\n        }\r\n      });\r\n      message.style.display = 'none';\r\n    }\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatIgnore.js?");

/***/ }),

/***/ "./src/chat/chatMessagesObserver.js.js":
/*!*********************************************!*\
  !*** ./src/chat/chatMessagesObserver.js.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   startChatMessagesObserver: () => (/* binding */ startChatMessagesObserver)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _chatIgnore_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chatIgnore.js */ \"./src/chat/chatIgnore.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n/* harmony import */ var _helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/getLatestMessageData.js */ \"./src/helpers/getLatestMessageData.js\");\n/* harmony import */ var _helpers_messagesReader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/messagesReader.js */ \"./src/helpers/messagesReader.js\");\n/* harmony import */ var _converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../converters/imageConverter.js */ \"./src/converters/imageConverter.js\");\n/* harmony import */ var _converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../converters/videoConverter.js */ \"./src/converters/videoConverter.js\");\n/* harmony import */ var _components_popupMessages_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/popupMessages.js */ \"./src/components/popupMessages.js\");\n/* harmony import */ var _chatWorkers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chatWorkers.js */ \"./src/chat/chatWorkers.js\");\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../main.js */ \"./src/main.js\");\n/* harmony import */ var _components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/voiceEngine.js */ \"./src/components/voiceEngine.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { ignored } = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_12__.settingsState;\r\n\r\n// Set the flag as false for the mention beep sound to trigger at first usual beep sound for usual messages\r\nlet isMention = false;\r\n\r\n// Create a mutation observer to watch for new messages being added\r\nconst newMessagesObserver = new MutationObserver(async mutations => {\r\n  // Normalize chat usernames color for dark theme\r\n  const allUsernameElements = document.querySelectorAll('.username'); // Get all username elements\r\n  (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.normalizeAndResetUsernames)(allUsernameElements, 'all'); // Process all username elements\r\n\r\n  if (!_main_js__WEBPACK_IMPORTED_MODULE_9__.isInitializedChat) return;\r\n\r\n  for (let mutation of mutations) {\r\n    if (mutation.type === 'childList') {\r\n      for (let node of mutation.addedNodes) {\r\n        if (node.nodeType === Node.ELEMENT_NODE && node.tagName === 'P') {\r\n          const singleUsernameElement = node.querySelector('.username'); // Get a single username element\r\n          if (singleUsernameElement) (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.normalizeAndResetUsernames)(singleUsernameElement, 'one'); // Process the single username element\r\n\r\n          // Retrieve the previous message text from localStorage\r\n          const previousMessageText = localStorage.getItem('previousMessageText');\r\n\r\n          // Get the latest message data (returns only messageText and usernameText)\r\n          const latestMessageData = await (0,_helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_3__.getLatestMessageData)();\r\n          const currentMessageText = latestMessageData?.messageText || null;\r\n          const currentMessageUsername = latestMessageData?.usernameText || null;\r\n\r\n          // Check for a ban message and play sound if detected\r\n          if ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isBanMessage)(currentMessageText)) {\r\n            console.log('Ban message detected:', currentMessageText);\r\n            (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.playSound)();\r\n          }\r\n\r\n          // Hide message if the username is in the ignored list\r\n          if (currentMessageUsername && ignored.includes(currentMessageUsername)) {\r\n            const latinUsername = `from-${(0,_chatIgnore_js__WEBPACK_IMPORTED_MODULE_1__.convertRussianUsernameToLatin)(currentMessageUsername)}`;\r\n            node.classList.add('ignored-user', latinUsername);\r\n            node.style.display = 'none';\r\n            continue;\r\n          }\r\n\r\n          // Hide message if it is addressed to an ignored user (e.g., \"username,\" or \"username \")\r\n          if (currentMessageText) {\r\n            let addressedUsername = null;\r\n\r\n            if (/^[^\\s,]+,/.test(currentMessageText)) {\r\n              addressedUsername = currentMessageText.split(',')[0].trim();\r\n            } else if (/^[^\\s]+ /.test(currentMessageText)) {\r\n              addressedUsername = currentMessageText.split(' ')[0].trim();\r\n            }\r\n\r\n            if (addressedUsername) {\r\n              if (ignored.includes(addressedUsername)) {\r\n                const latinAddressedUsername = `to-${(0,_chatIgnore_js__WEBPACK_IMPORTED_MODULE_1__.convertRussianUsernameToLatin)(addressedUsername)}`;\r\n                node.classList.add('ignored-user', latinAddressedUsername);\r\n                node.style.display = 'none';\r\n                continue;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Get sound switcher and message mode elements\r\n          const soundSwitcher = document.querySelector('#voice, #beep, #silence');\r\n          const isVoice = soundSwitcher && soundSwitcher.id === 'voice';\r\n          const isBeep = soundSwitcher && soundSwitcher.id === 'beep';\r\n          const messageMode = document.querySelector('#every-message, #mention-message');\r\n          const isEveryMessageMode = messageMode && messageMode.id === 'every-message';\r\n          const isMentionMessageMode = messageMode && messageMode.id === 'mention-message';\r\n\r\n          // Check if the message contains a private indicator\r\n          const privateMessageIndicator = '[шепчет вам]';\r\n          const privateMessageContainer = node.querySelector('.room.private');\r\n          const isPrivateMessage = privateMessageContainer && privateMessageContainer.textContent.includes(privateMessageIndicator);\r\n\r\n          // If voice mode is enabled and the message is new, trigger text-to-speech\r\n          if (isVoice && _main_js__WEBPACK_IMPORTED_MODULE_9__.isInitializedChat && currentMessageText && currentMessageText !== previousMessageText) {\r\n            localStorage.setItem('previousMessageText', currentMessageText);\r\n            if (currentMessageUsername && !currentMessageUsername.includes(_definitions_js__WEBPACK_IMPORTED_MODULE_11__.myNickname)) {\r\n              const shouldRead = isEveryMessageMode || (isMentionMessageMode && isMention) || isPrivateMessage;\r\n              if (shouldRead) {\r\n                (0,_helpers_messagesReader_js__WEBPACK_IMPORTED_MODULE_4__.addMessageToQueue)(currentMessageText);\r\n              }\r\n            }\r\n          }\r\n\r\n          // If beep mode is enabled and the message is new, play beep sound\r\n          if (isBeep && _main_js__WEBPACK_IMPORTED_MODULE_9__.isInitializedChat && currentMessageText && currentMessageText !== previousMessageText) {\r\n            localStorage.setItem('previousMessageText', currentMessageText);\r\n            if (currentMessageUsername && !currentMessageUsername.includes(_definitions_js__WEBPACK_IMPORTED_MODULE_11__.myNickname)) {\r\n              const shouldBeep = isEveryMessageMode || (isMentionMessageMode && isMention) || isPrivateMessage;\r\n              if (shouldBeep) {\r\n                const useMentionFrequency = !isEveryMessageMode || isMention;\r\n                (0,_components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_10__.playBeep)(useMentionFrequency ? _components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_10__.mentionMessageFrequencies : _components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_10__.usualMessageFrequencies, _components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_10__.beepVolume);\r\n                if (isMention) isMention = false;\r\n              }\r\n            }\r\n          }\r\n\r\n          // If the page is initialized, perform various UI updates and processing\r\n          if (_main_js__WEBPACK_IMPORTED_MODULE_9__.isInitializedChat) {\r\n            (0,_converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_5__.convertImageLinksToImage)('generalMessages');\r\n            (0,_converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_6__.convertVideoLinksToPlayer)('generalMessages');\r\n            (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.processEncodedLinks)('generalMessages');\r\n            (0,_chatWorkers_js__WEBPACK_IMPORTED_MODULE_8__.groupChatMessages)();\r\n            (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_13__.scrollToBottom)('generalMessages', 350);\r\n            (0,_components_popupMessages_js__WEBPACK_IMPORTED_MODULE_7__.showPopupMessage)();\r\n            (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.updatePersonalMessageCounts)(); // Rethink when to call\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// Define a function to start observing the messages container\r\nfunction startChatMessagesObserver() {\r\n  // Make sure the messages container is available before starting the observer\r\n  const messagesContainer = document.querySelector('.messages-content div');\r\n  if (messagesContainer) { newMessagesObserver.observe(messagesContainer, { childList: true, subtree: true }); }\r\n  else { console.warn('Messages container not found!'); }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatMessagesObserver.js.js?");

/***/ }),

/***/ "./src/chat/chatMessagesRemover/chatMessagesRemover.js":
/*!*************************************************************!*\
  !*** ./src/chat/chatMessagesRemover/chatMessagesRemover.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChatMessagesRemover),\n/* harmony export */   pruneDeletedMessages: () => (/* binding */ pruneDeletedMessages)\n/* harmony export */ });\n/* harmony import */ var _chatMessagesRemover_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chatMessagesRemover.scss */ \"./src/chat/chatMessagesRemover/chatMessagesRemover.scss\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\nclass ChatMessagesRemover {\r\n  constructor() {\r\n    this.selected = new Set();\r\n    this.isDragging = false;\r\n    this.toggleBtn = null;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.attachEvents();\r\n    this.updateDeletedMessages();\r\n    this.renderToggle();\r\n  }\r\n\r\n  attachEvents() {\r\n    document.addEventListener(\"mousedown\", (e) => {\r\n      const msgEl = e.target.closest(\".messages-content p\");\r\n\r\n      // Prevent selection mode if right-clicked on an anchor inside a message\r\n      if (e.button === 2 && e.target.closest('a') && msgEl) {\r\n        return;\r\n      }\r\n\r\n      // Guard clause - if no message element is found, return early\r\n      if (!msgEl) return;\r\n\r\n      if (e.button === 2 && msgEl) {\r\n        // Time-based selection\r\n        const timeEl = e.target.closest(\".time\");\r\n        if (timeEl) {\r\n          const messages = Array.from(\r\n            document.querySelectorAll(\".messages-content p\")\r\n          );\r\n          const startIndex = messages.indexOf(msgEl);\r\n\r\n          if (startIndex !== -1) {\r\n            if (e.ctrlKey) {\r\n              // Select all messages from current downward (ignoring username)\r\n              messages.slice(startIndex).forEach((m) => {\r\n                this.toggleSelect(m, true, \"time-mode\");\r\n                m.classList.add(\"time-mode\");\r\n              });\r\n            } else {\r\n              // Select only messages by the same user from current downward\r\n              const usernameEl = msgEl.querySelector(\".username\");\r\n              if (usernameEl) {\r\n                const usernameText = usernameEl.textContent.trim();\r\n                messages.slice(startIndex).forEach((m) => {\r\n                  const mUsernameEl = m.querySelector(\".username\");\r\n                  if (\r\n                    mUsernameEl &&\r\n                    mUsernameEl.textContent.trim() === usernameText\r\n                  ) {\r\n                    this.toggleSelect(m, true, \"time-mode\");\r\n                    m.classList.add(\"time-mode\");\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // Username-based selection\r\n        else if (e.target.closest(\".username\")) {\r\n          const usernameEl = e.target.closest(\".username\");\r\n          const usernameText = usernameEl.textContent.trim();\r\n          document.querySelectorAll(\".messages-content p\").forEach((msg) => {\r\n            const msgUsernameEl = msg.querySelector(\".username\");\r\n            if (\r\n              msgUsernameEl &&\r\n              msgUsernameEl.textContent.trim() === usernameText\r\n            ) {\r\n              this.toggleSelect(msg, true, \"username-mode\");\r\n              msg.classList.add(\"username-mode\");\r\n            }\r\n          });\r\n        }\r\n        // Default single-message selection\r\n        else {\r\n          this.isDragging = true;\r\n          this.toggleSelect(msgEl, true, \"message-mode\");\r\n        }\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", () => (this.isDragging = false));\r\n\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (!this.isDragging) return; // Skip if not dragging\r\n\r\n      const msgEl = e.target.closest(\".messages-content p\");\r\n      if (msgEl) {\r\n        this.toggleSelect(msgEl, true, \"message-mode\");\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"contextmenu\", (e) => {\r\n      const msg = e.target.closest(\".messages-content p\");\r\n      // Do not prevent context menu if right click was on an anchor\r\n      if (msg && !e.target.closest('a')) {\r\n        if (!(0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.isTextSelected)()) {\r\n          e.preventDefault();\r\n          this.showDeleteButton(e, msg);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Handles selection with appropriate modes\r\n  toggleSelect(el, state, mode = \"message-mode\") {\r\n    if (!el) return; // Guard clause\r\n\r\n    // If text is selected within the message, don't toggle selection\r\n    if ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.isTextSelected)()) return;\r\n\r\n    el.classList.toggle(\"selected-message\", state);\r\n\r\n    if (!state) {\r\n      el.classList.remove(\"username-mode\", \"time-mode\", \"message-mode\");\r\n    } else if (mode === \"message-mode\") {\r\n      el.classList.add(\"message-mode\");\r\n    }\r\n\r\n    const id = getMessageId(el);\r\n    state ? this.selected.add(id) : this.selected.delete(id);\r\n  }\r\n\r\n  showDeleteButton(e, msg) {\r\n    // Prevent showing the delete button if text is already selected in the message\r\n    if ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.isTextSelected)()) return;\r\n\r\n\r\n    const existingBtn = document.querySelector(\".delete-btn\");\r\n    if (existingBtn) existingBtn.remove();\r\n\r\n    // Determine selection mode for color adaptation\r\n    let mode = \"message-mode\";\r\n    if (msg.classList.contains(\"username-mode\")) mode = \"username-mode\";\r\n    else if (msg.classList.contains(\"time-mode\")) mode = \"time-mode\";\r\n\r\n    const btn = document.createElement(\"button\");\r\n    btn.className = `delete-btn ${mode}`;\r\n    btn.textContent = \"Delete\";\r\n\r\n    document.body.append(btn);\r\n    const { offsetWidth: w, offsetHeight: h } = btn;\r\n    btn.remove();\r\n\r\n    Object.assign(btn.style, {\r\n      position: \"fixed\",\r\n      top: `${e.clientY - h / 2}px`,\r\n      left: `${e.clientX - w / 2}px`,\r\n    });\r\n\r\n    btn.onclick = () => {\r\n      document.querySelectorAll(\".selected-message\").forEach((msg) => {\r\n        if (!msg) return; // Guard clause\r\n\r\n        msg.classList.remove(\"selected-message\", \"username-mode\", \"time-mode\", \"message-mode\");\r\n        if (msg.classList.length === 0) msg.removeAttribute(\"class\");\r\n      });\r\n      this.storeDeleted([...this.selected]);\r\n      btn.remove();\r\n      this.selected.clear();\r\n      this.updateDeletedMessages();\r\n      this.renderToggle();\r\n    };\r\n\r\n    let timeoutId;\r\n    btn.addEventListener(\"mouseenter\", () => {\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n    });\r\n\r\n    btn.addEventListener(\"mouseleave\", () => {\r\n      timeoutId = setTimeout(() => {\r\n        btn.remove();\r\n        this.clearSelection();\r\n      }, 1000);\r\n    });\r\n\r\n    document.body.append(btn);\r\n  }\r\n\r\n  clearSelection() {\r\n    document.querySelectorAll(\".selected-message\").forEach((msg) => {\r\n      if (!msg) return; // Guard clause\r\n\r\n      msg.classList.remove(\"selected-message\", \"username-mode\", \"time-mode\", \"message-mode\");\r\n      if (msg.classList.length === 0) {\r\n        msg.removeAttribute(\"class\");\r\n      }\r\n    });\r\n    this.selected.clear();\r\n  }\r\n\r\n  storeDeleted(ids) {\r\n    const stored = new Set(\r\n      JSON.parse(localStorage.getItem(\"deletedChatMessagesContent\") || \"[]\")\r\n    );\r\n    ids.forEach((id) => stored.add(id));\r\n    localStorage.setItem(\"deletedChatMessagesContent\", JSON.stringify([...stored]));\r\n  }\r\n\r\n  updateDeletedMessages() {\r\n    const stored = new Set(\r\n      JSON.parse(localStorage.getItem(\"deletedChatMessagesContent\") || \"[]\")\r\n    );\r\n\r\n    const messages = document.querySelectorAll(\".messages-content p\");\r\n    if (messages.length === 0) return; // Skip if no messages found\r\n\r\n    messages.forEach((msg) => {\r\n      if (!msg) return; // Guard clause\r\n\r\n      const id = getMessageId(msg);\r\n      msg.classList.remove(\"shown-message\");\r\n      msg.classList.toggle(\"hidden-message\", stored.has(id));\r\n    });\r\n\r\n    localStorage.setItem(\"deletedChatMessagesContent\", JSON.stringify([...stored]));\r\n  }\r\n\r\n  renderToggle() {\r\n    const storedItems = JSON.parse(localStorage.getItem(\"deletedChatMessagesContent\") || \"[]\");\r\n    const hasDeleted = storedItems.length > 0;\r\n\r\n    if (!hasDeleted) {\r\n      if (this.toggleBtn) {\r\n        this.toggleBtn.remove();\r\n        this.toggleBtn = null;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const messagesContent = document.querySelector(\".messages-content\");\r\n    if (!messagesContent) return; // Guard clause\r\n\r\n    if (!this.toggleBtn) {\r\n      this.toggleBtn = document.createElement(\"button\");\r\n      this.toggleBtn.className = \"toggle-button toggle-hidden\";\r\n      this.toggleBtn.textContent = \"Show\";\r\n\r\n      this.toggleBtn.onclick = (e) => {\r\n        if (e.ctrlKey) {\r\n          document.querySelectorAll(\".messages-content p\").forEach((msg) => {\r\n            if (!msg) return; // Guard clause\r\n\r\n            msg.classList.remove(\"hidden-message\", \"shown-message\");\r\n          });\r\n          localStorage.setItem(\"deletedChatMessagesContent\", JSON.stringify([]));\r\n          this.selected.clear();\r\n          this.updateDeletedMessages();\r\n          this.renderToggle();\r\n          return;\r\n        }\r\n\r\n        const shouldShow = this.toggleBtn.textContent === \"Show\";\r\n        const storedIds = JSON.parse(\r\n          localStorage.getItem(\"deletedChatMessagesContent\") || \"[]\"\r\n        );\r\n\r\n        document.querySelectorAll(\".messages-content p\").forEach((msg) => {\r\n          if (!msg) return; // Guard clause\r\n\r\n          const id = getMessageId(msg);\r\n          if (storedIds.includes(id)) {\r\n            msg.classList.toggle(\"hidden-message\", !shouldShow);\r\n            msg.classList.toggle(\"shown-message\", shouldShow);\r\n          }\r\n        });\r\n\r\n        if (shouldShow) {\r\n          this.toggleBtn.textContent = \"Hide\";\r\n          this.toggleBtn.classList.remove(\"toggle-hidden\");\r\n          this.toggleBtn.classList.add(\"toggle-shown\");\r\n        } else {\r\n          this.toggleBtn.textContent = \"Show\";\r\n          this.toggleBtn.classList.remove(\"toggle-shown\");\r\n          this.toggleBtn.classList.add(\"toggle-hidden\");\r\n        }\r\n      };\r\n\r\n      messagesContent.append(this.toggleBtn);\r\n    }\r\n  }\r\n}\r\n\r\n// Extract unique message ID from a message element\r\nfunction getMessageId(el) {\r\n  if (!el) return '';\r\n  const clone = el.cloneNode(true);\r\n  Array.from(clone.querySelectorAll('.time')).forEach(t => t.remove());\r\n  const text = clone.textContent;\r\n  const attributes = [...Array.from(el.querySelectorAll('a')).map(a => a.href),\r\n  ...Array.from(el.querySelectorAll('img')).map(img => img.title.trim()),\r\n  ...Array.from(el.querySelectorAll('iframe')).map(iframe => iframe.src.trim())]\r\n    .filter(Boolean).join(' ');\r\n  return [text, attributes].filter(Boolean).join(' ');\r\n}\r\n\r\n// Cleanup deleted messages list\r\nfunction pruneDeletedMessages() {\r\n  const messages = document.querySelectorAll(\".messages-content p\");\r\n  if (messages.length === 0) return; // Skip if no messages found\r\n\r\n  const currentIds = new Set(\r\n    Array.from(messages).map((msg) => getMessageId(msg))\r\n  );\r\n\r\n  const stored = new Set(\r\n    JSON.parse(localStorage.getItem(\"deletedChatMessagesContent\") || \"[]\")\r\n  );\r\n\r\n  localStorage.setItem(\r\n    \"deletedChatMessagesContent\",\r\n    JSON.stringify([...stored].filter((id) => currentIds.has(id)))\r\n  );\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatMessagesRemover/chatMessagesRemover.js?");

/***/ }),

/***/ "./src/chat/chatMessagesRemover/chatMessagesRemover.scss":
/*!***************************************************************!*\
  !*** ./src/chat/chatMessagesRemover/chatMessagesRemover.scss ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatMessagesRemover_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./chatMessagesRemover.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/chat/chatMessagesRemover/chatMessagesRemover.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatMessagesRemover_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatMessagesRemover_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatMessagesRemover_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatMessagesRemover_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatMessagesRemover/chatMessagesRemover.scss?");

/***/ }),

/***/ "./src/chat/chatUserlist.js":
/*!**********************************!*\
  !*** ./src/chat/chatUserlist.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRankInfo: () => (/* binding */ getRankInfo),\n/* harmony export */   refreshUserList: () => (/* binding */ refreshUserList)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_userProfileData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/userProfileData.js */ \"./src/helpers/userProfileData.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _panels_cache_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../panels/cache/cacheHelpers.js */ \"./src/panels/cache/cacheHelpers.js\");\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../main.js */ \"./src/main.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _chatWorkers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./chatWorkers.js */ \"./src/chat/chatWorkers.js\");\n/* harmony import */ var _helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../helpers/iframeProfileLoader.js */ \"./src/helpers/iframeProfileLoader.js\");\n\r\n\r\n\r\n\r\n// Define dynamic variables\r\nlet {\r\n  fetchedUsers\r\n} = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.state;\r\n\r\n\r\nconst { usersToTrack, ignored, moderator } = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__.settingsState\r\n\r\n;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Function to get rank information (class, color, and icon) based on status title in English\r\nfunction getRankInfo(mainTitle) {\r\n  const statusData = {\r\n    'Экстракибер': { class: 'extra', icon: '🚀', color: '#06B4E9' },\r\n    'Кибергонщик': { class: 'cyber', icon: '🤖', color: '#5681ff' },\r\n    'Супермен': { class: 'superman', icon: '👊', color: '#B543F5' },\r\n    'Маньяк': { class: 'maniac', icon: '🔪', color: '#DA0543' },\r\n    'Гонщик': { class: 'racer', icon: '⚡️️', color: '#FF8C00' },\r\n    'Профи': { class: 'profi', icon: '️💼️', color: '#C1AA00' },\r\n    'Таксист': { class: 'driver', icon: '🚖️', color: '#2DAB4F' },\r\n    'Любитель': { class: 'amateur', icon: '🍆️', color: '#61B5B3' },\r\n    'Новичок': { class: 'newbie', icon: '🐥', color: '#AFAFAF' }\r\n  };\r\n\r\n  const defaultData = { class: 'unknown', icon: '❓', color: '#000000' };\r\n  const rankInfo = statusData[mainTitle] || defaultData;\r\n\r\n  if (rankInfo.class === defaultData.class) {\r\n    console.log(`Class not found for status title: ${mainTitle}. Using default class: ${defaultData.class}`);\r\n  }\r\n\r\n  return rankInfo;\r\n}\r\n\r\nfunction createCircularProgress(percentage, color, isRevoked) {\r\n  const svgUrl = \"http://www.w3.org/2000/svg\";\r\n  const size = 20;\r\n  const center = size / 2;\r\n  const strokeWidth = 2;\r\n  const radius = center - strokeWidth;\r\n  const diameter = radius * 2;\r\n  const randomString = Math.random().toString(36).substring(2, 22);\r\n  const scaleMultiplier = !isRevoked && percentage === 0 ? 0.6 : 1;\r\n\r\n  const svg = document.createElementNS(svgUrl, \"svg\");\r\n  Object.entries({\r\n    width: size, height: size, viewBox: `0 0 ${size} ${size}`, xmlns: svgUrl\r\n  }).forEach(([k, v]) => svg.setAttribute(k, v));\r\n  svg.classList.add(\"circularProgress\");\r\n\r\n  if (isRevoked || percentage === 0) {\r\n    if (!isRevoked) {\r\n      const outerCircle = document.createElementNS(svgUrl, \"circle\");\r\n      Object.entries({\r\n        cx: center, cy: center, r: radius, fill: \"none\", stroke: color, \"stroke-width\": strokeWidth\r\n      }).forEach(([k, v]) => outerCircle.setAttribute(k, v));\r\n      outerCircle.classList.add(\"outerCircle\");\r\n      svg.appendChild(outerCircle);\r\n    }\r\n\r\n    const scale = (size / 24) * scaleMultiplier;\r\n    const offset = center - 12 * scale;\r\n    const closeIconGroup = document.createElementNS(svgUrl, \"g\");\r\n    closeIconGroup.setAttribute(\"transform\", `translate(${offset}, ${offset}) scale(${scale})`);\r\n    closeIconGroup.classList.add(\"closeIconGroup\");\r\n\r\n    const path = document.createElementNS(svgUrl, \"path\");\r\n    Object.entries({\r\n      d: \"M18.364 5.636a1 1 0 0 1 0 1.414L13.414 12l4.95 4.95a1 1 0 0 1-1.414 1.414L12 13.414l-4.95 4.95a1 1 0 0 1-1.414-1.414L10.586 12l-4.95-4.95a1 1 0 0 1 1.414-1.414L12 10.586l4.95-4.95a1 1 0 0 1 1.414 0z\",\r\n      fill: color\r\n    }).forEach(([k, v]) => path.setAttribute(k, v));\r\n\r\n    closeIconGroup.appendChild(path);\r\n    svg.appendChild(closeIconGroup);\r\n  } else {\r\n    const defs = document.createElementNS(svgUrl, \"defs\");\r\n    defs.classList.add(\"defs\");\r\n\r\n    const clipPath = document.createElementNS(svgUrl, \"clipPath\");\r\n    clipPath.setAttribute(\"id\", `clipInner-${randomString}`);\r\n    clipPath.classList.add(\"clipPath\");\r\n\r\n    const clipRect = document.createElementNS(svgUrl, \"rect\");\r\n    Object.entries({\r\n      x: center - radius, y: center - radius, width: diameter, height: 0, transform: `rotate(180, ${center}, ${center})`\r\n    }).forEach(([k, v]) => clipRect.setAttribute(k, v));\r\n    clipRect.classList.add(\"clipRect\");\r\n\r\n    const animate = document.createElementNS(svgUrl, \"animate\");\r\n    Object.entries({\r\n      attributeName: \"height\",\r\n      from: 0,\r\n      to: diameter * (percentage / 100),\r\n      begin: \"indefinite\",\r\n      dur: \"1s\",\r\n      fill: \"freeze\",\r\n      calcMode: \"spline\",\r\n      keySplines: \"0.4 0 0.2 1\", // Fast start, smooth stop\r\n      keyTimes: \"0;1\"\r\n    }).forEach(([k, v]) => animate.setAttribute(k, v));\r\n    animate.classList.add(\"animateProfileProgress\");\r\n\r\n    clipRect.appendChild(animate);\r\n    clipPath.appendChild(clipRect);\r\n    defs.appendChild(clipPath);\r\n    svg.appendChild(defs);\r\n\r\n    const outerCircle = document.createElementNS(svgUrl, \"circle\");\r\n    Object.entries({\r\n      cx: center, cy: center, r: radius, fill: \"none\", stroke: color, \"stroke-width\": strokeWidth\r\n    }).forEach(([k, v]) => outerCircle.setAttribute(k, v));\r\n    outerCircle.classList.add(\"outerCircle\");\r\n    svg.appendChild(outerCircle);\r\n\r\n    const innerCircle = document.createElementNS(svgUrl, \"circle\");\r\n    Object.entries({\r\n      cx: center, cy: center, r: radius, fill: color, \"clip-path\": `url(#clipInner-${randomString})`\r\n    }).forEach(([k, v]) => innerCircle.setAttribute(k, v));\r\n    innerCircle.classList.add(\"innerCircle\");\r\n    svg.appendChild(innerCircle);\r\n  }\r\n\r\n  return svg.outerHTML;\r\n}\r\n\r\n/**\r\n * Calculates the percentage of a given number within its nearest range.\r\n * The function dynamically determines the range based on the input value.\r\n *\r\n * @param {number} value - The input value to calculate the percentage for.\r\n * @returns {number} - The percentage of the input value within its identified range.\r\n */\r\nfunction calculatePercentage(value) {\r\n  // Determine the lower bound of the range (this is smart, not hardcoded)\r\n  const lowerBound = Math.floor(value / 100) * 100; // Nearest lower multiple of 100\r\n  const upperBound = lowerBound + 100; // Nearest upper multiple of 100\r\n\r\n  // Calculate the percentage within the identified range\r\n  const percentage = ((value - lowerBound) / (upperBound - lowerBound)) * 100;\r\n\r\n  return percentage;\r\n}\r\n\r\n// Function to create a user element with avatar, name, and profile link based on user details\r\nfunction createUserChatElement(userId, mainTitle, userName, bestSpeed, isRevoked) {\r\n  const avatarTimestamp = fetchedUsers?.[userId]?.avatarTimestamp;\r\n\r\n  // Ensure the bigAvatarUrl is only constructed if avatarTimestamp is not '00'\r\n  const bigAvatarUrl = avatarTimestamp !== '00' ? `/storage/avatars/${userId}_big.png?updated=${avatarTimestamp}` : '';\r\n\r\n  const newUserElement = document.createElement('div');\r\n  // Get rank information (class, color, icon)\r\n  const rankInfo = getRankInfo(mainTitle);\r\n  const rankClass = rankInfo.class; // Rank class\r\n  const rankColor = rankInfo.color; // Rank color\r\n  const rankIcon = rankInfo.icon; // Rank icon (emoji)\r\n\r\n  newUserElement.classList.add(`user${userId}`, rankClass); // Assign the rank class\r\n\r\n  const newAvatarElement = document.createElement('div');\r\n  newAvatarElement.classList.add('avatar');\r\n\r\n  // Only create and append an image element if avatarTimestamp is not '00'\r\n  if (avatarTimestamp !== '00') {\r\n    const avatarImage = document.createElement('img');\r\n    avatarImage.src = bigAvatarUrl;\r\n    newAvatarElement.appendChild(avatarImage);\r\n  } else {\r\n    newAvatarElement.style.fontSize = '1.8rem';\r\n    // Insert a random SVG icon instead of an image when avatarTimestamp is '00'\r\n    newAvatarElement.innerHTML = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getRandomEmojiAvatar)();\r\n  }\r\n\r\n  const newNameElement = document.createElement('a');\r\n  newNameElement.classList.add('name');\r\n  newNameElement.dataset.user = userId;\r\n  newNameElement.textContent = userName;\r\n\r\n  newNameElement.style.setProperty('color', rankColor, 'important');\r\n\r\n  const newProfileElement = document.createElement('a');\r\n  newProfileElement.classList.add('profile');\r\n  const title = `${rankIcon} ${mainTitle} - ${bestSpeed}`;\r\n  newProfileElement.setAttribute('data-title', title);\r\n  newProfileElement.target = '_blank';\r\n  newProfileElement.href = `/profile/${userId}/`;\r\n  let circularProgress = createCircularProgress(calculatePercentage(bestSpeed), rankColor, isRevoked);\r\n  // Use circular progress element for profile navigation from new chat user list\r\n  newProfileElement.innerHTML = circularProgress;\r\n  // Start animation after element is in DOM\r\n  setTimeout(() => {\r\n    const animateElement = newProfileElement.querySelector('.animateProfileProgress');\r\n    if (animateElement) animateElement.beginElement();\r\n  }, 10);\r\n\r\n  newUserElement.appendChild(newAvatarElement);\r\n  newUserElement.appendChild(newNameElement);\r\n  newUserElement.appendChild(newProfileElement);\r\n\r\n  // Check if there is a user in 'usersToTrack' array by their name and state\r\n  const userToTrack = usersToTrack.find((user) =>\r\n    user.name === userName && user.state === 'thawed'\r\n  );\r\n\r\n  if (userToTrack) {\r\n    const trackedIcon = document.createElement('div');\r\n    trackedIcon.classList.add('tracked');\r\n    trackedIcon.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.trackedSVG;\r\n    newUserElement.appendChild(trackedIcon);\r\n  }\r\n\r\n  // Check if the user is in the ignore list\r\n  const isIgnoredUser = ignored.includes(userName);\r\n\r\n  // Create and hide a message element if the user is in ignored\r\n  if (isIgnoredUser) {\r\n    const ignoredIcon = document.createElement('div');\r\n    ignoredIcon.classList.add('ignored');\r\n    ignoredIcon.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.ignoredSVG;\r\n    newUserElement.appendChild(ignoredIcon);\r\n  }\r\n\r\n  // Check if there is an <img> element with a src attribute containing the word \"moderator\" inside the <ins> element\r\n  const hasModeratorIcon = document.querySelector(`.userlist-content ins.user${userId} img[src*=\"moderator\"]`);\r\n\r\n  // Check if the user is in the moderator list\r\n  const isModerator = moderator.includes(userName);\r\n\r\n  // If a moderator icon is found or the current user is in the moderator array, append the moderator icon.\r\n  if (hasModeratorIcon || isModerator) {\r\n    const moderatorIcon = document.createElement('div');\r\n    moderatorIcon.classList.add('moderator');\r\n    moderatorIcon.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.moderatorSVG; // Assuming 'moderatorSVG' contains the SVG for the icon\r\n    newUserElement.appendChild(moderatorIcon);\r\n  }\r\n\r\n  return newUserElement;\r\n}\r\n\r\n// Function to update users in the custom chat\r\nasync function refreshUserList(retrievedLogin, actionType) {\r\n  try {\r\n    // Get the original user list container\r\n    const originalUserListContainer = document.querySelector('.userlist-content');\r\n\r\n    // Get or create the user list container\r\n    let userListContainer = document.querySelector('.chat-user-list');\r\n    if (!userListContainer) {\r\n      userListContainer = document.createElement('div');\r\n      userListContainer.classList.add('chat-user-list');\r\n\r\n      // Find the element with the class \"userlist\"\r\n      const userlistElement = document.querySelector('.userlist');\r\n\r\n      // Append the userListContainer to the userlistElement if found\r\n      if (userlistElement) {\r\n        userlistElement.appendChild(userListContainer);\r\n      }\r\n    }\r\n\r\n    // Define the rank order\r\n    const rankOrder = ['extra', 'cyber', 'superman', 'maniac', 'racer', 'profi', 'driver', 'amateur', 'newbie'];\r\n\r\n    // Create an object to store subparent elements for each rank class\r\n    const rankSubparents = {};\r\n\r\n    // Check if subparent elements already exist, if not, create them\r\n    rankOrder.forEach(rankClass => {\r\n      const existingSubparent = userListContainer.querySelector(`.rank-group-${rankClass}`);\r\n      if (!existingSubparent) {\r\n        rankSubparents[rankClass] = document.createElement('div');\r\n        rankSubparents[rankClass].classList.add(`rank-group-${rankClass}`);\r\n        userListContainer.appendChild(rankSubparents[rankClass]);\r\n      } else {\r\n        rankSubparents[rankClass] = existingSubparent;\r\n      }\r\n    });\r\n\r\n    // Create a set to store existing user IDs in the updated user list\r\n    const existingUserIds = new Set();\r\n\r\n    // Iterate over each user element in the original user list\r\n    for (const userElement of originalUserListContainer.querySelectorAll('ins')) {\r\n      const nameElement = userElement.querySelector('.name');\r\n      const userId = nameElement.getAttribute('data-user');\r\n      const userName = nameElement.textContent;\r\n\r\n      // Check if the user already exists in the updated user list\r\n      if (!existingUserIds.has(userId)) {\r\n        try {\r\n          // Retrieve the user's profile data\r\n          const { rank: mainTitle, login, registeredDate, bestSpeed, ratingLevel, friends, cars, avatarTimestamp } = await (0,_helpers_userProfileData_js__WEBPACK_IMPORTED_MODULE_4__.getUserProfileData)(userId);\r\n\r\n          // If the user data is not already stored in the fetchedUsers object\r\n          if (!fetchedUsers[userId]) {\r\n            // Set rank, login, registeredDate, bestSpeed, ratingLevel, friends, cars, and avatarTimestamp\r\n            fetchedUsers[userId] = {\r\n              rank: mainTitle,\r\n              login,\r\n              registered: registeredDate,\r\n              bestSpeed,\r\n              ratingLevel,\r\n              friends,\r\n              cars,\r\n              avatarTimestamp\r\n            };\r\n          } else {\r\n            // Update the user's data\r\n            fetchedUsers[userId].rank = mainTitle;\r\n            fetchedUsers[userId].login = login;\r\n            fetchedUsers[userId].registered = registeredDate;\r\n            fetchedUsers[userId].bestSpeed = bestSpeed;\r\n            fetchedUsers[userId].ratingLevel = ratingLevel;\r\n            fetchedUsers[userId].friends = friends;\r\n            fetchedUsers[userId].cars = cars;\r\n            fetchedUsers[userId].avatarTimestamp = avatarTimestamp;\r\n          }\r\n\r\n          // Logging user action (enter or leave) using the formatted time\r\n          if (retrievedLogin === userName) {\r\n            if (actionType === 'enter') {\r\n              fetchedUsers[userId].visits = (fetchedUsers[userId].visits || 0) + 1;\r\n              fetchedUsers[userId].tracked = usersToTrack.some(u => u.name === retrievedLogin);\r\n            }\r\n          }\r\n\r\n          // Get the rank info from getRankInfo, which now returns an object with class, color, and icon\r\n          const { class: rankClass } = getRankInfo(mainTitle);  // Destructure the returned object to get the rank class\r\n\r\n          // Check if the user with the same ID already exists in the corresponding rank group\r\n          const existingUserElement = rankSubparents[rankClass].querySelector(`.user${userId}`);\r\n          if (!existingUserElement) {\r\n            const newUserElement = createUserChatElement(userId, mainTitle, userName, bestSpeed, userElement.classList.contains('revoked'));\r\n            // Add the user to the corresponding rank group\r\n            rankSubparents[rankClass].appendChild(newUserElement);\r\n            // Make sure the mutation observer for the new users changed flag to false to make it work\r\n            if (_main_js__WEBPACK_IMPORTED_MODULE_7__.isInitializedChat) (0,_animations_js__WEBPACK_IMPORTED_MODULE_8__.addShakeEffect)(newUserElement); // Add shake effect on entered users on chat ready state\r\n          }\r\n\r\n          // Update existing user IDs\r\n          existingUserIds.add(userId);\r\n        } catch (error) {\r\n          console.error(`Error fetching profile summary for user ${userId}:`, error);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Additional removal logic based on your provided code\r\n    userListContainer.querySelectorAll('.chat-user-list [class^=\"user\"]').forEach(userElement => {\r\n      const userId = userElement.querySelector('.name').getAttribute('data-user');\r\n      if (!existingUserIds.has(userId)) {\r\n        userElement.remove();\r\n      }\r\n    });\r\n\r\n    // Sorting logic (applied after all users are created)\r\n    Object.values(rankSubparents).forEach(rankGroup =>\r\n      [...rankGroup.children]\r\n        .sort((a, b) =>\r\n          (fetchedUsers[b.querySelector('.name')?.getAttribute('data-user')]?.bestSpeed || 0) -\r\n          (fetchedUsers[a.querySelector('.name')?.getAttribute('data-user')]?.bestSpeed || 0)\r\n        )\r\n        .forEach(el => rankGroup.appendChild(el))\r\n    );\r\n\r\n    // Update localStorage outside the if conditions\r\n    localStorage.setItem('fetchedUsers', JSON.stringify(fetchedUsers));\r\n\r\n    // Call updateUserCountText to refresh user count display\r\n    (0,_panels_cache_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_6__.updateUserCountText)();\r\n    // Setup delegated events after user list is built\r\n    setupDelegatedEvents();\r\n\r\n  } catch (error) {\r\n    console.error('Error refreshing user list:', error);\r\n  }\r\n}\r\n\r\n// Event delegation setup - Add this at the bottom of your module\r\nfunction setupDelegatedEvents() {\r\n  // Get the main container for event delegation\r\n  const userlistContainer = document.querySelector('.chat-user-list');\r\n\r\n  // Delegated tooltips for userlist elements\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__.createCustomTooltip)(\r\n    '.name,' +\r\n    '.profile,' +\r\n    '.tracked,' +\r\n    '.ignored,' +\r\n    '.moderator',\r\n    userlistContainer,\r\n    (el) => {\r\n      if (el.classList.contains('name')) {\r\n        const userName = el.textContent || '';\r\n        return {\r\n          en: `Private message${userName ? ' to ' + userName : ''}`,\r\n          ru: `Приватное сообщение${userName ? ' для ' + userName : ''}`\r\n        };\r\n      }\r\n      if (el.classList.contains('profile')) {\r\n        // Use data-title attribute for tooltip, fallback to title for compatibility\r\n        const tooltip = el.getAttribute('data-title');\r\n        return {\r\n          en: `\r\n            ${tooltip}\r\n            [Click] to open profile in iframe (summary)\r\n            [Ctrl + Click] to open profile in iframe (messages)\r\n            [Ctrl + Shift + Click] to open profile in a new tab (messages)\r\n          `,\r\n          ru: `\r\n            ${tooltip}\r\n            [Клик] открыть профиль в iframe (сводка)\r\n            [Ctrl + Клик] открыть профиль в iframe (сообщения)\r\n            [Ctrl + Shift + Клик] открыть профиль в новой вкладке (сообщения)\r\n          `\r\n        };\r\n      }\r\n      if (el.classList.contains('tracked')) {\r\n        return {\r\n          en: 'Tracked user',\r\n          ru: 'Отслеживаемый пользователь'\r\n        };\r\n      }\r\n      if (el.classList.contains('ignored')) {\r\n        return {\r\n          en: 'Ignored user',\r\n          ru: 'Игнорируемый пользователь'\r\n        };\r\n      }\r\n      if (el.classList.contains('moderator')) {\r\n        return {\r\n          en: 'Moderator',\r\n          ru: 'Модератор'\r\n        };\r\n      }\r\n      return { en: '', ru: '' };\r\n    },\r\n    true\r\n  );\r\n\r\n  if (!userlistContainer) {\r\n    console.warn('Userlist element not found for event delegation');\r\n    return;\r\n  }\r\n\r\n  // Check if event delegation is already set up to avoid duplicate listeners\r\n  if (userlistContainer.dataset.delegatedEvents) {\r\n    return;\r\n  }\r\n\r\n  // Delegated event handler for all user interactions\r\n  userlistContainer.addEventListener('click', function (event) {\r\n    // Handle profile element clicks\r\n    if (event.target.closest('.profile')) {\r\n      event.preventDefault();\r\n      const profileElement = event.target.closest('.profile');\r\n      const userId = profileElement.parentElement.querySelector('.name').dataset.user;\r\n\r\n      if (event.ctrlKey && event.shiftKey) {\r\n        // If both Ctrl and Shift keys are pressed, open the profile in a new tab (messages)\r\n        const messageInProfile = `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.profileBaseUrl}${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.myUserId}/messages/${userId}/`;\r\n        const newTab = window.open(messageInProfile, '_blank');\r\n        if (newTab) newTab.focus(); // Attempt to make the new tab active\r\n        return;\r\n      } else if (event.ctrlKey) {\r\n        // If only Ctrl is pressed, open the profile into the iframe (messages)\r\n        const messageInProfile = `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.profileBaseUrl}${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.myUserId}/messages/${userId}/`;\r\n        (0,_helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_10__.loadProfileIntoIframe)(messageInProfile);\r\n        return;\r\n      } else {\r\n        // If neither Ctrl nor Shift is pressed, load the profile into the iframe (summary)\r\n        (0,_helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_10__.loadProfileIntoIframe)(_definitions_js__WEBPACK_IMPORTED_MODULE_1__.profileBaseUrl + userId);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Private message handling\r\n    if (event.target.closest('.name')) {\r\n      const nameElement = event.target.closest('.name');\r\n      const userId = nameElement.getAttribute('data-user');\r\n      (0,_chatWorkers_js__WEBPACK_IMPORTED_MODULE_9__.insertPrivate)(userId);\r\n      return;\r\n    }\r\n  });\r\n\r\n  // Mark that event delegation has been set up\r\n  userlistContainer.dataset.delegatedEvents = 'true';\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatUserlist.js?");

/***/ }),

/***/ "./src/chat/chatUsersObserver.js":
/*!***************************************!*\
  !*** ./src/chat/chatUsersObserver.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animateUserCount: () => (/* binding */ animateUserCount),\n/* harmony export */   startChatUserObserver: () => (/* binding */ startChatUserObserver),\n/* harmony export */   updateUserCount: () => (/* binding */ updateUserCount)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chatDomUtils.js */ \"./src/chat/chatDomUtils.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../main.js */ \"./src/main.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _components_notifications_notifications_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/notifications/notifications.js */ \"./src/components/notifications/notifications.js\");\n/* harmony import */ var _chatUserlist_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chatUserlist.js */ \"./src/chat/chatUserlist.js\");\n/* harmony import */ var _components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/voiceEngine.js */ \"./src/components/voiceEngine.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { usersToTrack } = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_9__.settingsState;\r\n\r\nconst userList = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)().userList.general;\r\n\r\nfunction getUserGender(userName) {\r\n  const user = usersToTrack.find((user) => user.name === userName);\r\n  return user ? user.gender : null;\r\n}\r\n\r\n// Initialize user tracking map\r\nlet userMap = new Map(); // Store as [userId]: {userName, ...}\r\nlet prevUserCount = 0;\r\nlet isAnimated = false;\r\n\r\n/**\r\n * Updates the given user count element with the count, adjusting the font size based on the number of digits.\r\n * @param {HTMLElement} element - The DOM element displaying the user count.\r\n * @param {number} count - The user count.\r\n */\r\nfunction updateUserCount(element, count) {\r\n  if (!element) return; // Exit if the element doesn't exist.\r\n  const digits = count.toString().length;\r\n  element.textContent = count;\r\n  element.style.fontSize = Math.max(24 - (digits - 1) * 2, 12) + 'px';\r\n}\r\n\r\n// Function to animate user count change\r\nfunction animateUserCount(actualUserCount, userCountElement) {\r\n  let count = 0;\r\n  const speed = 20;\r\n\r\n  const userCountIncrement = () => {\r\n    if (count <= actualUserCount) {\r\n      const progress = Math.min(count / (actualUserCount || 1), 1); // Handle zero case\r\n      updateUserCount(userCountElement, count++);\r\n      userCountElement.style.filter = `grayscale(${100 - progress * 100}%)`;\r\n      setTimeout(userCountIncrement, speed);\r\n    } else {\r\n      (0,_animations_js__WEBPACK_IMPORTED_MODULE_5__.addPulseEffect)(userCountElement);\r\n      (0,_animations_js__WEBPACK_IMPORTED_MODULE_5__.addJumpEffect)(userCountElement);\r\n      isAnimated = true;\r\n    }\r\n  };\r\n\r\n  setTimeout(userCountIncrement, speed);\r\n}\r\n\r\n// Mutation Observer for new users\r\nconst chatUsersObserver = new MutationObserver((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.debounce)((mutations) => {\r\n  mutations.forEach((mutation) => {\r\n    if (mutation.type === 'childList') {\r\n      const soundSwitcher = document.querySelector('#voice, #beep, #silence');\r\n      const isSilence = soundSwitcher && soundSwitcher.id === 'silence';\r\n      const chatHidden = document.querySelector('#chat-wrapper.chat-hidden');\r\n      const userCountElement = document.querySelector('.participant-count');\r\n\r\n      if (chatHidden) {\r\n        if (userCountElement) {\r\n          // If the chat is hidden, update the user count to 0 and exit early\r\n          userCountElement.style.filter = \"grayscale(100%)\";\r\n          userCountElement.textContent = \"0\";\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Build current user map\r\n      const newUsers = new Map(\r\n        Array.from(userList.children)\r\n          .map(child => {\r\n            const nameElement = child.querySelector('.name');\r\n            const userId = nameElement?.getAttribute('data-user');\r\n            const userName = nameElement?.textContent?.trim();\r\n            return userId ? [userId, { userName }] : null;\r\n          })\r\n          .filter(Boolean) // Remove null entries\r\n      );\r\n\r\n      if (!_main_js__WEBPACK_IMPORTED_MODULE_4__.isInitializedChat) return;\r\n\r\n      if (!isAnimated) {\r\n        if (userCountElement && Number(userCountElement.textContent) === 0) {\r\n          animateUserCount(newUsers.size, userCountElement);\r\n        }\r\n        newUsers.forEach((value, key) => userMap.set(key, value));\r\n        setTimeout(() => {\r\n          isAnimated = true;\r\n        }, 2000);\r\n        return; // Skip processing until the animation done\r\n      }\r\n\r\n      // Detect users who entered (exist in newUsers but not in userMap)\r\n      let entered = [...newUsers].filter(([userId]) => !userMap.has(userId))\r\n        .map(([userId, data]) => ({ userId, ...data }));\r\n\r\n      // Detect users who left (exist in userMap but not in newUsers)\r\n      let left = [...userMap].filter(([userId]) => !newUsers.has(userId))\r\n        .map(([userId, data]) => ({ userId, userName: data.userName }));\r\n\r\n      // Reassign userMap instead of clearing and repopulating it\r\n      userMap = new Map(newUsers);\r\n\r\n      // User count management\r\n      const currentCount = userMap.size;\r\n      if (currentCount !== prevUserCount && isAnimated) {\r\n        if (userCountElement) {  // Ensure userCountElement exists before modifying it\r\n          updateUserCount(userCountElement, currentCount);\r\n          userCountElement.style.filter = currentCount > 0 ? 'none' : 'grayscale(100%)';\r\n          (0,_animations_js__WEBPACK_IMPORTED_MODULE_5__.addPulseEffect)(userCountElement);\r\n        }\r\n      }\r\n\r\n      // Common logic for processing both entered and left users\r\n      function processUserAction(user, actionType) {\r\n        const { userName, userId } = user;\r\n        const userGender = getUserGender(userName);\r\n        const isTracked = usersToTrack.some(u => u.name === userName && u.state === 'thawed');\r\n\r\n        (0,_components_notifications_notifications_js__WEBPACK_IMPORTED_MODULE_6__.showUserAction)(userName, actionType === \"enter\" ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.enterSVG : _icons_js__WEBPACK_IMPORTED_MODULE_0__.leaveSVG, actionType === \"enter\");\r\n        (0,_chatUserlist_js__WEBPACK_IMPORTED_MODULE_7__.refreshUserList)(userName, actionType);\r\n        (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.logUserAction)(userId, actionType);\r\n\r\n        if (!isSilence && isTracked) {\r\n          (0,_components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_8__.userAction)(userName, actionType, userGender);\r\n        }\r\n      }\r\n\r\n      // Process entries\r\n      entered.forEach(newUser => processUserAction(newUser, \"enter\"));\r\n\r\n      // Process exits\r\n      left.forEach(oldUser => processUserAction(oldUser, \"leave\"));\r\n\r\n\r\n      prevUserCount = currentCount; // Update previous count for next mutation\r\n    }\r\n  });\r\n}, _definitions_js__WEBPACK_IMPORTED_MODULE_3__.debounceTimeout));\r\n\r\n// Define a function to start the observer\r\nfunction startChatUserObserver() {\r\n  // Make sure the user list is available before starting the observer\r\n  if (userList) { chatUsersObserver.observe(userList, { childList: true }); }\r\n  else { console.warn('User list not found!'); }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatUsersObserver.js?");

/***/ }),

/***/ "./src/chat/chatWorkers.js":
/*!*********************************!*\
  !*** ./src/chat/chatWorkers.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyDynamicBackgroundColor: () => (/* binding */ applyDynamicBackgroundColor),\n/* harmony export */   getChatSystemMessage: () => (/* binding */ getChatSystemMessage),\n/* harmony export */   groupChatMessages: () => (/* binding */ groupChatMessages),\n/* harmony export */   insertPrivate: () => (/* binding */ insertPrivate),\n/* harmony export */   restoreChatState: () => (/* binding */ restoreChatState),\n/* harmony export */   restoreChatTab: () => (/* binding */ restoreChatTab),\n/* harmony export */   setChatFieldFocus: () => (/* binding */ setChatFieldFocus),\n/* harmony export */   setupChatInputListener: () => (/* binding */ setupChatInputListener),\n/* harmony export */   setupInputBackup: () => (/* binding */ setupInputBackup)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chatDomUtils.js */ \"./src/chat/chatDomUtils.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n // icons\r\n\r\n// helpers\r\n\r\n\r\n\r\n\r\n\r\n// ========================================================================\r\n// DEFINITIONS\r\n// ========================================================================\r\n\r\nconst extraTimeout = 5000;\r\nconst minimalTimeout = 1000;\r\n\r\nconst blockedChatMessage = 'Вы не можете отправлять сообщения';\r\nconst lostConnectionMessage = 'Связь с сервером потеряна';\r\n\r\n// ========================================================================\r\n// HELPER FUNCTIONS\r\n// ========================================================================\r\n\r\n// ---- Set proper background color to user list ----\r\nfunction applyDynamicBackgroundColor() {\r\n  const dynamicBackgroundColor = getComputedStyle(document.querySelector('.chat .messages')).backgroundColor;\r\n  const style = document.createElement('style');\r\n  style.innerHTML = `\r\n    #chat-general .smile-tab, .chat-user-list {\r\n      background-color: ${dynamicBackgroundColor};\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n}\r\n\r\n// ---- Chat System Helpers ----\r\n// Extracts a system message from the chat field's value.\r\n// Returns the message string if found, or null otherwise.\r\nfunction getChatSystemMessage(chatField) {\r\n  if (!chatField) return null;\r\n  const value = chatField.value;\r\n  if (value.includes(blockedChatMessage)) return blockedChatMessage;\r\n  if (value.includes(lostConnectionMessage)) return lostConnectionMessage;\r\n  return null;\r\n}\r\n\r\n// ---- Chat messages grouper ----\r\nfunction groupChatMessages() {\r\n  const messagesContainer = document.getElementById('chat-content');\r\n  const chatMessages = messagesContainer.querySelectorAll('.messages-content div p');\r\n  const spacing = '14px';\r\n\r\n  // Preprocess messages into an array of objects\r\n  const messages = Array.from(chatMessages).map(element => ({\r\n    element,\r\n    isSystem: !!element.querySelector('.system-message'),\r\n    username: (() => {\r\n      const usernameElement = element.querySelector('span.username span[data-user]');\r\n      return usernameElement ? usernameElement.textContent.replace(/[<>]/g, '') : null;\r\n    })()\r\n  }));\r\n\r\n  let previousUser = null;\r\n  let hasPreviousUserMessage = false;\r\n\r\n  messages.forEach((current, index) => {\r\n    const { element, isSystem, username } = current;\r\n\r\n    // Reset margins before applying new styles\r\n    element.style.marginTop = '';\r\n    element.style.marginBottom = '';\r\n\r\n    if (isSystem) {\r\n      element.style.marginTop = spacing;\r\n      element.style.marginBottom = spacing;\r\n      return;\r\n    }\r\n\r\n    if (!username) return;\r\n\r\n    // Apply top margin if user changes (after first message)\r\n    if (hasPreviousUserMessage && username !== previousUser) {\r\n      element.style.marginTop = spacing;\r\n    }\r\n\r\n    // Apply bottom margin if next message is different user\r\n    const next = messages[index + 1];\r\n    if (next && !next.isSystem && next.username !== username) {\r\n      element.style.marginBottom = spacing;\r\n    }\r\n\r\n    previousUser = username;\r\n    hasPreviousUserMessage = true;\r\n  });\r\n}\r\n\r\n// ========================================================================\r\n// CHAT CONNECTION RESTORATION AND UNBLOCK HANDLER\r\n// ========================================================================\r\nif ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gamelist')) {\r\n  // Function to handle changes when the chat field is disabled.\r\n  function handleChatStateChange(timeout, chatField, chatSend) {\r\n    if (chatField.disabled) {\r\n      const systemMessage = getChatSystemMessage(chatField);\r\n      if (systemMessage === blockedChatMessage) {\r\n        // Re-enable the chat field and send button, and update their styles.\r\n        chatField.disabled = chatSend.disabled = false;\r\n        chatSend.style.setProperty('background-color', 'rgb(160, 35, 35)', 'important');\r\n        chatSend.style.setProperty(\r\n          'background-image',\r\n          `url(\"data:image/svg+xml,${encodeURIComponent(_icons_js__WEBPACK_IMPORTED_MODULE_0__.deniedSVG)}\")`,\r\n          'important'\r\n        );\r\n        chatSend.style.setProperty('background-repeat', 'no-repeat', 'important');\r\n        chatSend.style.setProperty('background-position', 'center', 'important');\r\n        chatSend.style.setProperty('color', 'transparent', 'important');\r\n        chatField.value = null;\r\n        console.log('Chat field was blocked, re-enabled.');\r\n      } else if (systemMessage === lostConnectionMessage) {\r\n        // Schedule a reload using timeout.\r\n        console.log('Lost connection, reloading...');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, timeout);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Create a MutationObserver to watch for attribute changes.\r\n  const observer = new MutationObserver(() => {\r\n    // Get updated chat elements.\r\n    const { chatField, chatSend } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n    // Handle the change when the 'disabled' attribute is modified.\r\n    handleChatStateChange(extraTimeout, chatField, chatSend);\r\n  });\r\n\r\n  // Get the chat field element.\r\n  const { chatField: chatInputText } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n  // Start observing the chatField for changes to the 'disabled' attribute.\r\n  if (chatInputText)\r\n    observer.observe(chatInputText, { attributes: true, attributeFilter: ['disabled'] });\r\n\r\n  // Compact visibilitychange event: When the document becomes visible,\r\n  // set a shorter timeout duration and check the chat state.\r\n  document.addEventListener('visibilitychange', () => {\r\n    if (document.visibilityState === 'visible') {\r\n      const { chatField, chatSend } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n      handleChatStateChange(minimalTimeout, chatField, chatSend);\r\n    }\r\n  });\r\n}\r\n\r\n// ========================================================================\r\n// CHAT FOCUS && INSERT PRIVATE\r\n// ========================================================================\r\n\r\nfunction insertPrivate(userId) {\r\n  const userName = document.querySelector(`.name[data-user=\"${userId}\"]`).textContent;\r\n  const message = `<${userName}>`;\r\n\r\n  const textElement = document.querySelector('.messages .text');\r\n  textElement.value = message;\r\n\r\n  textElement.focus();\r\n  textElement.selectionEnd = textElement.value.length;\r\n}\r\n\r\n// Function to set focus on the chat input field based on the active tab.\r\nfunction setChatFieldFocus() {\r\n  const { chatHidden, chatField } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)(); // Get chat field elements\r\n  if (!chatHidden && chatField) {\r\n    chatField.focus(); // Set focus on the chat input field\r\n  }\r\n}\r\n\r\n// ========================================================================\r\n// CHAT SWITCHER  \r\n// ========================================================================\r\n\r\nfunction switchChatByKeydown() {\r\n  const { nextChatTab, chatField, chatHidden } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n\r\n  if (!chatHidden && nextChatTab) {\r\n    nextChatTab.click();\r\n    chatField?.focus();\r\n  }\r\n}\r\n\r\nfunction switchChatByClick(event) {\r\n  console.log('Clicked element:', event.target);\r\n  const activeTab = event.target.classList.contains('general') ? 'general' : 'game';\r\n  localStorage.setItem('activeChatTab', activeTab);\r\n}\r\n\r\n// Function to restore the active chat tab and set focus on the chat input.\r\nfunction restoreChatTab() {\r\n  const { activeChatTab, chatField } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n  activeChatTab?.click();\r\n  chatField?.focus();\r\n}\r\n\r\n// ========================================================================\r\n// CHAT EVENTS & LISTENERS\r\n// ========================================================================\r\n\r\n[...document.querySelectorAll('.general.c, .game.c')].forEach(tab =>\r\n  tab.addEventListener('click', switchChatByClick)\r\n);\r\n\r\ndocument.addEventListener('keydown', event => {\r\n  if (event.key === 'Tab') {\r\n    switchChatByKeydown();\r\n    event.preventDefault();\r\n  }\r\n});\r\n\r\n// ========================================================================\r\n// INPUT BACKUP & RESTORATION\r\n// ========================================================================\r\n// ---- Restore message from backup ----\r\nfunction setupInputBackup() {\r\n  const { chatField } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n  if (chatField) {\r\n    chatField.value = localStorage.getItem('inputBackup') || '';\r\n\r\n    chatField.addEventListener('input', (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.debounce)(() => {\r\n      if (!getChatSystemMessage(chatField)) localStorage.setItem('inputBackup', chatField.value);\r\n    }, 250));\r\n\r\n    chatField.addEventListener('keydown', event => {\r\n      if (event.key === 'Enter') localStorage.removeItem('inputBackup');\r\n    });\r\n  }\r\n}\r\n\r\n// ---- Restore chat state (Opened or Closed) ----\r\nfunction restoreChatState() {\r\n  const chatMainWrapper = document.querySelector('#chat-fixed-placeholder');\r\n  if (!localStorage.getItem('shouldShowPopupMessage')) localStorage.setItem('shouldShowPopupMessage', 'false');\r\n  chatMainWrapper.style.display = JSON.parse(localStorage.getItem('shouldShowPopupMessage')) ? 'none' : 'unset';\r\n}\r\n\r\n// ---- Manual chat (Open and Close) ----\r\nconst chatCloseButton = document.querySelector('.mostright');\r\n\r\n// Check if the current location is 'gmid' or 'gamelist'\r\nif ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gmid') || (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gamelist')) {\r\n  // Event listener for mostright click event\r\n  chatCloseButton.addEventListener('click', () => {\r\n    setTimeout(() => {\r\n      const chatHidden = document.querySelector('#chat-wrapper.chat-hidden');\r\n      if (chatHidden) {\r\n        localStorage.setItem('shouldShowPopupMessage', 'true');\r\n        isInitializedChat = false;\r\n      } else {\r\n        pruneDeletedMessages();\r\n        setChatFieldFocus();\r\n        isInitializedChat = false;\r\n        setTimeout(() => (isInitializedChat = false), 3000);\r\n        localStorage.setItem('shouldShowPopupMessage', 'false');\r\n      }\r\n    }, 300);\r\n  });\r\n}\r\n\r\n// ========================================================================\r\n// MESSAGE SENDING\r\n// ========================================================================\r\n\r\n// Compact function to break text into pieces of up to 300 characters.\r\nfunction breakSentence(text) {\r\n  const maxLength = 300;\r\n  return text.split(' ').reduce((acc, word) => {\r\n    const last = acc[acc.length - 1];\r\n    return (last + ' ' + word).trim().length > maxLength\r\n      ? [...acc, word]\r\n      : [...acc.slice(0, -1), (last + ' ' + word).trim()];\r\n  }, ['']);\r\n}\r\n\r\nasync function sendMessageInParts(message) {\r\n  const pieces = breakSentence(message);\r\n  const { chatField, chatSend } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n  const isLongMessage = message.length > 300;\r\n\r\n  if (isLongMessage) {\r\n    chatField.disabled = true;\r\n  }\r\n\r\n  for (let index = 0; index < pieces.length; index++) {\r\n    const fullMessage = pieces[index];\r\n    chatField.value = fullMessage;\r\n    console.log(`Sending piece ${index + 1}: \"${fullMessage}\" (Length: ${fullMessage.length})`);\r\n    chatSend.click();\r\n\r\n    if (index < pieces.length - 1) {\r\n      const randomDelay = Math.floor(Math.random() * 500) + 500;\r\n      console.log(`Waiting for ${randomDelay} ms before sending the next piece.`);\r\n      await new Promise(resolve => setTimeout(resolve, randomDelay));\r\n    }\r\n  }\r\n\r\n  if (isLongMessage) {\r\n    chatField.disabled = false;\r\n  }\r\n}\r\n\r\n// ========================================================================\r\n// CHAT INPUT EVENTS\r\n// ========================================================================\r\nfunction setupChatInputListener() {\r\n  const { chatField } = (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)();\r\n  chatField.setAttribute('maxlength', '1000');\r\n\r\n  chatField.addEventListener('paste', event => {\r\n    event.preventDefault();\r\n    const pastedValue = event.clipboardData.getData('text');\r\n    let processedValue = pastedValue;\r\n\r\n    if ((0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.isEncodedURL)(pastedValue)) {\r\n      processedValue = (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.decodeURL)(pastedValue);\r\n    }\r\n\r\n    const start = chatField.selectionStart;\r\n    const end = chatField.selectionEnd;\r\n    chatField.value = chatField.value.slice(0, start) + processedValue + chatField.value.slice(end);\r\n    chatField.setSelectionRange(start + processedValue.length, start + processedValue.length);\r\n  });\r\n\r\n  chatField.addEventListener('keydown', event => {\r\n    const message = chatField.value;\r\n    if (event.key === 'Enter') {\r\n      if (message.length > 300) {\r\n        event.preventDefault();\r\n        sendMessageInParts(message);\r\n        console.log(`Long message processed: \"${message}\"`);\r\n        chatField.value = '';\r\n      } else {\r\n        console.log(`Short message processed: \"${message}\"`);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// ---- Chat Toggle (Ctrl + Space) ----\r\n// Check if the current location is 'gmid' or 'gamelist'\r\nif ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gmid') || (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gamelist')) {\r\n  document.addEventListener('keydown', e => {\r\n    if (e.ctrlKey && e.code === 'Space') {\r\n      const chat = document.querySelector('#chat-fixed-placeholder');\r\n      const wasHidden = chat.style.display === 'none';\r\n      chat.style.display = wasHidden ? 'unset' : 'none';\r\n      localStorage.setItem('shouldShowPopupMessage', !wasHidden);\r\n      !wasHidden\r\n        ? document.querySelector('.popup-messages-container')?.remove()\r\n        : (0,_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_2__.getChatElements)().chatField?.focus();\r\n    }\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/chat/chatWorkers.js?");

/***/ }),

/***/ "./src/components/fonts.js":
/*!*********************************!*\
  !*** ./src/components/fonts.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupFonts: () => (/* binding */ setupFonts)\n/* harmony export */ });\n// Font configuration array\r\nconst fonts = [\r\n  { family: 'Montserrat', weights: ['100', '200', '300', '400', '500', '600', '700', '800', '900'] },\r\n  { family: 'Orbitron', weights: ['400', '500', '600', '700', '800', '900'] },\r\n  { family: 'Roboto Mono', weights: ['100', '200', '300', '400', '500', '600', '700'] }\r\n];\r\n\r\n// Helper function to inject individual fonts\r\nfunction appendFontLink(fontFamily, fontWeights) {\r\n  const existingFont = document.querySelector(`.font-${fontFamily.replace(/\\s/g, '-')}`);\r\n  if (!existingFont) {\r\n    const fontLink = document.createElement('link');\r\n    fontLink.rel = 'stylesheet';\r\n    fontLink.href = `https://fonts.googleapis.com/css2?family=${fontFamily.replace(/\\s/g, '+')}:wght@${fontWeights.join(';')}&display=swap`;\r\n    fontLink.classList.add(`font-${fontFamily.replace(/\\s/g, '-')}`);\r\n    document.head.appendChild(fontLink);\r\n  }\r\n}\r\n\r\nasync function setupFonts() {\r\n  try {\r\n    fonts.forEach(font => {\r\n      appendFontLink(font.family, font.weights);\r\n    });\r\n  } catch (error) {\r\n    console.error('Font loading failed:', error);\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/fonts.js?");

/***/ }),

/***/ "./src/components/mode/messageMode.js":
/*!********************************************!*\
  !*** ./src/components/mode/messageMode.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMessageModeButton: () => (/* binding */ createMessageModeButton)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/hotkeyState.js */ \"./src/helpers/hotkeyState.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tooltip.js */ \"./src/components/tooltip.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet messageMode, messageModeIcon;\r\n\r\nfunction createMessageModeButton(panel) {\r\n  const tooltipTexts = {\r\n    'every-message': { en: 'Notify about every message', ru: 'Уведомлять о каждом сообщении' },\r\n    'mention-message': { en: 'Notify about mention message', ru: 'Уведомлять только о сообщениях с упоминанием' }\r\n  };\r\n  messageMode = document.createElement('div');\r\n  const state = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageModeState || 'every-message';\r\n  messageMode.classList.add(\"empowerment-button\", \"message-mode-button\");\r\n  messageMode.id = state;\r\n  (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(messageMode, tooltipTexts[state]);\r\n\r\n  messageModeIcon = document.createElement('span');\r\n  messageModeIcon.classList.add('message-mode-icon');\r\n  messageMode.appendChild(messageModeIcon);\r\n  panel.appendChild(messageMode);\r\n\r\n  messageMode.addEventListener('click', function () {\r\n    if (!_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__.isCtrlKeyPressed && !_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__.isAltKeyPressed) {\r\n      (0,_animations_js__WEBPACK_IMPORTED_MODULE_3__.addPulseEffect)(this);\r\n      if (this.id === 'every-message') {\r\n        this.id = 'mention-message';\r\n        (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(this, tooltipTexts['mention-message']);\r\n        _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageModeState = 'mention-message';\r\n        _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageModeTitle = tooltipTexts['mention-message'].en;\r\n      } else {\r\n        this.id = 'every-message';\r\n        (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(this, tooltipTexts['every-message']);\r\n        _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageModeState = 'every-message';\r\n        _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageModeTitle = tooltipTexts['every-message'].en;\r\n      }\r\n      localStorage.setItem('KG_Chat_Empowerment', JSON.stringify(_panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment));\r\n      updateMessageModeIcon();\r\n    }\r\n  });\r\n  updateMessageModeIcon();\r\n}\r\n\r\nfunction updateMessageModeIcon() {\r\n  messageModeIcon.innerHTML = messageMode.id === 'every-message' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.modeEverySVG : _icons_js__WEBPACK_IMPORTED_MODULE_0__.modeMentionSVG;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/mode/messageMode.js?");

/***/ }),

/***/ "./src/components/mode/soundMode.js":
/*!******************************************!*\
  !*** ./src/components/mode/soundMode.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSoundSwitcherButton: () => (/* binding */ createSoundSwitcherButton),\n/* harmony export */   voicePitch: () => (/* binding */ voicePitch),\n/* harmony export */   voiceSpeed: () => (/* binding */ voiceSpeed)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/hotkeyState.js */ \"./src/helpers/hotkeyState.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet voiceSpeed = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.voiceSettings.voiceSpeed ?? _definitions_js__WEBPACK_IMPORTED_MODULE_5__.defaultVoiceSpeed;\r\nlet voicePitch = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.voiceSettings.voicePitch ?? _definitions_js__WEBPACK_IMPORTED_MODULE_5__.defaultVoicePitch;\r\n\r\n// Declare variables for the sound switcher button and its icon\r\nlet soundSwitcher, soundSwitcherIcon;\r\n\r\nfunction createSoundSwitcherButton(panel) {\r\n  const tooltipTexts = {\r\n    silence: { en: 'Do not disturb', ru: 'Не беспокоить' },\r\n    beep: { en: 'Notify with beep signal', ru: 'Уведомлять звуковым сигналом' },\r\n    voice: { en: 'Notify with voice API', ru: 'Уведомлять голосом' }\r\n  };\r\n  soundSwitcher = document.createElement('div');\r\n  const state = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationState || 'silence';\r\n  soundSwitcher.classList.add(\"empowerment-button\", \"sound-switcher-button\");\r\n  soundSwitcher.id = state;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(soundSwitcher, tooltipTexts[state]);\r\n\r\n  soundSwitcherIcon = document.createElement('span');\r\n  soundSwitcherIcon.classList.add('sound-switcher-icon');\r\n  soundSwitcher.appendChild(soundSwitcherIcon);\r\n  panel.appendChild(soundSwitcher);\r\n\r\n  soundSwitcher.addEventListener('click', function () {\r\n    if (!_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__.isCtrlKeyPressed && !_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__.isAltKeyPressed) {\r\n      document.querySelector('.current-voice-speed')?.remove();\r\n      document.querySelector('.current-voice-pitch')?.remove();\r\n      (0,_animations_js__WEBPACK_IMPORTED_MODULE_3__.addPulseEffect)(this);\r\n      switch (this.id) {\r\n        case 'silence':\r\n          this.id = 'beep';\r\n          (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(this, tooltipTexts['beep']);\r\n          _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationState = 'beep';\r\n          _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationTitle = tooltipTexts['beep'].en;\r\n          break;\r\n        case 'beep':\r\n          this.id = 'voice';\r\n          (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(this, tooltipTexts['voice']);\r\n          _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationState = 'voice';\r\n          _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationTitle = tooltipTexts['voice'].en;\r\n          break;\r\n        case 'voice':\r\n          this.id = 'silence';\r\n          (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(this, tooltipTexts['silence']);\r\n          _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationState = 'silence';\r\n          _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.messageSettings.messageNotificationTitle = tooltipTexts['silence'].en;\r\n          break;\r\n      }\r\n      localStorage.setItem('KG_Chat_Empowerment', JSON.stringify(_panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment));\r\n      updateSoundSwitcherIcon();\r\n    }\r\n  });\r\n\r\n  soundSwitcher.addEventListener('mousedown', handleMouseDown);\r\n  soundSwitcher.addEventListener('contextmenu', e => e.preventDefault());\r\n  updateSoundSwitcherIcon();\r\n}\r\n\r\nfunction updateSoundSwitcherIcon() {\r\n  soundSwitcherIcon.innerHTML =\r\n    soundSwitcher.id === 'silence' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.silenceSVG :\r\n      soundSwitcher.id === 'beep' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.beepSVG : _icons_js__WEBPACK_IMPORTED_MODULE_0__.voiceSVG;\r\n}\r\n\r\nfunction getVoiceSettingsPercentage() {\r\n  return {\r\n    speed: `${((voiceSpeed - _definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoiceSpeed) / (_definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoiceSpeed - _definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoiceSpeed)) * 100}%`,\r\n    pitch: `${((voicePitch - _definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoicePitch) / (_definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoicePitch - _definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoicePitch)) * 100}%`\r\n  };\r\n}\r\n\r\nfunction showVoiceSettings() {\r\n  let voiceSettings = document.querySelector('.voice-settings'),\r\n    currentSpeed = document.querySelector('.current-voice-speed'),\r\n    currentPitch = document.querySelector('.current-voice-pitch');\r\n\r\n  if (_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__.isCtrlKeyPressed) {\r\n    if (!voiceSettings) {\r\n      voiceSettings = document.createElement('div');\r\n      voiceSettings.classList.add('voice-settings');\r\n      soundSwitcher.appendChild(voiceSettings);\r\n      void voiceSettings.offsetWidth;\r\n      voiceSettings.style.opacity = '1';\r\n    }\r\n    currentPitch?.remove();\r\n    if (!currentSpeed) {\r\n      currentSpeed = document.createElement('span');\r\n      currentSpeed.classList.add('current-voice-speed');\r\n      voiceSettings.appendChild(currentSpeed);\r\n    }\r\n    let speedInfo = currentSpeed.querySelector('.voice-value-info') || document.createElement('span');\r\n    if (!currentSpeed.querySelector('.voice-value-info')) {\r\n      speedInfo.classList.add(\"voice-speed\", \"voice-value-info\");\r\n      currentSpeed.appendChild(speedInfo);\r\n    }\r\n    speedInfo.innerHTML = (voiceSpeed <= _definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoiceSpeed || voiceSpeed >= _definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoiceSpeed)\r\n      ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.rangeIsOutSVG : `SPEED ${Number(voiceSpeed).toFixed(1)}`;\r\n    let speedProgress = currentSpeed.querySelector('.voice-speed-progress') || document.createElement('span');\r\n    if (!currentSpeed.querySelector('.voice-speed-progress')) {\r\n      speedProgress.classList.add('voice-speed-progress');\r\n      const fill = document.createElement('span');\r\n      fill.classList.add('voice-speed-progress-fill');\r\n      speedProgress.appendChild(fill);\r\n      currentSpeed.appendChild(speedProgress);\r\n    }\r\n    currentSpeed.querySelector('.voice-speed-progress-fill').style.width = getVoiceSettingsPercentage().speed;\r\n    if (voiceSettings.timeoutId) clearTimeout(voiceSettings.timeoutId);\r\n    voiceSettings.timeoutId = setTimeout(() => {\r\n      voiceSettings.style.opacity = '0';\r\n      setTimeout(() => voiceSettings.remove(), 500);\r\n    }, 2000);\r\n  } else if (_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_2__.isAltKeyPressed) {\r\n    if (!voiceSettings) {\r\n      voiceSettings = document.createElement('div');\r\n      voiceSettings.classList.add('voice-settings');\r\n      soundSwitcher.appendChild(voiceSettings);\r\n      void voiceSettings.offsetWidth;\r\n      voiceSettings.style.opacity = '1';\r\n    }\r\n    currentSpeed?.remove();\r\n    if (!currentPitch) {\r\n      currentPitch = document.createElement('span');\r\n      currentPitch.classList.add('current-voice-pitch');\r\n      voiceSettings.appendChild(currentPitch);\r\n    }\r\n    let pitchInfo = currentPitch.querySelector('.voice-value-info') || document.createElement('span');\r\n    if (!currentPitch.querySelector('.voice-value-info')) {\r\n      pitchInfo.classList.add(\"voice-pitch\", \"voice-value-info\");\r\n      currentPitch.appendChild(pitchInfo);\r\n    }\r\n    pitchInfo.innerHTML = (voicePitch <= _definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoicePitch || voicePitch >= _definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoicePitch)\r\n      ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.rangeIsOutSVG : `PITCH ${voicePitch.toFixed(1)}`;\r\n    let pitchProgress = currentPitch.querySelector('.voice-pitch-progress') || document.createElement('span');\r\n    if (!currentPitch.querySelector('.voice-pitch-progress')) {\r\n      pitchProgress.classList.add('voice-pitch-progress');\r\n      const fill = document.createElement('span');\r\n      fill.classList.add('voice-pitch-progress-fill');\r\n      pitchProgress.appendChild(fill);\r\n      currentPitch.appendChild(pitchProgress);\r\n    }\r\n    currentPitch.querySelector('.voice-pitch-progress-fill').style.width = getVoiceSettingsPercentage().pitch;\r\n    if (voiceSettings.timeoutId) clearTimeout(voiceSettings.timeoutId);\r\n    voiceSettings.timeoutId = setTimeout(() => {\r\n      voiceSettings.style.opacity = '0';\r\n      setTimeout(() => voiceSettings.remove(), 500);\r\n    }, 2000);\r\n  } else {\r\n    voiceSettings?.remove();\r\n  }\r\n}\r\n\r\nlet holdTimeout = null, holdInterval = null;\r\n\r\nfunction handleMouseDown(event) {\r\n  event.preventDefault();\r\n  const params = getAdjustmentParams(event);\r\n  if (!params) return;\r\n  const { prop, step } = params;\r\n  adjustValue(prop, step);\r\n  holdTimeout = setTimeout(() => {\r\n    holdInterval = setInterval(() => {\r\n      if (!adjustValue(prop, step)) clearInterval(holdInterval);\r\n    }, 100);\r\n  }, 500);\r\n  const stopHolding = () => {\r\n    clearTimeout(holdTimeout);\r\n    clearInterval(holdInterval);\r\n    soundSwitcher.removeEventListener('mouseup', stopHolding);\r\n    soundSwitcher.removeEventListener('mouseleave', stopHolding);\r\n  };\r\n  soundSwitcher.addEventListener('mouseup', stopHolding);\r\n  soundSwitcher.addEventListener('mouseleave', stopHolding);\r\n}\r\n\r\nfunction getAdjustmentParams(event) {\r\n  const isLeft = event.button === 0, isCtrl = event.ctrlKey || event.metaKey, isAlt = event.altKey;\r\n  if (!isCtrl && !isAlt) return null;\r\n  const prop = isCtrl ? 'voiceSpeed' : 'voicePitch', step = isLeft ? -0.1 : 0.1;\r\n  const current = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.voiceSettings[prop];\r\n  const [min, max] = prop === 'voiceSpeed'\r\n    ? [_definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoiceSpeed, _definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoiceSpeed]\r\n    : [_definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoicePitch, _definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoicePitch];\r\n  return (step < 0 && current <= min) || (step > 0 && current >= max) ? null : { prop, step };\r\n}\r\n\r\nfunction adjustValue(prop, step) {\r\n  const current = parseFloat(_panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.voiceSettings[prop]);\r\n  const [min, max] = prop === 'voiceSpeed'\r\n    ? [_definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoiceSpeed, _definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoiceSpeed]\r\n    : [_definitions_js__WEBPACK_IMPORTED_MODULE_5__.minVoicePitch, _definitions_js__WEBPACK_IMPORTED_MODULE_5__.maxVoicePitch];\r\n  const clamped = Math.min(max, Math.max(min, current + step));\r\n  if (current === clamped) return false;\r\n  updateVoiceSetting(prop, clamped);\r\n  return step > 0 ? clamped < max : clamped > min;\r\n}\r\n\r\nfunction updateVoiceSetting(prop, value) {\r\n  const rounded = parseFloat(value.toFixed(1));\r\n  _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment.voiceSettings[prop] = rounded;\r\n  if (prop === 'voiceSpeed') voiceSpeed = rounded;\r\n  else if (prop === 'voicePitch') voicePitch = rounded;\r\n  localStorage.setItem('KG_Chat_Empowerment', JSON.stringify(_panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_1__.KG_Chat_Empowerment));\r\n  showVoiceSettings();\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/mode/soundMode.js?");

/***/ }),

/***/ "./src/components/notifications/notifications.js":
/*!*******************************************************!*\
  !*** ./src/components/notifications/notifications.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStaticNotification: () => (/* binding */ createStaticNotification),\n/* harmony export */   showUserAction: () => (/* binding */ showUserAction)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _notificationsHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./notificationsHelpers.js */ \"./src/components/notifications/notificationsHelpers.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n\r\n\r\n\r\n\r\nconst { usersToTrack } = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__.settingsState;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Helper for pausing execution\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Creates the action icon element\r\nfunction createActionIcon(iconType) {\r\n  const actionIcon = document.createElement('span');\r\n  actionIcon.classList.add('action-icon');\r\n  actionIcon.style.margin = '0 4px';\r\n  actionIcon.style.setProperty('border', 'none', 'important');\r\n  actionIcon.innerHTML = iconType;\r\n  return actionIcon;\r\n}\r\n\r\n// Function to create and display a static notification\r\nfunction createStaticNotification(user, iconType, time, presence, containerType) {\r\n  // Define a mapping for container types to their respective selectors\r\n  const containerSelectors = {\r\n    generalChat: '.messages-content div', // For general chat notifications\r\n    cachePanel: '.fetched-users .action-log' // For cache notifications\r\n  };\r\n\r\n  // Get the container based on the passed containerType\r\n  const containerSelector = containerSelectors[containerType];\r\n\r\n  // If the container selector is not defined, return\r\n  if (!containerSelector) {\r\n    console.error(\"Invalid or missing container. Please provide 'generalChat' or 'cachePanel'.\");\r\n    return;\r\n  }\r\n\r\n  const staticNotificationsContainer = document.querySelector(containerSelector);\r\n  if (!staticNotificationsContainer) {\r\n    console.error(\"Container not found in DOM.\");\r\n    return;\r\n  }\r\n\r\n  // Add a class to the container based on the container type\r\n  staticNotificationsContainer.classList.add(\r\n    containerType === 'generalChat'\r\n      ? 'static-chat-notifications-container'\r\n      : 'static-cache-notifications-container'\r\n  );\r\n\r\n  // Create the action icon based on the iconType provided\r\n  const staticChatNotification = document.createElement('span');\r\n  staticChatNotification.classList.add('static-chat-notification');\r\n\r\n  // Add double-click listener to purge notifications only if using the generalChat container\r\n  if (containerType === 'generalChat') {\r\n    staticChatNotification.addEventListener('dblclick', () => {\r\n      purgeStaticChatNotifications();\r\n    });\r\n  }\r\n\r\n  // Create the user element\r\n  const userElement = document.createElement('span');\r\n  userElement.classList.add(\"action-user\");\r\n  userElement.textContent = user;\r\n\r\n  // Create the action icon based on the iconType provided\r\n  const actionIcon = createActionIcon(iconType);\r\n\r\n  // Create the time element\r\n  const timeElement = document.createElement('span');\r\n  timeElement.classList.add(\"action-time\");\r\n  timeElement.textContent = time;\r\n\r\n  // Append elements in order: user span, action icon, time span\r\n  staticChatNotification.appendChild(userElement);\r\n  staticChatNotification.appendChild(actionIcon);\r\n  staticChatNotification.appendChild(timeElement);\r\n\r\n  // Store username and time as data attributes for easy access later\r\n  staticChatNotification.dataset.username = user;\r\n  staticChatNotification.dataset.time = time;\r\n\r\n  // Style based on presence\r\n  if (presence) {\r\n    staticChatNotification.classList.add('user-enter');\r\n  } else {\r\n    staticChatNotification.classList.add('user-left');\r\n  }\r\n\r\n  // Append the notification to the selected container\r\n  staticNotificationsContainer.appendChild(staticChatNotification);\r\n\r\n  // Use the custom tooltip when the user enters the static notification\r\n  staticChatNotification.addEventListener('mouseover', () => {\r\n    // Use dataset to get the username and time from the static notification\r\n    const usernameData = staticChatNotification.dataset.username;\r\n    const timeData = staticChatNotification.dataset.time;\r\n    // Get the user chat duration and pass it to the custom tooltip\r\n    const title = (0,_notificationsHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getUserChatDuration)(usernameData, timeData);\r\n    // Create and display the custom tooltip\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(staticChatNotification, title);\r\n  });\r\n}\r\n\r\n// Function to create and animate a dynamic notification\r\nfunction createDynamicNotification(user, iconType, time, presence) {\r\n  let dynamicChatNotificationsContainer = document.querySelector('.dynamic-chat-notifications-container');\r\n  // Create container if it doesn't exist\r\n  if (!dynamicChatNotificationsContainer) {\r\n    dynamicChatNotificationsContainer = document.createElement('div');\r\n    dynamicChatNotificationsContainer.classList.add('dynamic-chat-notifications-container');\r\n    document.body.appendChild(dynamicChatNotificationsContainer);\r\n  }\r\n\r\n  // Create the notification element\r\n  const dynamicChatNotification = document.createElement('span');\r\n  dynamicChatNotification.classList.add('dynamic-chat-notification');\r\n\r\n  // Create user element\r\n  const userElement = document.createElement('span');\r\n  userElement.classList.add(\"action-user\");\r\n  userElement.textContent = user;\r\n\r\n  // Create the action icon based on the iconType provided\r\n  const actionIcon = createActionIcon(iconType);\r\n\r\n  // Create time element\r\n  const timeElement = document.createElement('span');\r\n  timeElement.classList.add(\"action-time\");\r\n  timeElement.textContent = time;\r\n\r\n  // Append elements in order: user span, action icon, time span\r\n  dynamicChatNotification.appendChild(userElement);\r\n  dynamicChatNotification.appendChild(actionIcon);\r\n  dynamicChatNotification.appendChild(timeElement);\r\n\r\n  // Store username and time as data attributes for easy access later\r\n  dynamicChatNotification.dataset.username = user;\r\n  dynamicChatNotification.dataset.time = time;\r\n\r\n  // Set colorization based on presence\r\n  if (presence) {\r\n    dynamicChatNotification.classList.add('user-enter');\r\n  } else {\r\n    dynamicChatNotification.classList.add('user-left');\r\n  }\r\n\r\n  // Append to the container\r\n  dynamicChatNotificationsContainer.appendChild(dynamicChatNotification);\r\n\r\n  // Use the custom tooltip when the user enters the static notification\r\n  dynamicChatNotification.addEventListener('mouseover', () => {\r\n    // Use dataset to get the username and time from the static notification\r\n    const usernameData = dynamicChatNotification.dataset.username;\r\n    const timeData = dynamicChatNotification.dataset.time;\r\n    // Get the user chat duration and pass it to the custom tooltip\r\n    const title = (0,_notificationsHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getUserChatDuration)(usernameData, timeData);\r\n    // Create and display the custom tooltip\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(dynamicChatNotification, title);\r\n  });\r\n\r\n  // Animate: slide in, then slide out and remove\r\n  setTimeout(() => {\r\n    dynamicChatNotification.style.transform = 'translateX(0)';\r\n    setTimeout(() => {\r\n      dynamicChatNotification.style.transform = 'translateX(-100%)';\r\n      setTimeout(() => {\r\n        dynamicChatNotificationsContainer.removeChild(dynamicChatNotification);\r\n      }, 300); // after slide-out animation\r\n    }, _definitions_js__WEBPACK_IMPORTED_MODULE_0__.dynamicChatNotificationTimeout);\r\n  }, 300);\r\n}\r\n\r\n// Global queue and state for dynamic notifications\r\nconst notificationQueue = [];\r\nlet processingQueue = false;\r\nconst delayBetween = 500; // 500 ms delay\r\n\r\n// Function to process the queue one notification at a time\r\nfunction processQueue() {\r\n  if (notificationQueue.length === 0) {\r\n    processingQueue = false;\r\n    return;\r\n  }\r\n  processingQueue = true;\r\n  const { user, iconType, time, presence } = notificationQueue.shift();\r\n  createDynamicNotification(user, iconType, time, presence);\r\n  setTimeout(processQueue, delayBetween);\r\n}\r\n\r\n// Enqueue a new dynamic notification\r\nfunction enqueueNotification(user, iconType, time, presence) {\r\n  notificationQueue.push({ user, iconType, time, presence });\r\n  if (!processingQueue) {\r\n    processQueue();\r\n  }\r\n}\r\n\r\n// Main function updated to use the queue for dynamic notifications\r\nfunction showUserAction(user, iconType, presence) {\r\n  // Check if the user is tracked and in the correct state\r\n  const isTrackedUser = usersToTrack.some(\r\n    (trackedUser) => trackedUser.name === user && trackedUser.state === 'thawed'\r\n  );\r\n\r\n  const shouldShowStatic = isTrackedUser && (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__.shouldEnable)('notifications', 'static');\r\n  const shouldShowDynamic = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__.shouldEnable)('notifications', 'dynamic');\r\n\r\n  // Exit early if no notification type is enabled\r\n  if (!shouldShowStatic && !shouldShowDynamic) return;\r\n\r\n  // Get current time formatted as [HH:MM:SS]\r\n  const time = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentTimeString)();\r\n\r\n  // Show static notification if applicable\r\n  if (shouldShowStatic && isTrackedUser) {\r\n    createStaticNotification(user, iconType, time, presence, 'generalChat');\r\n    (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_5__.scrollToBottom)('generalMessages', 350);\r\n  }\r\n\r\n  // Instead of immediately creating a dynamic notification, enqueue it\r\n  if (shouldShowDynamic) {\r\n    enqueueNotification(user, iconType, time, presence);\r\n  }\r\n}\r\n\r\n// NOTIFICATIONS TERMINATOR \r\n\r\nasync function purgeStaticChatNotifications(\r\n  removalDelay = 40,\r\n  scrollDuration = 600,\r\n  animationDuration = 140\r\n) {\r\n  const chat = document.querySelector(\".messages-content\");\r\n  if (!chat) return;\r\n\r\n  // Save original scroll behavior and set to smooth once\r\n  const originalScrollBehavior = chat.style.scrollBehavior;\r\n  chat.style.scrollBehavior = 'smooth';\r\n\r\n  const elements = [...document.querySelectorAll('.static-chat-notification')].reverse();\r\n\r\n  for (const el of elements) {\r\n    const needsScroll = !(0,_notificationsHelpers_js__WEBPACK_IMPORTED_MODULE_1__.isVisibleInContainer)(el, chat);\r\n\r\n    if (needsScroll) {\r\n      // Smooth scroll to element\r\n      chat.scrollTop = el.offsetTop - chat.offsetTop - chat.clientHeight / 2;\r\n      await sleep(scrollDuration);\r\n    }\r\n\r\n    Object.assign(el.style, {\r\n      transition: [\r\n        `opacity ${animationDuration / 1000}s cubic-bezier(.3,.1,1,.1)`,\r\n        `transform ${animationDuration / 1000}s cubic-bezier(0,.7,.3,0.95)`\r\n      ].join(','),\r\n      opacity: 0,\r\n      transformOrigin: 'left',\r\n      transform: 'translateX(8em) skewX(-20deg)'\r\n    });\r\n\r\n    // Wait for animation to complete before removal\r\n    await sleep(animationDuration);\r\n    el.remove();\r\n\r\n    // Standard delay between elements\r\n    await sleep(removalDelay);\r\n  }\r\n\r\n  // Final scroll to bottom only if needed\r\n  const isAtBottom = chat.scrollHeight - chat.scrollTop <= chat.clientHeight;\r\n  if (!isAtBottom) {\r\n    chat.scrollTop = chat.scrollHeight;\r\n    await sleep(scrollDuration);\r\n  }\r\n\r\n  // Restore original scroll behavior\r\n  chat.style.scrollBehavior = originalScrollBehavior;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/notifications/notifications.js?");

/***/ }),

/***/ "./src/components/notifications/notificationsHelpers.js":
/*!**************************************************************!*\
  !*** ./src/components/notifications/notificationsHelpers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserChatDuration: () => (/* binding */ getUserChatDuration),\n/* harmony export */   isVisibleInContainer: () => (/* binding */ isVisibleInContainer)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\nlet lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentLanguage)();\r\n\r\nconst icons = {\r\n  'first': '🙌',\r\n  'crossed': '❌',\r\n  'check': '✅',\r\n  'stop': '🛑'\r\n};\r\n\r\nfunction getUserChatDuration(username, actionTime) {\r\n  // Retrieve stored user data and find the target user by login\r\n  const user = Object.values(JSON.parse(localStorage.getItem('fetchedUsers') || '[]'))\r\n    .find(u => u?.login === username);\r\n  if (!user) return\r\n  (lang === 'en')\r\n    ? `${icons.crossed} User \"${username}\" not found`\r\n    : `${icons.crossed} Пользователь \"${username}\" не найден`;\r\n\r\n  const actionLog = user.actionLog || [];\r\n  const current = actionLog.find(entry => entry.timestamp === actionTime);\r\n  if (!current) return\r\n  (lang === 'en')\r\n    ? `${icons.crossed} Action not found at ${actionTime}`\r\n    : `${icons.crossed} Действие не найдено в ${actionTime}`; \r\n\r\n  const actionIndex = actionLog.indexOf(current);\r\n  if (actionIndex === 0) return (lang === 'en')\r\n    ? `${icons.first} ${username}'s first action`\r\n    : `${icons.first} ${username} первое действие`;\r\n\r\n  // Find the most recent action before the current one that has a different type\r\n  const prev = actionLog.slice(0, actionIndex).reverse().find(a => a.type !== current.type);\r\n  if (!prev) return (lang === 'en')\r\n    ? `${icons.crossed} No valid previous action found for ${actionTime}`\r\n    : `${icons.crossed} Не найдено предыдущего действия для ${actionTime}`;\r\n\r\n  // Calculate the duration between the two timestamps\r\n  const duration = calculateDuration(prev.timestamp, current.timestamp);\r\n  return current.type === 'leave'\r\n    ? (lang === 'en')\r\n      ? `${icons.stop} ${username} left the chat after ${duration}`\r\n      : `${icons.stop} ${username} покинул чат спустя ${duration}`\r\n    : (lang === 'en')\r\n      ? `${icons.check} ${username} stayed in chat for ${duration}`\r\n      : `${icons.check} ${username} остался в чате на ${duration}`;\r\n}\r\n\r\nfunction calculateDuration(start, end) {\r\n  const toSeconds = t => t.split(':').reduce((acc, val, i) =>\r\n    acc + val * [3600, 60, 1][i], 0); // Convert HH:MM:SS to total seconds\r\n\r\n  const diff = Math.abs(toSeconds(end) - toSeconds(start)); // Get absolute difference in seconds\r\n\r\n  return [\r\n    Math.floor(diff / 3600), // Hours\r\n    Math.floor((diff % 3600) / 60), // Minutes\r\n    diff % 60 // Seconds\r\n  ].map(n => n.toString().padStart(2, '0')).join(':'); // Format as HH:MM:SS\r\n}\r\n\r\nfunction isVisibleInContainer(el, container) {\r\n  const containerRect = container.getBoundingClientRect();\r\n  const elRect = el.getBoundingClientRect();\r\n  return (\r\n    elRect.top >= containerRect.top &&\r\n    elRect.bottom <= containerRect.bottom\r\n  );\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/notifications/notificationsHelpers.js?");

/***/ }),

/***/ "./src/components/participantCount.js":
/*!********************************************!*\
  !*** ./src/components/participantCount.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createChatUserCounter: () => (/* binding */ createChatUserCounter)\n/* harmony export */ });\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip.js */ \"./src/components/tooltip.js\");\n\r\n\r\nconst rankData = {\r\n  extra: '🚀',\r\n  cyber: '🤖',\r\n  superman: '👊',\r\n  maniac: '🔪',\r\n  racer: '⚡️',\r\n  profi: '💼',\r\n  driver: '🚖',\r\n  amateur: '🍆',\r\n  newbie: '🐥'\r\n};\r\n\r\nfunction createChatUserCounter(panel, initialCount = 0) {\r\n  const counter = document.createElement('div');\r\n  counter.classList.add(\"participant-count\");\r\n  counter.innerHTML = initialCount.toString();\r\n  if (panel) panel.appendChild(counter);\r\n\r\n  // Function to get the latest rank keys and compute user counts\r\n  function getUpdatedUserCounts() {\r\n    const ranks = Object.keys(rankData);\r\n    return ranks.reduce((counts, rank) => {\r\n      const count = document.getElementsByClassName(rank).length;\r\n      if (count > 0) {\r\n        counts.push(`${rankData[rank]}&nbsp;${count}&nbsp;`);\r\n      }\r\n      return counts;\r\n    }, []);\r\n  }\r\n\r\n  // Function to update the tooltip with current data\r\n  function updateTooltip() {\r\n    const userCounts = getUpdatedUserCounts();\r\n    const tooltipText = userCounts.join(\" \");\r\n    (0,_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(counter, tooltipText);\r\n  }\r\n\r\n  counter.addEventListener(\"mouseover\", updateTooltip);\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/participantCount.js?");

/***/ }),

/***/ "./src/components/popupLengthIndicator.js":
/*!************************************************!*\
  !*** ./src/components/popupLengthIndicator.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initChatEvents: () => (/* binding */ initChatEvents)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _chat_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chat/chatDomUtils.js */ \"./src/chat/chatDomUtils.js\");\n\r\n\r\n\r\n// Select the input element and length popup container using the helper function\r\nconst { chatField, messagesContainer } = (0,_chat_chatDomUtils_js__WEBPACK_IMPORTED_MODULE_1__.getChatElements)();\r\n\r\nlet lengthPopup = null;  // Initially set lengthPopup to null\r\n\r\n// Function to create and append the length popup\r\nfunction createLengthPopup() {\r\n  // Check if the current location is 'gmid' or 'gamelist'\r\n  if (!((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.locationHas)('gmid') || (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.locationHas)('gamelist'))) return;\r\n\r\n  // Create the length popup if the condition is met\r\n  lengthPopup = document.createElement('div');\r\n  lengthPopup.className = 'length-field-popup';\r\n  messagesContainer.appendChild(lengthPopup);\r\n} createLengthPopup();\r\n\r\n// Initialize once at startup\r\nconst textMeasurementCanvas = document.createElement('canvas');\r\nconst textMeasurementContext = textMeasurementCanvas.getContext('2d');\r\n\r\nlet isPopupVisible = false;\r\nlet previousLength = 0;\r\nlet hidePopupTimeout;\r\n\r\n// Function to update the color of the length popup\r\nfunction updateLengthPopupColor(length) {\r\n  if (!lengthPopup) {\r\n    console.error('lengthPopup is not defined');\r\n    return;\r\n  }\r\n\r\n  let textColor;\r\n\r\n  // Determine color based on the length\r\n  if (length === 0) {\r\n    textColor = 'hsl(200, 20%, 50%)'; // Light Blue\r\n  } else if (length >= 1 && length <= 90) {\r\n    textColor = 'hsl(120, 100%, 40%)'; // Bright Green\r\n  } else if (length > 90 && length <= 100) {\r\n    const factor = (length - 90) / 10;\r\n    const h = Math.round(120 + factor * (60 - 120)); // Interpolating hue\r\n    textColor = `hsl(${h}, 100%, 40%)`;\r\n  } else if (length > 100 && length <= 190) {\r\n    textColor = 'hsl(60, 100%, 50%)'; // Bright Yellow\r\n  } else if (length > 190 && length <= 200) {\r\n    const factor = (length - 190) / 10;\r\n    const h = Math.round(60 + factor * (30 - 60)); // Interpolating hue\r\n    textColor = `hsl(${h}, 100%, 50%)`;\r\n  } else if (length > 200 && length <= 250) {\r\n    textColor = 'hsl(40, 100%, 50%)'; // Orange (Updated)\r\n  } else if (length > 250 && length <= 300) {\r\n    const factor = (length - 250) / 50;\r\n    const h = Math.round(40 + factor * (0 - 40)); // Interpolating hue\r\n    textColor = `hsl(${h}, 100%, 70%)`;\r\n  } else {\r\n    textColor = 'hsl(0, 100%, 70%)'; // Red (Updated)\r\n  }\r\n\r\n  // Apply the text color to the length popup\r\n  lengthPopup.style.color = textColor;\r\n}\r\n\r\n// Then use them in your measurement function\r\nfunction updatePopupMetrics(text) {\r\n  // Get current font from input field\r\n  const computedStyle = getComputedStyle(chatField);\r\n  textMeasurementContext.font = `${computedStyle.fontWeight} ${computedStyle.fontSize} ${computedStyle.fontFamily}`;\r\n\r\n  // Measure text\r\n  const textWidth = textMeasurementContext.measureText(text).width;\r\n\r\n  // Calculate position\r\n  const newLeft = chatField.offsetLeft + textWidth + 5;\r\n  const maxLeft = chatField.offsetLeft + chatField.offsetWidth - lengthPopup.offsetWidth;\r\n  lengthPopup.style.left = `${Math.min(newLeft, maxLeft)}px`;\r\n}\r\n\r\n// Only update content/position without animation\r\nfunction updateLengthPopup(length) {\r\n  let displayText;\r\n\r\n  displayText = length > previousLength ? `${length} 🡆` :\r\n    length < previousLength ? `🡄 ${length}` :\r\n      `${length}`;\r\n\r\n  lengthPopup.textContent = displayText;\r\n  updateLengthPopupColor(length);\r\n  previousLength = length;\r\n}\r\n\r\nfunction togglePopup(show) {\r\n  if (isPopupVisible === show) return;\r\n  lengthPopup.classList.toggle('bounce-in', show);\r\n  lengthPopup.classList.toggle('bounce-out', !show);\r\n  isPopupVisible = show;\r\n  if (!show) setTimeout(() => lengthPopup.classList.remove('bounce-out'), 500);\r\n}\r\n\r\nfunction resetPopup() {\r\n  updateLengthPopup(0);\r\n  Object.assign(lengthPopup.style, { left: '0px', color: 'hsl(200, 20%, 50%)' });\r\n}\r\n\r\n// Define your event handler functions (they can be kept local)\r\nfunction handleInputEvent() {\r\n  clearTimeout(hidePopupTimeout);\r\n  updateLengthPopup(chatField.value.length);\r\n  updatePopupMetrics(chatField.value);\r\n  togglePopup(true);\r\n  hidePopupTimeout = setTimeout(() => togglePopup(false), 1000);\r\n}\r\n\r\nfunction handleKeydownEvent(e) {\r\n  if (e.key !== 'Enter') return;\r\n  resetPopup();\r\n  togglePopup(true);\r\n  hidePopupTimeout = setTimeout(() => togglePopup(false), 1000);\r\n}\r\n\r\n// Export an initialization function that sets up the events\r\nfunction initChatEvents() {\r\n  // Only run the event handlers if the popup was created (i.e., condition is met)\r\n  if (!lengthPopup) return;\r\n\r\n  // Attach event listeners\r\n  chatField.addEventListener('input', handleInputEvent);\r\n  chatField.addEventListener('keydown', handleKeydownEvent);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/popupLengthIndicator.js?");

/***/ }),

/***/ "./src/components/popupMessages.js":
/*!*****************************************!*\
  !*** ./src/components/popupMessages.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showPopupMessage: () => (/* binding */ showPopupMessage)\n/* harmony export */ });\n// Set the maximum number of popup messages to display globally\r\nconst maxPopupMessagesCount = 10;\r\n\r\n// Define an object to store the hue for each username\r\nconst usernameHueMap = {};\r\n// Increase step for noticeable color changes\r\nconst hueStep = 15;\r\n\r\n// Define the function to show popup messages when the main chat is hidden by hotkeys Ctrl + Space (only)\r\nfunction showPopupMessage() {\r\n  // Check if the key 'shouldShowPopupMessage' exists and has a value of true\r\n  const shouldShowPopupMessage = localStorage.getItem('shouldShowPopupMessage');\r\n\r\n  // Stop execution if shouldShowPopupMessage is false\r\n  if (shouldShowPopupMessage !== 'true') {\r\n    return;\r\n  }\r\n\r\n  // Get the last message in the chat\r\n  const latestMessage = document.querySelector('.messages-content p:last-of-type');\r\n\r\n  if (latestMessage) {\r\n    // Extract elements for time and username from the latest message\r\n    const time = latestMessage.querySelector('.time');\r\n    const username = latestMessage.querySelector('.username');\r\n\r\n    const nodes = Array.from(latestMessage.childNodes);\r\n    const elements = nodes.map(node => {\r\n      if (node.nodeType === Node.TEXT_NODE) {\r\n        return { type: 'text', value: node.nodeValue.replace(/ /g, '\\u00A0') }; // Replace spaces with Unicode non-breaking space\r\n      } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n        if (node.tagName.toLowerCase() === 'a' && node.classList.contains('private')) {\r\n          return { type: 'text', value: '📢\\u00A0' };\r\n        }\r\n        if (node.tagName.toLowerCase() === 'span' && node.classList.contains('private')) {\r\n          return { type: 'text', value: node.textContent.replace(/ /g, '\\u00A0') };\r\n        }\r\n        if (node.tagName.toLowerCase() === 'img') {\r\n          return { type: 'img', title: node.getAttribute('title') };\r\n        }\r\n        if (node.tagName.toLowerCase() === 'a') {\r\n          return { type: 'anchor', href: node.getAttribute('href') };\r\n        }\r\n      }\r\n    }).filter(Boolean);\r\n\r\n    // Extract relevant data from the time and username elements\r\n    const cleanTime = time.textContent.replace(/[\\[\\]]/g, '');\r\n    const cleanUsername = username.textContent.replace(/[<>]/g, '');\r\n\r\n    // Check if the hue for this username is already stored\r\n    let hueForUsername = usernameHueMap[cleanUsername];\r\n\r\n    // If the hue is not stored, generate a new random hue with the specified step\r\n    if (!hueForUsername) {\r\n      hueForUsername = Math.floor(Math.random() * (360 / hueStep)) * hueStep;\r\n      // Store the generated hue for this username\r\n      usernameHueMap[cleanUsername] = hueForUsername;\r\n    }\r\n\r\n    // Create or get the main container for all messages\r\n    let popupMessagesContainer = document.querySelector('.popup-messages-container');\r\n    if (!popupMessagesContainer) {\r\n      popupMessagesContainer = document.createElement('div');\r\n      popupMessagesContainer.classList.add('popup-messages-container');\r\n      document.body.appendChild(popupMessagesContainer);\r\n    }\r\n\r\n    // Check if the total number of messages in the container exceeds the maximum\r\n    if (popupMessagesContainer.childElementCount >= maxPopupMessagesCount) {\r\n      // Get the oldest message\r\n      const oldestMessage = popupMessagesContainer.firstChild;\r\n\r\n      // Apply a CSS class to initiate the fade-out animation\r\n      oldestMessage.classList.add('fade-out');\r\n\r\n      // After the animation duration, remove the message from the DOM\r\n      setTimeout(() => {\r\n        popupMessagesContainer.removeChild(oldestMessage);\r\n      }, 300); // Adjust the time to match your CSS animation duration\r\n    }\r\n\r\n    // Create a container div for each message\r\n    const popupChatMessage = document.createElement('div');\r\n    popupChatMessage.classList.add('popup-chat-message');\r\n    // Apply the hue-rotate filter to the entire message container\r\n    popupChatMessage.style.filter = `hue-rotate(${hueForUsername}deg)`;\r\n\r\n    // Append time SVG icon before the time\r\n    const timeIcon = document.createElement('div');\r\n    timeIcon.classList.add('time-icon');\r\n    timeIcon.innerHTML = icons.clockSVG;\r\n\r\n    // Append spans for each part with respective classes\r\n    const timeElement = document.createElement('div');\r\n    timeElement.classList.add('time');\r\n    timeElement.textContent = cleanTime;\r\n\r\n    // Append user SVG icon after the time\r\n    const userIcon = document.createElement('div');\r\n    userIcon.classList.add('user-icon');\r\n    userIcon.innerHTML = icons.userSVG;\r\n\r\n    const usernameElement = document.createElement('div');\r\n    usernameElement.classList.add('username');\r\n    usernameElement.textContent = cleanUsername;\r\n\r\n    // Append action SVG icon after the username\r\n    const actionIcon = document.createElement('div');\r\n    actionIcon.classList.add('action-icon');\r\n    actionIcon.innerHTML = icons.actionSVG;\r\n\r\n    const messageElement = document.createElement('div');\r\n    messageElement.classList.add('message');\r\n\r\n    // Append elements to the message container\r\n    popupChatMessage.appendChild(timeIcon);\r\n    popupChatMessage.appendChild(timeElement);\r\n    popupChatMessage.appendChild(userIcon);\r\n    popupChatMessage.appendChild(usernameElement);\r\n    popupChatMessage.appendChild(actionIcon);\r\n    popupChatMessage.appendChild(messageElement);\r\n\r\n    // Fill the message container with text, images, and anchors\r\n    elements.forEach(element => {\r\n      const elementContainer = document.createElement('div');\r\n\r\n      if (element.type === 'text') {\r\n        elementContainer.textContent = element.value;\r\n      } else if (element.type === 'img') {\r\n        elementContainer.innerHTML = `&nbsp;${element.title}&nbsp;`;\r\n      } else if (element.type === 'anchor') {\r\n        elementContainer.innerHTML = `&nbsp;${element.href}&nbsp;`;\r\n      }\r\n\r\n      messageElement.appendChild(elementContainer);\r\n    });\r\n\r\n    // Append the message container to the main container\r\n    popupMessagesContainer.appendChild(popupChatMessage);\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/popupMessages.js?");

/***/ }),

/***/ "./src/components/tooltip.js":
/*!***********************************!*\
  !*** ./src/components/tooltip.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCustomTooltip: () => (/* binding */ createCustomTooltip),\n/* harmony export */   disableCustomTooltip: () => (/* binding */ disableCustomTooltip)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\nlet tooltipEl = null, tooltipHideTimer = null, tooltipShowTimer = null;\r\nlet tooltipIsVisible = false, tooltipIsShown = false, tooltipCurrentTarget = null;\r\n\r\nconst positionTooltip = (clientX, clientY) => {\r\n  if (!tooltipEl) return;\r\n  let leftPos = clientX + 10;\r\n  const tooltipWidth = tooltipEl.offsetWidth;\r\n  const screenWidth = window.innerWidth;\r\n\r\n  // Adjust position if overflowing\r\n  leftPos = Math.min(Math.max(leftPos, 10), screenWidth - tooltipWidth - 10);\r\n\r\n  tooltipEl.style.left = `${leftPos}px`;\r\n  tooltipEl.style.top = `${clientY + 18}px`;\r\n};\r\n\r\nconst tooltipTrackMouse = e => tooltipEl && positionTooltip(e.clientX, e.clientY);\r\n\r\nconst hideTooltipElement = () => {\r\n  tooltipIsVisible = false;\r\n  tooltipCurrentTarget = null;\r\n  clearTimeout(tooltipShowTimer);\r\n  clearTimeout(tooltipHideTimer);\r\n\r\n  tooltipHideTimer = setTimeout(() => {\r\n    if (!tooltipEl) return;\r\n    tooltipEl.style.opacity = '0';\r\n    tooltipIsShown = false;\r\n\r\n    setTimeout(() => {\r\n      if (!tooltipIsVisible && tooltipEl) {\r\n        tooltipEl.style.display = 'none';\r\n        tooltipEl.textContent = ''; // Clear tooltip content\r\n        document.removeEventListener('mousemove', tooltipTrackMouse);\r\n      }\r\n    }, 50);\r\n  }, 100);\r\n};\r\n\r\nnew MutationObserver(() => {\r\n  if (tooltipCurrentTarget && !document.contains(tooltipCurrentTarget)) hideTooltipElement();\r\n}).observe(document, { childList: true, subtree: true });\r\n\r\n// Store delegation handlers to avoid duplicates (use WeakMap for auto-cleanup)\r\nconst delegationHandlers = new WeakMap();\r\n\r\n// Helper to resolve language string from an object or return as-is\r\nfunction resolveLanguageString(content) {\r\n  if (typeof content === 'object' && content !== null && !Array.isArray(content)) {\r\n    const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentLanguage)();\r\n    return content[lang] || content['en'] || Object.values(content)[0];\r\n  }\r\n  return content;\r\n}\r\n\r\nfunction interpolateTooltip(content, target) {\r\n  return content.replace(/\\$\\{([^}]+)\\}/g, (match, key) => { // Match ${key} placeholders\r\n    if (target.hasAttribute && target.hasAttribute(key)) {\r\n      return target.getAttribute(key);\r\n    }\r\n    if (key in target) {\r\n      return target[key];\r\n    }\r\n    if (key === 'text' || key === 'textContent') {\r\n      return target.textContent || '';\r\n    }\r\n    return match;\r\n  });\r\n}\r\n\r\nfunction createCustomTooltip(element, tooltipContent, delegation = false) {\r\n  if (tooltipContent == null || tooltipContent === '') return; // Skip if content is null/undefined/empty\r\n\r\n  // Create tooltip element if it doesn't exist\r\n  tooltipEl ||= (() => {\r\n    const tooltipDiv = document.createElement('div');\r\n    tooltipDiv.classList.add(\"custom-tooltip-popup\");\r\n    tooltipDiv.style.display = 'none';\r\n    tooltipDiv.style.opacity = '0';\r\n    document.body.appendChild(tooltipDiv);\r\n    return tooltipDiv;\r\n  })();\r\n\r\n  if (delegation) {\r\n    // Delegation mode: attach event listeners to the parent element\r\n    const selector = element; // In delegation mode, element is a selector string\r\n    const parentElement = tooltipContent; // In delegation mode, tooltipContent is the parent element\r\n    const actualTooltipContent = arguments[2]; // The actual tooltip content (function, string, or object)\r\n\r\n    if (!delegationHandlers.has(parentElement)) {\r\n      delegationHandlers.set(parentElement, new Set());\r\n    }\r\n    const selectors = delegationHandlers.get(parentElement);\r\n    if (!selectors.has(selector)) {\r\n      selectors.add(selector);\r\n\r\n      const handleMouseEnter = (e) => {\r\n        const target = e.target.closest(selector);\r\n        if (!target) return;\r\n\r\n        tooltipIsVisible = true;\r\n        tooltipCurrentTarget = target;\r\n        clearTimeout(tooltipHideTimer);\r\n        clearTimeout(tooltipShowTimer);\r\n\r\n        // Always process: function -> resolve language -> interpolate\r\n        let content = actualTooltipContent;\r\n        if (typeof content === 'function') {\r\n          content = content(target);\r\n        }\r\n        content = resolveLanguageString(content);\r\n        if (typeof content === 'string') {\r\n          content = interpolateTooltip(content, target);\r\n        }\r\n\r\n        tooltipEl.innerHTML = highlightTooltipActions(content);\r\n        tooltipEl.style.display = 'flex';\r\n        tooltipEl.style.opacity = '0';\r\n        tooltipEl.offsetHeight;\r\n        positionTooltip(e.clientX, e.clientY);\r\n        document.addEventListener('mousemove', tooltipTrackMouse);\r\n\r\n        tooltipShowTimer = setTimeout(() => {\r\n          tooltipEl.style.opacity = '1';\r\n          tooltipIsShown = true;\r\n        }, 600);\r\n      };\r\n\r\n      const handleMouseLeave = (e) => {\r\n        const target = e.target.closest(selector);\r\n        if (!target) return;\r\n        hideTooltipElement();\r\n        document.removeEventListener('mousemove', tooltipTrackMouse);\r\n      };\r\n\r\n      const handleClick = (e) => {\r\n        const target = e.target.closest(selector);\r\n        if (!target) return;\r\n        hideTooltipElement();\r\n      };\r\n\r\n      parentElement.addEventListener('mouseenter', handleMouseEnter, true);\r\n      parentElement.addEventListener('mouseleave', handleMouseLeave, true);\r\n      parentElement.addEventListener('click', handleClick, true);\r\n    }\r\n  } else {\r\n    // Standard mode: attach event listeners directly to the element\r\n    // Always process: function -> resolve language -> interpolate\r\n    let content = tooltipContent;\r\n    if (typeof content === 'function') {\r\n      content = content(element);\r\n    }\r\n    content = resolveLanguageString(content);\r\n    if (typeof content === 'string') {\r\n      content = interpolateTooltip(content, element);\r\n    }\r\n    // If content is empty or falsy, do not set up tooltip\r\n    if (!content) {\r\n      element._tooltipContent = '';\r\n      return;\r\n    }\r\n    element._tooltipContent = content;\r\n\r\n    if (!element._tooltipInitialized) {\r\n      element._tooltipInitialized = true;\r\n\r\n      element.addEventListener('mouseenter', e => {\r\n        // Do not show tooltip if content is empty or falsy\r\n        if (!element._tooltipContent) return;\r\n        tooltipIsVisible = true;\r\n        tooltipCurrentTarget = element;\r\n        clearTimeout(tooltipHideTimer);\r\n        clearTimeout(tooltipShowTimer);\r\n\r\n        tooltipEl.innerHTML = highlightTooltipActions(element._tooltipContent);\r\n        tooltipEl.style.display = 'flex';\r\n        tooltipEl.style.opacity = '0';\r\n        tooltipEl.offsetHeight;\r\n        positionTooltip(e.clientX, e.clientY);\r\n        document.addEventListener('mousemove', tooltipTrackMouse);\r\n\r\n        tooltipShowTimer = setTimeout(() => {\r\n          tooltipEl.style.opacity = '1';\r\n          tooltipIsShown = true;\r\n        }, 600);\r\n      });\r\n\r\n      element.addEventListener('mouseleave', () => {\r\n        hideTooltipElement();\r\n        document.removeEventListener('mousemove', tooltipTrackMouse);\r\n      });\r\n      element.addEventListener('click', hideTooltipElement);\r\n    }\r\n  }\r\n}\r\n\r\n// Disable a custom tooltip for an element (clears content, does not remove listeners)\r\nfunction disableCustomTooltip(element) {\r\n  if (!element) return;\r\n  element._tooltipContent = '';\r\n}\r\n\r\nfunction highlightTooltipActions(str) {\r\n  if (typeof str !== 'string') return '';\r\n  const regex = /\\[([^\\]]+)\\]([^\\[]*)/g;\r\n  let result = '';\r\n  let lastEnd = 0;\r\n  let match;\r\n  while ((match = regex.exec(str)) !== null) {\r\n    if (match.index > lastEnd) result += str.slice(lastEnd, match.index);\r\n    result += `\r\n    <div class=\"tooltip-item\">\r\n      <span class=\"tooltip-action\">${match[1]}</span>&nbsp;\r\n      <span class=\"tooltip-message\">${match[2].trim()}</span>\r\n    </div>`;\r\n    lastEnd = regex.lastIndex;\r\n  }\r\n  if (lastEnd < str.length) result += str.slice(lastEnd);\r\n  return result;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/tooltip.js?");

/***/ }),

/***/ "./src/components/voiceEngine.js":
/*!***************************************!*\
  !*** ./src/components/voiceEngine.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   beepVolume: () => (/* binding */ beepVolume),\n/* harmony export */   mentionMessageFrequencies: () => (/* binding */ mentionMessageFrequencies),\n/* harmony export */   playBeep: () => (/* binding */ playBeep),\n/* harmony export */   textToSpeech: () => (/* binding */ textToSpeech),\n/* harmony export */   userAction: () => (/* binding */ userAction),\n/* harmony export */   usualMessageFrequencies: () => (/* binding */ usualMessageFrequencies)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _mode_soundMode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mode/soundMode.js */ \"./src/components/mode/soundMode.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n\r\n\r\n\r\n\r\nconst { usersToTrack } = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__.settingsState;\r\n\r\n// SOUND NOTIFICATION\r\n\r\n// Function to create the audio context and return a Promise that resolves when the context is ready\r\nfunction createAudioContext() {\r\n  const audioContext = new AudioContext();\r\n  return new Promise(resolve => {\r\n    audioContext.onstatechange = function () {\r\n      if (audioContext.state === 'running') {\r\n        resolve(audioContext);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\n// Create the audio context and wait for it to be ready\r\nconst audioContextPromise = createAudioContext();\r\n\r\n// List of frequencies to play for \"User Left\" && \"User Entered\" && \"New Messages\"\r\nconst userEnteredFrequencies = [300, 600];\r\nconst userLeftFrequencies = [600, 300];\r\nconst usualMessageFrequencies = [500];\r\nconst mentionMessageFrequencies = [600, 800];\r\n\r\n// Volume of the reader voice\r\nconst voiceVolume = 1;\r\n// Volume of the beep signal\r\nconst beepVolume = 0.2;\r\n// Duration for each frequency\r\nconst duration = 80;\r\n// Smooth inception and termination for each note\r\nconst fade = 10;\r\n// Space between each note to make noticeable pauses\r\nconst delay = 100;\r\n\r\n// Function to play a beep given a list of frequencies\r\nfunction playBeep(frequencies, volume) {\r\n  audioContextPromise.then(audioContext => {\r\n    for (let i = 0; i < frequencies.length; i++) {\r\n      const frequency = frequencies[i];\r\n      if (frequency === 0) {\r\n        // Rest note\r\n        setTimeout(() => { }, duration);\r\n      } else {\r\n        // Play note\r\n        const oscillator = audioContext.createOscillator();\r\n        const gain = audioContext.createGain();\r\n        oscillator.connect(gain);\r\n        oscillator.frequency.value = frequency;\r\n        oscillator.type = \"sine\";\r\n\r\n        // Create low pass filter to cut frequencies below 250Hz\r\n        const lowPassFilter = audioContext.createBiquadFilter();\r\n        lowPassFilter.type = 'lowpass';\r\n        lowPassFilter.frequency.value = 250;\r\n        oscillator.connect(lowPassFilter);\r\n\r\n        // Create high pass filter to cut frequencies above 16kHz\r\n        const highPassFilter = audioContext.createBiquadFilter();\r\n        highPassFilter.type = 'highpass';\r\n        highPassFilter.frequency.value = 16000;\r\n        lowPassFilter.connect(highPassFilter);\r\n\r\n        gain.connect(audioContext.destination);\r\n        gain.gain.setValueAtTime(0, audioContext.currentTime);\r\n        gain.gain.linearRampToValueAtTime(volume, audioContext.currentTime + fade / 1000);\r\n        oscillator.start(audioContext.currentTime + i * delay / 1000);\r\n        oscillator.stop(audioContext.currentTime + (i * delay + duration) / 1000);\r\n        gain.gain.setValueAtTime(volume, audioContext.currentTime + (i * delay + (duration - fade)) / 1000);\r\n        gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + (i * delay + duration) / 1000);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// Create a promise that will resolve when the list of available voices is populated\r\nconst awaitVoices = new Promise(resolve => {\r\n  // Create a speech synthesis object\r\n  const synth = window.speechSynthesis;\r\n  // Retrieve the list of available voices\r\n  let voices = synth.getVoices();\r\n\r\n  // Define the voice names for Pavel and Irina\r\n  const pavelVoiceName = 'Microsoft Pavel - Russian (Russia)';\r\n  const irinaVoiceName = 'Microsoft Irina - Russian (Russia)';\r\n\r\n  // Find and store Pavel's voice\r\n  let pavelVoice = voices.find(voice => voice.name === pavelVoiceName);\r\n  // Find and store Irina's voice\r\n  let irinaVoice = voices.find(voice => voice.name === irinaVoiceName);\r\n\r\n  // If either voice is not found or the voices list is empty, wait for it to populate\r\n  if (!pavelVoice || !irinaVoice || voices.length === 0) {\r\n    synth.addEventListener('voiceschanged', () => {\r\n      voices = synth.getVoices();\r\n      pavelVoice = voices.find(voice => voice.name === pavelVoiceName);\r\n      irinaVoice = voices.find(voice => voice.name === irinaVoiceName);\r\n\r\n      // If both voices are found, continue with the initialization\r\n      if (pavelVoice && irinaVoice) {\r\n        // Define the utterance object as a global variable\r\n        const utterance = new SpeechSynthesisUtterance();\r\n        // Set the \"lang\" property of the utterance object to 'ru-RU'\r\n        utterance.lang = 'ru-RU';\r\n        // Set the \"voice\" property of the utterance object to Pavel's voice\r\n        utterance.voice = irinaVoice;\r\n        // Resolve the promise\r\n        resolve({ synth, utterance, voices, pavelVoice, irinaVoice });\r\n      }\r\n    });\r\n  } else {\r\n    // Define the utterance object as a global variable\r\n    const utterance = new SpeechSynthesisUtterance();\r\n    // Set the \"lang\" property of the utterance object to 'ru-RU'\r\n    utterance.lang = 'ru-RU';\r\n    // Set the \"voice\" property of the utterance object to (Needed) voice\r\n    utterance.voice = irinaVoice;\r\n    // Resolve the promise\r\n    resolve({ synth, utterance, voices, pavelVoice, irinaVoice });\r\n  }\r\n});\r\n\r\nasync function cleanText(text) {\r\n  return text\r\n    // Replace all hyphens (- U+002D), minus signs (− U+2212), and underscores (_) with spaces\r\n    .replace(/[-−_]/g, ' ')\r\n    // Replace URLs with just the domain name, removing \"https://\", \"http://\", and \"www.\"\r\n    .replace(/https?:\\/\\/(?:www\\.)?([a-zA-Z0-9.-]+)(\\/.*)?/g, (_, p1) => p1)\r\n    .replace(/\\s(?=[?!,.:;@])/g, '')\r\n    // Remove all other symbols completely\r\n    .replace(/[\"#$%&'()*+\\/<=>[\\\\\\]^`{|}~]/g, '')\r\n    // Remove extra spaces and format text\r\n    .split(' ').filter(Boolean).join(' ').trim();\r\n}\r\n\r\n// Split text into language blocks (Russian vs. English) based on per-word detection.\r\nconst detectLanguageBlocks = text =>\r\n  text.split(/\\s+/).reduce((blocks, word) => {\r\n    const lang = /[А-Яа-яЁё0-9]/.test(word) ? 'ru' : 'en';\r\n    if (blocks.length && blocks[blocks.length - 1].lang === lang) {\r\n      blocks[blocks.length - 1].text += ' ' + word;\r\n    } else {\r\n      blocks.push({ lang, text: word });\r\n    }\r\n    return blocks;\r\n  }, []);\r\n\r\n// Fallback: Web Speech API TTS\r\nasync function webTextToSpeech(text, voiceSpeed = voiceSpeed) {\r\n  const { synth, utterance, voice } = await awaitVoices;\r\n  Object.assign(utterance, { text, rate: voiceSpeed, volume: voiceVolume, pitch: _mode_soundMode_js__WEBPACK_IMPORTED_MODULE_1__.voicePitch, voice });\r\n  return new Promise(resolve => { utterance.onend = resolve; synth.speak(utterance); });\r\n}\r\n\r\n// Main TTS function: plays each language block in order.\r\nasync function textToSpeech(text, voiceSpeed = voiceSpeed) {\r\n  const shouldUseGoogleTTS = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.shouldEnable)('sound', 'gTTS');\r\n  // Clean the text using the new cleanText function asynchronously\r\n  const cleanedText = await cleanText(text);\r\n\r\n  // If Google TTS is enabled, use it. Otherwise, fallback to Web Speech API.\r\n  if (shouldUseGoogleTTS) {\r\n    const blocks = detectLanguageBlocks(cleanedText);\r\n    try {\r\n      for (const { lang, text } of blocks) {\r\n        await new Promise((resolve, reject) => {\r\n          fetch(`http://127.0.0.1:5000/speak?text=${encodeURIComponent(text)}&lang=${lang}`)\r\n            .then(res => { if (!res.ok) throw new Error(`HTTP ${res.status}`); return res.arrayBuffer(); })\r\n            .then(buffer => {\r\n              const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n              const audio = new Audio(URL.createObjectURL(new Blob([buffer], { type: 'audio/mp3' })));\r\n              const source = audioContext.createMediaElementSource(audio);\r\n              const gainNode = audioContext.createGain();\r\n\r\n              gainNode.gain.value = 2.0; // Boost volume\r\n\r\n              // Connect the audio source to the gain node and the gain node to the destination (speakers)\r\n              source.connect(gainNode);\r\n              gainNode.connect(audioContext.destination);\r\n\r\n              audio.onended = resolve;\r\n              audio.onerror = reject;\r\n              audio.play();\r\n            })\r\n            .catch(reject);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Server TTS failed:\", error);\r\n    }\r\n  } else {\r\n    // If Google TTS isn't enabled, fallback to Web Speech API\r\n    await webTextToSpeech(text, voiceSpeed);\r\n  }\r\n}\r\n\r\nconst verbs = {\r\n  Male: { enter: 'зашёл', leave: 'вышел' },\r\n  Female: { enter: 'зашла', leave: 'вышла' }\r\n};\r\n\r\n// Handles user entering and leaving actions\r\nfunction userAction(user, actionType, userGender) {\r\n  const shouldPlayAction = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.shouldEnable)('sound', 'presence');\r\n  // If neither beep and voice is enabled, exit early.\r\n  if (!shouldPlayAction) return;\r\n\r\n  const gender = userGender || 'Male'; // Default to 'Male' if no gender provided\r\n  const userToTrack = usersToTrack.find(userToTrack => userToTrack.name === user);\r\n  const action = actionType === \"enter\" ? verbs[gender].enter : verbs[gender].leave;\r\n  const frequencies = actionType === \"enter\" ? userEnteredFrequencies : userLeftFrequencies;\r\n\r\n  playBeep(frequencies, beepVolume);\r\n  setTimeout(() => textToSpeech(`${userToTrack.pronunciation} ${action}`, _mode_soundMode_js__WEBPACK_IMPORTED_MODULE_1__.voiceSpeed), 300);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/components/voiceEngine.js?");

/***/ }),

/***/ "./src/converters/imageConverter.js":
/*!******************************************!*\
  !*** ./src/converters/imageConverter.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertImageLinksToImage: () => (/* binding */ convertImageLinksToImage)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n// helpers\r\n\r\n\r\n\r\n\r\n\r\n\r\n// definitions\r\n\r\n\r\n\r\n\r\n// Image constants\r\nconst imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'webp'];\r\nconst emojis = { image: '📸', domain: '🖥️', untrusted: '💀️️' };\r\nconst zoomLimits = { min: 0.2, max: 10, factor: 0.1 };\r\nconst navigationDelay = 50;\r\n\r\n// Image navigation state\r\nlet currentIndex = 0;\r\nlet isChangingImage = false;\r\nlet thumbnailLinks = [];\r\n\r\n// Expanded image reference\r\nlet expandedImage = null;\r\nconst { bigImageEvents } = _definitions_js__WEBPACK_IMPORTED_MODULE_3__.state;\r\n\r\n/**\r\n * Extracts file extension from URL\r\n */\r\nconst getExtension = (url) => {\r\n  try {\r\n    return (url.match(/\\.([^?#.]+)(?:[?#]|$)/i)?.[1]?.toLowerCase() || '');\r\n  } catch (error) {\r\n    console.error(\"Error extracting extension:\", error.message);\r\n    return '';\r\n  }\r\n};\r\n\r\n/**\r\n * Checks if URL has allowed image extension\r\n */\r\nconst isAllowedImageExtension = (url) => {\r\n  const extension = getExtension(url);\r\n  return { allowed: imageExtensions.includes(extension), extension };\r\n};\r\n\r\n/**\r\n * Creates expanded image view with interactive features\r\n */\r\nconst createExpandedView = (src, clickedThumbnailIndex) => {\r\n  // Create and add expanded image to DOM\r\n  const imageElement = document.createElement('img');\r\n  imageElement.src = src;\r\n  imageElement.classList.add('scaled-thumbnail');\r\n  document.body.appendChild(imageElement);\r\n\r\n  // Update current index based on clicked thumbnail\r\n  currentIndex = clickedThumbnailIndex;\r\n\r\n  // Zoom and movement variables\r\n  let zoomScale = 1;\r\n  let isMMBPressed = false; // Track if MMB is pressed regardless of mode\r\n  let isDragging = false;\r\n  let lastMouseX = 0, lastMouseY = 0;\r\n  let translateX = -50, translateY = -50;\r\n  const movementSpeed = 5;\r\n\r\n  // Close expanded view and clean up\r\n  const closeExpandedView = (img) => {\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_2__.triggerTargetElement)(img, 'hide');\r\n    if (!document.querySelector('.popup-panel')) (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_2__.triggerDimmingElement)('hide');\r\n    (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.removeBigImageEventListeners)();\r\n  };\r\n\r\n  // Event handlers\r\n  bigImageEvents.unfocusedClick = (event) => {\r\n    if (!imageElement.contains(event.target)) {\r\n      imageElement.remove();\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.removeBigImageEventListeners)();\r\n    }\r\n  };\r\n\r\n  bigImageEvents.keydown = (event) => {\r\n    if (event.code === 'Escape' || event.code === 'Space') {\r\n      event.preventDefault();\r\n      closeExpandedView(imageElement);\r\n    } else if (event.code === 'ArrowLeft') {\r\n      navigateImages(-1);\r\n    } else if (event.code === 'ArrowRight') {\r\n      navigateImages(1);\r\n    }\r\n  };\r\n\r\n  bigImageEvents.wheel = (event) => {\r\n    const direction = event.deltaY < 0 ? 1 : -1;\r\n    zoomScale += direction * zoomLimits.factor * zoomScale;\r\n\r\n    // Apply zoom limits\r\n    zoomScale = Math.max(zoomLimits.min, Math.min(zoomScale, zoomLimits.max));\r\n\r\n    imageElement.style.transform = `translate(${translateX}%, ${translateY}%) scale(${zoomScale})`;\r\n  };\r\n\r\n  bigImageEvents.mousemove = (event) => {\r\n    if (isMMBPressed) {\r\n      if (event.ctrlKey) {\r\n        // Ctrl is held - perform zoom operation\r\n        const deltaY = event.clientY - lastMouseY;\r\n\r\n        // Adjust zoom based on vertical movement: up = zoom in, down = zoom out\r\n        const zoomDirection = deltaY < 0 ? 1 : -1;\r\n        const zoomAmount = Math.abs(deltaY) * zoomLimits.factor * 0.05; // Adjust sensitivity\r\n\r\n        zoomScale += zoomDirection * zoomAmount * zoomScale;\r\n\r\n        // Apply zoom limits\r\n        zoomScale = Math.max(zoomLimits.min, Math.min(zoomScale, zoomLimits.max));\r\n      } else {\r\n        // Ctrl is not held - perform pan operation\r\n        const deltaX = (event.clientX - lastMouseX) / zoomScale * movementSpeed;\r\n        const deltaY = (event.clientY - lastMouseY) / zoomScale * movementSpeed;\r\n\r\n        translateX += (deltaX / imageElement.clientWidth) * 100;\r\n        translateY += (deltaY / imageElement.clientHeight) * 100;\r\n      }\r\n\r\n      // Update image transform with current zoom and pan values\r\n      imageElement.style.transform = `translate(${translateX}%, ${translateY}%) scale(${zoomScale})`;\r\n\r\n      // Update last mouse position for next move\r\n      lastMouseX = event.clientX;\r\n      lastMouseY = event.clientY;\r\n    }\r\n  };\r\n\r\n  bigImageEvents.mousedown = (event) => {\r\n    const { button, clientX, clientY, target, ctrlKey } = event;\r\n    if ((button === 0 || button === 2) && target !== imageElement) return;\r\n\r\n    const src = target.src;\r\n\r\n    if (button === 0) {\r\n      // Left click - navigate to previous image\r\n      navigateImages(-1);\r\n    } else if (button === 2) {\r\n      event.preventDefault();\r\n      if (ctrlKey) {\r\n        navigator.clipboard.writeText(src).catch(console.error);\r\n        closeExpandedView(imageElement);\r\n      } else {\r\n        navigateImages(1);\r\n      }\r\n    } else if (button === 1) { // Middle mouse button\r\n      // Always track MMB state and initial position\r\n      isMMBPressed = true;\r\n      lastMouseX = clientX;\r\n      lastMouseY = clientY;\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  bigImageEvents.mouseup = (event) => {\r\n    if (event.button === 1) {\r\n      isMMBPressed = false;\r\n    }\r\n  };\r\n\r\n  // We don't need the keyup handler anymore since we're checking ctrlKey in real time\r\n\r\n  bigImageEvents.contextmenu = (event) => event.preventDefault();\r\n\r\n  (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.addBigImageEventListeners)();\r\n  return imageElement;\r\n};\r\n\r\n/**\r\n * Navigate between available images\r\n */\r\nconst navigateImages = (direction) => {\r\n  const newIndex = currentIndex + direction;\r\n\r\n  if (newIndex >= 0 && newIndex < thumbnailLinks.length && !isChangingImage) {\r\n    isChangingImage = true;\r\n\r\n    if (expandedImage) expandedImage.src = thumbnailLinks[newIndex].imgSrc;\r\n\r\n    setTimeout(() => isChangingImage = false, navigationDelay);\r\n    currentIndex = newIndex;\r\n  }\r\n};\r\n\r\n/**\r\n * Converts image links to thumbnails in specified container\r\n */\r\nfunction convertImageLinksToImage(containerType) {\r\n  const containerSelectors = {\r\n    generalMessages: \".messages-content div\",\r\n    chatlogsMessages: \".chat-logs-container\",\r\n    personalMessages: \".messages-container\"\r\n  };\r\n\r\n  const container = document.querySelector(containerSelectors[containerType]);\r\n  if (!container) return;\r\n\r\n  // Refresh thumbnailLinks scoped to the current container\r\n  const refreshThumbnailLinks = () => {\r\n    thumbnailLinks = [];\r\n    container.querySelectorAll(\".clickable-thumbnail\").forEach((thumbnail, index) => {\r\n      const img = thumbnail.querySelector(\"img\");\r\n      if (img && thumbnail.dataset.sourceLink) {\r\n        thumbnailLinks.push({ link: thumbnail.dataset.sourceLink, imgSrc: img.src, index });\r\n      }\r\n    });\r\n  };\r\n\r\n  const links = container.querySelectorAll(\"a:not(.skipped):not(.processed-image)\");\r\n  if (!links.length) return;\r\n\r\n  links.forEach(link => {\r\n    if (!link.href || !link.href.startsWith(\"http\")) return;\r\n\r\n    const { allowed, extension } = isAllowedImageExtension(link.href);\r\n    if (!allowed) return;\r\n\r\n    link.classList.add(\"media\");\r\n    const { isTrusted, domain } = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isTrustedDomain)(link.href);\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.createCustomTooltip)(link, (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__.isEncodedURL)(link.href) ? (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__.decodeURL)(link.href) : link.href);\r\n\r\n    isTrusted ? handleTrustedLink(link, extension, domain) : handleUntrustedLink(link, extension, domain);\r\n  });\r\n\r\n  /**\r\n   * Creates image thumbnail from link\r\n   */\r\n  function createThumbnail(link, isUntrusted) {\r\n    const thumbnail = document.createElement(\"div\");\r\n    thumbnail.classList.add(\"clickable-thumbnail\");\r\n    // Save the original link href for later use\r\n    thumbnail.dataset.sourceLink = link.href;\r\n\r\n    const img = document.createElement(\"img\");\r\n    img.src = link.href;\r\n\r\n    img.onload = () => {\r\n      thumbnail.appendChild(img);\r\n      link.parentNode.insertBefore(thumbnail, link.nextSibling);\r\n      (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_5__.scrollToBottom)(containerType, 600);\r\n    };\r\n\r\n    img.onerror = () => {\r\n      console.error(\"Failed to load image:\", link.href);\r\n      link.classList.add(\"skipped\");\r\n    };\r\n\r\n    if (isUntrusted) {\r\n      if (!link.querySelector(\".clickable-thumbnail\")) {\r\n        link.addEventListener(\"click\", e => {\r\n          if (!link.querySelector(\".clickable-thumbnail\")) {\r\n            thumbnail.appendChild(img);\r\n            link.parentNode.insertBefore(thumbnail, link.nextSibling);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      thumbnail.appendChild(img);\r\n      link.parentNode.insertBefore(thumbnail, link.nextSibling);\r\n    }\r\n\r\n    thumbnail.addEventListener(\"click\", e => {\r\n      e.stopPropagation();\r\n      // Refresh thumbnail links in the current container\r\n      refreshThumbnailLinks();\r\n      // Find the index of the clicked thumbnail by comparing the saved source link or the img src\r\n      const clickedIndex = thumbnailLinks.findIndex(item =>\r\n        item.link === link.href || item.imgSrc === img.src\r\n      );\r\n\r\n      expandedImage = createExpandedView(img.src, clickedIndex >= 0 ? clickedIndex : 0);\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_2__.triggerTargetElement)(expandedImage, \"show\");\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_2__.triggerDimmingElement)(\"show\");\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle untrusted domain link\r\n   */\r\n  function handleUntrustedLink(link, extension, domain) {\r\n    link.classList.add(\"skipped\");\r\n    link.textContent = `${emojis.image} ${extension.toUpperCase()} ${emojis.domain} ${domain} ${emojis.untrusted} Untrusted`;\r\n\r\n    link.addEventListener(\"click\", e => {\r\n      if (!link.classList.contains(\"processed-image\")) {\r\n        e.preventDefault();\r\n        link.classList.remove(\"skipped\");\r\n        link.classList.add(\"processed-image\");\r\n        createThumbnail(link, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle trusted domain link\r\n   */\r\n  function handleTrustedLink(link, extension, domain) {\r\n    link.textContent = `${emojis.image} ${extension.toUpperCase()} ${emojis.domain} ${domain}`;\r\n    link.classList.add(\"processed-image\");\r\n    createThumbnail(link, false);\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/converters/imageConverter.js?");

/***/ }),

/***/ "./src/converters/videoConverter.js":
/*!******************************************!*\
  !*** ./src/converters/videoConverter.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertVideoLinksToPlayer: () => (/* binding */ convertVideoLinksToPlayer)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n\r\n\r\n\r\n\r\n\r\n// Emoji icons for visual representation of video metadata\r\nconst emojis = {\r\n  channel: '📺',\r\n  title: '📹',\r\n  type: '🎬️',\r\n  domain: '🖥️',\r\n  untrusted: '💀️️'\r\n};\r\n\r\n// List of supported video file extensions\r\nconst allowedVideoExtensions = ['mp4', 'webm', 'ogg', 'mov', 'avi'];\r\n\r\n// Check if a URL has an allowed video file extension\r\nconst isAllowedVideoExtension = url => {\r\n  // Extract file extension using regex, defaulting to empty string if no match\r\n  const ext = url.match(/\\.([^?#.]+)(?:[?#]|$)/i)?.[1]?.toLowerCase() || '';\r\n  return {\r\n    allowed: allowedVideoExtensions.includes(ext),\r\n    extension: ext\r\n  };\r\n};\r\n\r\n// Global variables for managing YouTube player state\r\nlet sharedYouTubePlayer = null; // Shared YouTube player instance\r\nlet activeYouTubePlaceholder = null; // Currently active YouTube preview placeholder\r\n\r\n// Create or retrieve the shared YouTube player iframe\r\nfunction getSharedYouTubePlayer() {\r\n  if (!sharedYouTubePlayer) {\r\n    // Create new iframe element for YouTube videos\r\n    sharedYouTubePlayer = document.createElement('iframe');\r\n    sharedYouTubePlayer.classList.add(\"video-container\");\r\n    sharedYouTubePlayer.allowFullscreen = true;\r\n    // Set allow attribute to reduce browser warnings\r\n    sharedYouTubePlayer.setAttribute(\"allow\", \"fullscreen\");\r\n  }\r\n  return sharedYouTubePlayer;\r\n}\r\n\r\n// Fetch metadata for a YouTube video using oEmbed API\r\nasync function fetchYouTubeMetadata(videoId) {\r\n  // Construct oEmbed URL for fetching video metadata\r\n  const oembedUrl = `https://www.youtube.com/oembed?url=https://www.youtube.com/watch?v=${videoId}&format=json`;\r\n\r\n  try {\r\n    // Fetch metadata from YouTube\r\n    const response = await fetch(oembedUrl);\r\n    const data = await response.json();\r\n\r\n    // Extract title and channel, provide defaults if not found\r\n    const title = data.title || 'Title not found';\r\n    const channel = data.author_name || 'Channel not found';\r\n\r\n    return { title, channel };\r\n  } catch (error) {\r\n    // Log and handle metadata fetching errors\r\n    console.error('Error fetching YouTube metadata:', error);\r\n    return { title: 'Error', channel: 'Error' };\r\n  }\r\n}\r\n\r\n// Render a preview for a YouTube video\r\nasync function renderYouTubePreview(infoContainer, placeholder, videoId, videoType, containerType) {\r\n  // Clear existing content\r\n  infoContainer.innerHTML = \"\";\r\n  placeholder.innerHTML = \"\";\r\n\r\n  // Fetch video metadata\r\n  const metadata = await fetchYouTubeMetadata(videoId);\r\n\r\n  // Create channel name element\r\n  const channel = document.createElement('span');\r\n  channel.classList.add(\"channel-name\");\r\n  channel.textContent = `${emojis.channel} ${metadata.channel}`;\r\n\r\n  // Create video title element\r\n  const title = document.createElement('span');\r\n  title.classList.add(\"video-title\");\r\n  title.textContent = `${emojis.title} ${metadata.title}`;\r\n\r\n  // Append channel and title to info container\r\n  infoContainer.append(channel, title);\r\n\r\n  // Create and add thumbnail image\r\n  const thumb = document.createElement('img');\r\n  thumb.src = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\r\n  thumb.alt = videoType;\r\n  thumb.classList.add(\"youtube-thumb\");\r\n  placeholder.appendChild(thumb);\r\n\r\n  // Wait for the thumbnail to load before scrolling\r\n  thumb.addEventListener('load', () => {\r\n    (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_3__.scrollToBottom)(containerType, 600);\r\n  });\r\n}\r\n\r\n// Extract video information from a URL\r\nfunction getVideoInfo(url) {\r\n  // Check for YouTube URL patterns\r\n  const youtubeMatch = url.match(/(?:shorts\\/|live\\/|watch\\?v=|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/i);\r\n\r\n  if (youtubeMatch) {\r\n    // Extract video ID and determine video type\r\n    const videoId = youtubeMatch[1];\r\n    const videoType = url.includes('shorts/') ? 'Shorts' :\r\n      url.includes('live/') ? 'Live' :\r\n        url.includes('watch?v=') ? 'Watch' :\r\n          url.includes('youtu.be/') ? 'Share' : 'YouTube';\r\n\r\n    return { youtubeMatch: true, videoId, videoType };\r\n  }\r\n\r\n  // Check for supported video file extensions\r\n  const extension = url.split('.').pop().toLowerCase();\r\n  if (allowedVideoExtensions.includes(extension)) {\r\n    return { youtubeMatch: false, videoType: `Video (${extension.toUpperCase()})` };\r\n  }\r\n\r\n  // Return false if no matching video type found\r\n  return false;\r\n}\r\n\r\n// Main function to convert video links to players\r\nfunction convertVideoLinksToPlayer(containerType) {\r\n  // Validate containerType parameter\r\n  if (!containerType) {\r\n    console.warn(\"containerType parameter is required\");\r\n    return;\r\n  }\r\n\r\n  // Supported container selectors\r\n  const selectors = {\r\n    generalMessages: '.messages-content div',\r\n    chatlogsMessages: '.chat-logs-container',\r\n    personalMessages: '.messages-container'\r\n  };\r\n\r\n  // Validate selector for given containerType\r\n  if (!selectors[containerType]) {\r\n    console.warn(`Invalid containerType: ${containerType}`);\r\n    return;\r\n  }\r\n\r\n  // Find the container element\r\n  const container = document.querySelector(selectors[containerType]);\r\n  if (!container) return;\r\n\r\n  // Find unprocessed links in the container\r\n  const links = container.querySelectorAll(\"a:not(.skipped):not(.processed-video)\");\r\n  if (!links.length) return;\r\n\r\n  // Process each link\r\n  links.forEach(link => {\r\n    const url = link.href;\r\n    if (!url) return;\r\n\r\n    // Determine video information\r\n    const videoInfo = getVideoInfo(url);\r\n    if (!videoInfo) return;\r\n\r\n    link.classList.add(\"media\");\r\n    const { isTrusted, domain } = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isTrustedDomain)(url);\r\n\r\n    // Handle untrusted domains\r\n    if (!isTrusted) {\r\n      link.classList.add(\"skipped\");\r\n      link.textContent = `${emojis.type} ${videoInfo.videoType} ${emojis.domain} ${domain} ${emojis.untrusted} Untrusted`;\r\n\r\n      // Add click event to process untrusted links\r\n      link.addEventListener(\"click\", e => {\r\n        if (!link.classList.contains(\"processed-video\")) {\r\n          e.preventDefault();\r\n          link.classList.remove(\"skipped\");\r\n          processVideoLink(link, url, domain, videoInfo, containerType);\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Process trusted video links\r\n    processVideoLink(link, url, domain, videoInfo, containerType);\r\n  });\r\n\r\n  // Process an individual video link\r\n  function processVideoLink(link, url, domain, videoInfo, containerType) {\r\n    const { youtubeMatch, videoType, videoId } = videoInfo;\r\n    const videoCheck = isAllowedVideoExtension(url);\r\n\r\n    // Skip if not a valid video type\r\n    if (!youtubeMatch && !videoCheck.allowed) return;\r\n\r\n    link.classList.add(\"processed-video\");\r\n\r\n    // Create a wrapper for the video\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add(\"video-wrapper\");\r\n\r\n    // Update link text and styling\r\n    link.textContent = `${emojis.type} ${videoType} ${emojis.domain} ${domain}`;\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_2__.createCustomTooltip)(link, (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__.isEncodedURL)(url) ? (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_1__.decodeURL)(url) : url);\r\n    link.style.display = 'inline-flex';\r\n\r\n    // Handle YouTube videos\r\n    if (youtubeMatch) {\r\n      // Create info container first\r\n      const infoContainer = document.createElement('div');\r\n      infoContainer.classList.add(\"youtube-info\");\r\n\r\n      // Create placeholder\r\n      const placeholder = document.createElement('div');\r\n      placeholder.classList.add(\"youtube-placeholder\");\r\n\r\n      // Store video metadata for later use\r\n      placeholder.dataset.videoId = videoId;\r\n      placeholder.dataset.videoType = videoType;\r\n      placeholder.dataset.containerType = containerType;\r\n\r\n      // Insert wrapper and elements\r\n      link.parentNode.insertBefore(wrapper, link);\r\n      wrapper.append(link, infoContainer, placeholder);\r\n\r\n      // Render video preview\r\n      renderYouTubePreview(infoContainer, placeholder, videoId, videoType, containerType);\r\n\r\n      // Add click event to load video player\r\n      placeholder.addEventListener(\"click\", () => {\r\n        // Reset previous active placeholder\r\n        if (activeYouTubePlaceholder && activeYouTubePlaceholder !== placeholder) {\r\n          const prevVideoId = activeYouTubePlaceholder.dataset.videoId;\r\n          const prevVideoType = activeYouTubePlaceholder.dataset.videoType;\r\n          const prevContainerType = activeYouTubePlaceholder.dataset.containerType;\r\n\r\n          // Find the info container for the previous placeholder (assumed to be previous sibling)\r\n          const prevInfoContainer = activeYouTubePlaceholder.previousElementSibling;\r\n          if (prevInfoContainer && prevInfoContainer.classList.contains(\"youtube-info\")) {\r\n            renderYouTubePreview(\r\n              prevInfoContainer,\r\n              activeYouTubePlaceholder,\r\n              prevVideoId,\r\n              prevVideoType,\r\n              prevContainerType\r\n            );\r\n          }\r\n        }\r\n\r\n        // Set current placeholder as active\r\n        activeYouTubePlaceholder = placeholder;\r\n\r\n        // Create and load YouTube player\r\n        const player = getSharedYouTubePlayer();\r\n        player.src = `https://www.youtube.com/embed/${videoId}?autoplay=1`;\r\n        placeholder.innerHTML = \"\";\r\n        placeholder.appendChild(player);\r\n      });\r\n    } else {\r\n      // Handle non-YouTube video files\r\n      const embed = document.createElement('video');\r\n      embed.classList.add(\"video-container\");\r\n      embed.src = url;\r\n      embed.controls = true;\r\n\r\n      // Insert wrapper and video element\r\n      link.parentNode.insertBefore(wrapper, link);\r\n      wrapper.append(link, embed);\r\n    }\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/converters/videoConverter.js?");

/***/ }),

/***/ "./src/definitions.js":
/*!****************************!*\
  !*** ./src/definitions.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   USER_DATA_CACHE_KEY: () => (/* binding */ USER_DATA_CACHE_KEY),\n/* harmony export */   cacheRefreshThresholdHours: () => (/* binding */ cacheRefreshThresholdHours),\n/* harmony export */   debounceTimeout: () => (/* binding */ debounceTimeout),\n/* harmony export */   defaultVoicePitch: () => (/* binding */ defaultVoicePitch),\n/* harmony export */   defaultVoiceSpeed: () => (/* binding */ defaultVoiceSpeed),\n/* harmony export */   dynamicChatNotificationTimeout: () => (/* binding */ dynamicChatNotificationTimeout),\n/* harmony export */   emojiFaces: () => (/* binding */ emojiFaces),\n/* harmony export */   maxVoicePitch: () => (/* binding */ maxVoicePitch),\n/* harmony export */   maxVoiceSpeed: () => (/* binding */ maxVoiceSpeed),\n/* harmony export */   messageColors: () => (/* binding */ messageColors),\n/* harmony export */   minVoicePitch: () => (/* binding */ minVoicePitch),\n/* harmony export */   minVoiceSpeed: () => (/* binding */ minVoiceSpeed),\n/* harmony export */   minimalChatlogsDate: () => (/* binding */ minimalChatlogsDate),\n/* harmony export */   myNickname: () => (/* binding */ myNickname),\n/* harmony export */   myUserId: () => (/* binding */ myUserId),\n/* harmony export */   profileBaseUrl: () => (/* binding */ profileBaseUrl),\n/* harmony export */   rankColors: () => (/* binding */ rankColors),\n/* harmony export */   rankOrder: () => (/* binding */ rankOrder),\n/* harmony export */   state: () => (/* binding */ state),\n/* harmony export */   timeColors: () => (/* binding */ timeColors),\n/* harmony export */   today: () => (/* binding */ today),\n/* harmony export */   trustedDomains: () => (/* binding */ trustedDomains)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/helpers.js */ \"./src/helpers/helpers.js\");\n// helpers\r\n\r\n\r\nconst debounceTimeout = 300;\r\n// Define the base URL for user profiles\r\nconst profileBaseUrl = \"https://klavogonki.ru/u/#/\";\r\n// Actual nickname to use it as an exclusion for the message beep and voice notifications\r\nconst myNickname = document.querySelector('.userpanel .user-block .user-dropdown .name span').textContent;\r\n// Extract the user ID from the href attribute of the mail link for chat, direct profile, or messaging navigation\r\nconst myUserId = document.querySelector('a.drop-btn.mail')?.href?.match(/\\/u\\/#\\/(\\d+)\\/messages\\//)?.[1];\r\n// create today's date in the format 'YYYY-MM-DD'\r\nconst today = new Intl.DateTimeFormat('en-CA').format(new Date());\r\nconst minimalChatlogsDate = '2012-12-02'; // Define the minimum date\r\n\r\n// Unified user data cache key\r\nconst USER_DATA_CACHE_KEY = 'userData';\r\n\r\n// Define voice speed limits\r\nconst minVoiceSpeed = 0;\r\nconst maxVoiceSpeed = 2.5;\r\n\r\n// Define voice pitch limits\r\nconst minVoicePitch = 0;\r\nconst maxVoicePitch = 2.0;\r\n\r\n// Define default voice speed and pitch\r\nconst defaultVoiceSpeed = 1.5;\r\nconst defaultVoicePitch = 1.0;\r\n\r\nconst emojiFaces = [\r\n  // People Emojis (Facial expressions)\r\n  '😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆',\r\n  '😉', '😊', '😋', '😎', '😏', '😐', '😑', '😒',\r\n  '😓', '😔', '😕', '😖', '😗', '😘', '😙', '😚',\r\n  '😜', '😝', '😛', '🤑', '🤗', '🤔', '🤐', '🤨',\r\n  '😣', '😥', '😮', '🤯', '😳', '😱', '😨', '😰',\r\n  '😢', '🤪', '😵', '😲', '🤤', '😷', '🤒', '🤕',\r\n  '🤢', '🤧', '😇', '🥳', '🥺', '😬', '😴', '😌',\r\n  '🤥', '🥴', '🥵', '🥶', '🤧', '🤭', '🤫', '😠',\r\n  '😡', '😳', '😞', '😟', '😕',\r\n\r\n  // Cat Emojis (Expressive faces of cats)\r\n  '🐱', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾',\r\n\r\n  // Other Animal Emojis (Various animals' faces)\r\n  '🐶', '🐭', '🐹', '🐰', '🦊', '🐻', '🐼',\r\n  '🐨', '🐯', '🦁', '🐮', '🐷', '🐸', '🐵',\r\n  '🙈', '🙉', '🙊', '🐔', '🦄'\r\n];\r\n\r\nlet state = {\r\n  bigImageEvents: {},\r\n  panelsEvents: {},\r\n  // Remove the extra closing parenthesis after getItem('fetchedUsers')\r\n  fetchedUsers: JSON.parse(localStorage.getItem('fetchedUsers')) || {}\r\n};\r\n\r\n// Timeout before the dynamicChatNotification should be removed\r\nconst dynamicChatNotificationTimeout = 5000;\r\n\r\nconst defaultCacheRefreshThresholdHours = 24;\r\nconst cacheRefreshThresholdHours = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.convertToSingleHours)(\r\n  localStorage.getItem('cacheRefreshThresholdHours') ||\r\n  (localStorage.setItem('cacheRefreshThresholdHours', defaultCacheRefreshThresholdHours), defaultCacheRefreshThresholdHours)\r\n);\r\n\r\n// List of trusted domains\r\nconst trustedDomains = [\r\n  'klavogonki.ru',\r\n  'youtube.com', // youtube main\r\n  'youtu.be', // youtube share\r\n  'imgur.com',\r\n  'pikabu.ru',\r\n  'userapi.com', // vk.com\r\n  'ibb.co', // imgbb.com\r\n  'yaplakal.com',\r\n  'freepik.com',\r\n  'fastpic.org'\r\n];\r\n\r\n// Rank order mapping\r\nconst rankOrder = {\r\n  'Экстракибер': 1,\r\n  'Кибергонщик': 2,\r\n  'Супермен': 3,\r\n  'Маньяк': 4,\r\n  'Гонщик': 5,\r\n  'Профи': 6,\r\n  'Таксист': 7,\r\n  'Любитель': 8,\r\n  'Новичок': 9\r\n};\r\n\r\n// Rank color mapping\r\nconst rankColors = {\r\n  'Экстракибер': '#06B4E9', // Light Blue\r\n  'Кибергонщик': '#5681ff', // Medium Blue\r\n  'Супермен': '#B543F5', // Purple\r\n  'Маньяк': '#DA0543', // Red\r\n  'Гонщик': '#FF8C00', // Orange\r\n  'Профи': '#C1AA00', // Yellow\r\n  'Таксист': '#2DAB4F', // Green\r\n  'Любитель': '#61B5B3', // Light Cyan\r\n  'Новичок': '#AFAFAF' // Grey\r\n};\r\n\r\n// Define messageColors and timeColors inside the loop (for messages panel)\r\nconst timeColors = {\r\n  private: 'coral',\r\n  mention: 'darkseagreen'\r\n};\r\n\r\nconst messageColors = {\r\n  private: 'coral',\r\n  mention: 'hsl(0, 10%, 70%)',\r\n  default: 'slategray'\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./src/definitions.js?");

/***/ }),

/***/ "./src/helpers/apiData.js":
/*!********************************!*\
  !*** ./src/helpers/apiData.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertToUpdatedTimestamp: () => (/* binding */ convertToUpdatedTimestamp),\n/* harmony export */   extractHexColor: () => (/* binding */ extractHexColor),\n/* harmony export */   fetchJSON: () => (/* binding */ fetchJSON),\n/* harmony export */   formatRegisteredDate: () => (/* binding */ formatRegisteredDate),\n/* harmony export */   getAllUserIDsByName: () => (/* binding */ getAllUserIDsByName),\n/* harmony export */   getDataById: () => (/* binding */ getDataById),\n/* harmony export */   getDataByName: () => (/* binding */ getDataByName),\n/* harmony export */   getExactUserIdByName: () => (/* binding */ getExactUserIdByName)\n/* harmony export */ });\n// Helper to extract only a valid hex color (e.g. #RRGGBB) from a string\r\nfunction extractHexColor(str) {\r\n  if (typeof str !== 'string') return null;\r\n  const match = str.match(/^#([0-9a-fA-F]{6})\\b/);\r\n  return match ? `#${match[1]}` : null;\r\n}\r\n\r\n// Function to convert Unix timestamp to YYYY-MM-DD format\r\nfunction formatRegisteredDate(registered) {\r\n  if (!registered || !registered.sec) {\r\n    return null;\r\n  }\r\n  const date = new Date(registered.sec * 1000);\r\n  return date.toISOString().split('T')[0];\r\n}\r\n\r\n// Function to convert sec and usec to the 'updated' timestamp\r\nfunction convertToUpdatedTimestamp(sec, usec) {\r\n  return sec != null && usec != null\r\n    ? sec.toString() + Math.floor(usec / 1000).toString()\r\n    : null;\r\n}\r\n\r\n// Helper to fetch JSON and validate response\r\nasync function fetchJSON(url) {\r\n  const response = await fetch(url);\r\n  if (!response.ok) throw new Error(`Failed to fetch ${url}`);\r\n  return response.json();\r\n}\r\n\r\n// Helper function to get exact user ID by username via the search API\r\nasync function getExactUserIdByName(userName) {\r\n  try {\r\n    const searchApiUrl = `https://klavogonki.ru/api/profile/search-users?query=${userName}`;\r\n    const searchResults = await fetchJSON(searchApiUrl);\r\n\r\n    if (!searchResults.all?.length) return null;\r\n\r\n    const user = searchResults.all.find(user => user.login === userName);\r\n    return user ? user.id : null;\r\n  } catch (error) {\r\n    console.error('Error getting user ID:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Helper function to get all user IDs by username via the search API\r\nasync function getAllUserIDsByName(userName) {\r\n  try {\r\n    const searchApiUrl = `https://klavogonki.ru/api/profile/search-users?query=${userName}`;\r\n    const searchResults = await fetchJSON(searchApiUrl);\r\n\r\n    if (!searchResults.all?.length) return [];\r\n\r\n    return searchResults.all.map(user => user.id);\r\n  } catch (error) {\r\n    console.error('Error getting user IDs:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Get user summary data by ID\r\nasync function getUserSummaryById(userId) {\r\n  try {\r\n    const profileApiUrl = `https://klavogonki.ru/api/profile/get-summary?id=${userId}`;\r\n    const summary = await fetchJSON(profileApiUrl);\r\n    return summary;\r\n  } catch (error) {\r\n    console.error('Error getting user summary:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get user index data by ID\r\nasync function getUserIndexDataById(userId) {\r\n  try {\r\n    const indexApiUrl = `https://klavogonki.ru/api/profile/get-index-data?userId=${userId}`;\r\n    const indexData = await fetchJSON(indexApiUrl);\r\n    return indexData;\r\n  } catch (error) {\r\n    console.error('Error getting user index data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Data types that require the index-data API\r\nconst INDEX_DATA_TYPES = new Set([\r\n  'bio', 'bioText', 'bioOldText', 'bioEditedDate', 'stats', 'registered',\r\n  'achievesCount', 'totalRaces', 'bestSpeed', 'ratingLevel', 'friendsCount',\r\n  'vocsCount', 'carsCount', 'achieves', 'allIndexData'\r\n]);\r\n\r\n// Data types that require the summary API\r\nconst SUMMARY_DATA_TYPES = new Set([\r\n  'usernamesHistory', 'currentLogin', 'userId', 'level', 'status', 'title',\r\n  'car', 'carColor', 'isOnline', 'avatar', 'blocked', 'isFriend', 'publicPrefs', 'allUserData'\r\n]);\r\n\r\n// MAIN FUNCTION: Get specific data by username - automatically chooses correct API\r\nasync function getDataByName(userName, dataType) {\r\n  try {\r\n    const userId = await getExactUserIdByName(userName);\r\n    if (!userId) {\r\n      throw new Error(`User with username \"${userName}\" not found`);\r\n    }\r\n\r\n    return await getDataById(userId, dataType);\r\n  } catch (error) {\r\n    console.error(`Error getting ${dataType} for user ${userName}:`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// MAIN FUNCTION: Get specific data by user ID - automatically chooses correct API\r\nasync function getDataById(userId, dataType) {\r\n  try {\r\n    if (INDEX_DATA_TYPES.has(dataType)) {\r\n      const indexData = await getUserIndexDataById(userId);\r\n      return extractData(indexData, dataType, 'index');\r\n    } else if (SUMMARY_DATA_TYPES.has(dataType)) {\r\n      const summary = await getUserSummaryById(userId);\r\n      return extractData(summary, dataType, 'summary');\r\n    } else {\r\n      throw new Error(`Unknown data type: ${dataType}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error getting ${dataType} for user ID ${userId}:`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Universal data extractor function - handles both API responses\r\nfunction extractData(data, dataType, apiType) {\r\n  if (!data) return null;\r\n\r\n  if (apiType === 'summary') {\r\n    const userData = { ...(data.user || {}), ...data };\r\n\r\n    switch (dataType) {\r\n      case 'usernamesHistory':\r\n        return Array.isArray(userData.history)\r\n          ? userData.history.map(item => item.login)\r\n          : [];\r\n\r\n      case 'currentLogin':\r\n        return userData.login || null;\r\n      case 'userId':\r\n        return userData.id || null;\r\n      case 'level':\r\n        return userData.level || null;\r\n      case 'status':\r\n        return userData.status || null;\r\n      case 'title': // Rank\r\n        return userData.title || (userData.status?.title ?? null);\r\n      case 'car': // Cars Count\r\n        return userData.car || null;\r\n      case 'carColor': {\r\n        // Only return a valid hex color (e.g. #RRGGBB), ignore if contains anything else\r\n        return userData.car ? extractHexColor(userData.car.color) : null;\r\n      }\r\n      case 'isOnline':\r\n        return userData.is_online ?? false;\r\n      case 'avatar': // sec and usec data\r\n        return userData.avatar || null;\r\n      case 'avatarTimestamp': {\r\n        const avatar = userData.avatar;\r\n        if (avatar && typeof avatar.sec === 'number' && typeof avatar.usec === 'number') {\r\n          return convertToUpdatedTimestamp(avatar.sec, avatar.usec);\r\n        }\r\n        return null;\r\n      }\r\n      case 'blocked':\r\n        return userData.blocked ?? null;\r\n      case 'isFriend':\r\n        return userData.is_friend ?? false;\r\n      case 'publicPrefs':\r\n        return userData.public_prefs || null;\r\n      case 'allUserData':\r\n        return userData;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  if (apiType === 'index') {\r\n    switch (dataType) {\r\n      case 'bio':\r\n        return data.bio || null;\r\n      case 'bioText':\r\n        return data.bio?.text || null;\r\n      case 'bioOldText':\r\n        return data.bio?.old_text || null;\r\n      case 'bioEditedDate':\r\n        return data.bio?.edited_date || null;\r\n      case 'stats':\r\n        return data.stats || null;\r\n      case 'registered':\r\n        return formatRegisteredDate(data.stats?.registered);\r\n      case 'achievesCount':\r\n        return data.stats?.achieves_cnt || null;\r\n      case 'totalRaces':\r\n        return data.stats?.total_num_races || null;\r\n      case 'bestSpeed':\r\n        return data.stats?.best_speed || null;\r\n      case 'ratingLevel':\r\n        return data.stats?.rating_level || null;\r\n      case 'friendsCount':\r\n        return data.stats?.friends_cnt || null;\r\n      case 'vocsCount':\r\n        return data.stats?.vocs_cnt || null;\r\n      case 'carsCount':\r\n        return data.stats?.cars_cnt || null;\r\n      case 'achieves':\r\n        return data.achieves || null;\r\n      case 'allIndexData':\r\n        return data;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/apiData.js?");

/***/ }),

/***/ "./src/helpers/colorUtils.js":
/*!***********************************!*\
  !*** ./src/helpers/colorUtils.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheUserData: () => (/* binding */ cacheUserData),\n/* harmony export */   hexToRgb: () => (/* binding */ hexToRgb),\n/* harmony export */   hslToHex: () => (/* binding */ hslToHex),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   normalizeUsernameColor: () => (/* binding */ normalizeUsernameColor),\n/* harmony export */   rgbToHex: () => (/* binding */ rgbToHex),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl)\n/* harmony export */ });\n/* harmony import */ var _apiData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiData.js */ \"./src/helpers/apiData.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\nfunction rgbToHsl(r, g, b) {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  const max = Math.max(r, g, b);\r\n  const min = Math.min(r, g, b);\r\n  let h, s, l = (max + min) / 2;\r\n  if (max === min) {\r\n    h = s = 0;\r\n  } else {\r\n    const delta = max - min;\r\n    s = l < 0.5 ? delta / (max + min) : delta / (2 - max - min);\r\n    h = (\r\n      max === r\r\n        ? (g - b) / delta + (g < b ? 6 : 0)\r\n        : max === g\r\n          ? (b - r) / delta + 2\r\n          : (r - g) / delta + 4\r\n    ) / 6;\r\n  }\r\n  h = Math.round(h * 360);\r\n  s = Math.min(Math.round(s * 100), 90);\r\n  l = Math.round(l * 100);\r\n  if (h > 215 && h < 280) {\r\n    h = h < 255 ? 215 : 280;\r\n  }\r\n  return { h, s, l };\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n  s /= 100; l /= 100;\r\n  let r, g, b;\r\n  if (s === 0) r = g = b = l * 255;\r\n  else {\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s, p = 2 * l - q;\r\n    const hue2rgb = (p, q, t) => {\r\n      if (t < 0) t += 1;\r\n      if (t > 1) t -= 1;\r\n      return t < 1 / 6 ? p + (q - p) * 6 * t :\r\n        t < 1 / 2 ? q :\r\n          t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 :\r\n            p;\r\n    };\r\n    r = Math.round(hue2rgb(p, q, h / 360 + 1 / 3) * 255);\r\n    g = Math.round(hue2rgb(p, q, h / 360) * 255);\r\n    b = Math.round(hue2rgb(p, q, h / 360 - 1 / 3) * 255);\r\n  }\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n}\r\n\r\n/**\r\n * Convert HSL to HEX\r\n * @param {number} h - Hue degree between 0 and 360\r\n * @param {number} s - Saturation percentage between 0 and 100\r\n * @param {number} l - Lightness percentage between 0 and 100\r\n * @returns {string} Hex color string in the form \"#rrggbb\"\r\n */\r\nfunction hslToHex(h, s, l) {\r\n  // normalize s, l to [0,1]\r\n  s /= 100;\r\n  l /= 100;\r\n\r\n  const a = s * Math.min(l, 1 - l);\r\n\r\n  const f = (n) => {\r\n    const k = (n + h / 30) % 12;\r\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n    return Math.round(color * 255)\r\n      .toString(16)\r\n      .padStart(2, '0');\r\n  };\r\n\r\n  return `#${f(0)}${f(8)}${f(4)}`;\r\n}\r\n\r\n/**\r\n * Converts an RGB color string to HEX\r\n * @param {string} rgb - RGB color string (e.g., \"rgb(128, 128, 128)\")\r\n * @returns {string} - HEX color string (e.g., \"#808080\")\r\n */\r\nfunction rgbToHex(rgb) {\r\n  if (!rgb || typeof rgb !== 'string') return '#808080'; // Fallback to gray\r\n  const match = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/i);\r\n  if (!match) return '#808080'; // Fallback to gray if invalid\r\n  const [, r, g, b] = match.map(Number);\r\n  // Ensure values are within valid range (0-255)\r\n  const validR = Math.max(0, Math.min(255, r));\r\n  const validG = Math.max(0, Math.min(255, g));\r\n  const validB = Math.max(0, Math.min(255, b));\r\n  return `#${((1 << 24) + (validR << 16) + (validG << 8) + validB).toString(16).slice(1).padStart(6, '0')}`;\r\n}\r\n\r\n/**\r\n * Converts a hexadecimal color string to its RGB components.\r\n *\r\n * @param {string} hex - A hex color string in the format '#RRGGBB' or 'RRGGBB'.\r\n * @returns {{ r: number, g: number, b: number }} An object with the red, green, and blue values (0-255).\r\n * @throws {Error} If the input is not a valid hex color string.\r\n *\r\n * @example\r\n * // returns { r: 255, g: 165, b: 0 }\r\n * const rgb = hexToRgb('#FFA500');\r\n */\r\nfunction hexToRgb(hex) {\r\n  // Remove leading '#' if present\r\n  const normalizedHex = hex.replace(/^#/, '');\r\n\r\n  // Validate hex string length and characters\r\n  if (!/^[0-9A-Fa-f]{6}$/.test(normalizedHex)) {\r\n    throw new Error(`Invalid hex color: \"${hex}\"`);\r\n  }\r\n\r\n  // Parse the three pairs of hex digits\r\n  const r = parseInt(normalizedHex.slice(0, 2), 16);\r\n  const g = parseInt(normalizedHex.slice(2, 4), 16);\r\n  const b = parseInt(normalizedHex.slice(4, 6), 16);\r\n\r\n  return { r, g, b };\r\n}\r\n\r\n/**\r\n * Normalizes a username color to ensure minimum lightness and consistent output.\r\n * @param {string|object} inputColor - The color value (HEX string, RGB string, or HSL object/string)\r\n * @param {\"hex\"|\"rgb\"|\"hsl\"} [inputType=\"rgb\"] - The type of the input color\r\n * @param {number} [minLightness=60] - Minimum lightness for contrast boost (0-100)\r\n * @returns {string} - Normalized HEX color string (e.g., \"#808080\")\r\n */\r\nfunction normalizeUsernameColor(inputColor, inputType = \"rgb\", minLightness = 65) {\r\n  let r, g, b, h, s, l;\r\n  if (inputType === \"hex\") {\r\n    // Convert HEX to RGB\r\n    const rgb = hexToRgb(inputColor);\r\n    r = rgb.r; g = rgb.g; b = rgb.b;\r\n    ({ h, s, l } = rgbToHsl(r, g, b));\r\n  } else if (inputType === \"rgb\") {\r\n    // Parse RGB string\r\n    if (typeof inputColor === \"string\") {\r\n      [r, g, b] = inputColor.match(/\\d+/g).map(Number);\r\n    } else if (typeof inputColor === \"object\" && inputColor.r !== undefined) {\r\n      r = inputColor.r; g = inputColor.g; b = inputColor.b;\r\n    }\r\n    ({ h, s, l } = rgbToHsl(r, g, b));\r\n  } else if (inputType === \"hsl\") {\r\n    // Accept either HSL object or string\r\n    if (typeof inputColor === \"string\") {\r\n      [h, s, l] = inputColor.match(/\\d+/g).map(Number);\r\n    } else if (typeof inputColor === \"object\" && inputColor.h !== undefined) {\r\n      h = inputColor.h; s = inputColor.s; l = inputColor.l;\r\n    }\r\n  } else {\r\n    throw new Error(\"Unsupported inputType for normalizeUsernameColor: \" + inputType);\r\n  }\r\n\r\n  // Adjust lightness to ensure it's at least minLightness (default 60 for more contrast)\r\n  const normalizedLightness = l < minLightness ? minLightness : l;\r\n  const rgbString = hslToRgb(h, s, normalizedLightness);\r\n  return rgbToHex(rgbString);\r\n}\r\n\r\n/**\r\n * Loads and caches username colors and IDs for a list of usernames.\r\n * Updates localStorage cache USER_DATA_CACHE_KEY.\r\n * Returns updated userData object.\r\n */\r\nasync function cacheUserData(usernames, userDataKey = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.USER_DATA_CACHE_KEY) {\r\n  let userData = JSON.parse(localStorage.getItem(userDataKey) || '{}');\r\n  const usernamesToFetch = usernames.filter(username => !(username in userData));\r\n  if (usernamesToFetch.length) {\r\n    const userDataResults = await Promise.all(\r\n      usernamesToFetch.map(username => (0,_apiData_js__WEBPACK_IMPORTED_MODULE_0__.getDataByName)(username, 'allUserData'))\r\n    );\r\n    usernamesToFetch.forEach((username, i) => {\r\n      const fetched = userDataResults[i];\r\n      if (fetched) {\r\n        const carColor = fetched.car ? (0,_apiData_js__WEBPACK_IMPORTED_MODULE_0__.extractHexColor)(fetched.car.color) : null;\r\n        userData[username] = {\r\n          id: fetched.id || null,\r\n          color: carColor && carColor.startsWith('#')\r\n            ? normalizeUsernameColor(carColor, \"hex\")\r\n            : '#808080'\r\n        };\r\n      } else {\r\n        userData[username] = {\r\n          id: null,\r\n          color: '#808080'\r\n        };\r\n      }\r\n    });\r\n    localStorage.setItem(userDataKey, JSON.stringify(userData));\r\n  }\r\n  return userData;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/colorUtils.js?");

/***/ }),

/***/ "./src/helpers/elementVisibility.js":
/*!******************************************!*\
  !*** ./src/helpers/elementVisibility.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjustVisibility: () => (/* binding */ adjustVisibility),\n/* harmony export */   triggerDimmingElement: () => (/* binding */ triggerDimmingElement),\n/* harmony export */   triggerTargetElement: () => (/* binding */ triggerTargetElement)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n// Adjust element visibility with smooth opacity transition\r\nfunction adjustVisibility(element, action, opacity) {\r\n  if (!element) return; // Exit if element doesn't exist\r\n\r\n  // Force reflow to ensure initial state is recognized\r\n  void element.offsetHeight;\r\n\r\n  element.style.transition = 'opacity 0.3s'; // Apply smooth transition for both show and hide\r\n  element.style.opacity = action === 'show' ? opacity : '0'; // Set target opacity\r\n\r\n  // If hiding, wait for transition to finish before removing the element\r\n  if (action === 'hide') {\r\n    element.addEventListener('transitionend', () => {\r\n      if (element.style.opacity === '0') element.remove(); // Remove only when opacity reaches 0\r\n    }, { once: true }); // Ensure the event runs only once\r\n  }\r\n}\r\n\r\n// Function to gradually fade a target element to show or hide it\r\nfunction triggerTargetElement(element, action) {\r\n  if (!element) return; // Return if the element does not exist\r\n\r\n  // Adjust the visibility of a specific element, setting opacity to 1 (fully visible)\r\n  adjustVisibility(element, action, 1);\r\n\r\n  // Add a double-click event listener to hide the element\r\n  element.addEventListener('dblclick', (event) => {\r\n    const isPanelOpen = document.querySelector('.popup-panel');\r\n\r\n    // Condition to allow hiding when double-clicked on:\r\n    // 1. The element itself\r\n    // 2. Direct children (one level down)\r\n    // 3. Children of direct children (two levels down)\r\n    const isElementOrDirectChild =\r\n      event.target === element ||\r\n      event.target.parentElement === element ||\r\n      (event.target.parentElement && event.target.parentElement.parentElement === element);\r\n\r\n    // Only proceed if clicked on the element itself or its direct children (up to 2 levels)\r\n    if (!isElementOrDirectChild) return;\r\n\r\n    // If no panel is open or the clicked element is not within a scaled thumbnail, hide the dimming element\r\n    if (!isPanelOpen || !event.target.closest('.scaled-thumbnail')) {\r\n      triggerDimmingElement('hide');\r\n    }\r\n\r\n    // Hide the target element\r\n    adjustVisibility(element, 'hide', 1);\r\n  });\r\n}\r\n\r\n// Function to create and fade the dimming element\r\nfunction triggerDimmingElement(action) {\r\n  // Only stop the chatlogs parser if the chatlogs panel is present and being closed\r\n  const chatlogsPanel = document.querySelector('.chat-logs-panel');\r\n  if (action === 'hide' && chatlogsPanel) {\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.stopParserIfRunning)();\r\n  }\r\n\r\n  // Check if the dimming element already exists\r\n  let dimming = document.querySelector('.dimming-background');\r\n  // Check if the scaled thumbnail already exists\r\n  let scaledThumbnail = document.querySelector('.scaled-thumbnail');\r\n\r\n  // If the action is 'hide' and the dimming element doesn't exist, return\r\n  if (action === 'hide' && !dimming) return;\r\n\r\n  // Create the dimming element only if it doesn't exist\r\n  if (!dimming) {\r\n    dimming = document.createElement('div');\r\n    dimming.classList.add('dimming-background');\r\n\r\n    // Append the dimming element to the body\r\n    document.body.appendChild(dimming);\r\n\r\n    // Add click event listener to remove the dimming element and the upper element\r\n    dimming.addEventListener('click', function () {\r\n      // First, check for .popup-panel, then check for previousElementSibling\r\n      const elementToRemove = document.querySelector('.popup-panel') || dimming.previousElementSibling;\r\n      if (elementToRemove) adjustVisibility(elementToRemove, 'hide', 0); // Fade out and remove element\r\n      triggerDimmingElement('hide');\r\n      if (scaledThumbnail) (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.removeBigImageEventListeners)(); // Remove all bigImage event listeners\r\n    });\r\n  }\r\n\r\n  // Adjust the visibility of an element with a dimming effect, setting opacity to 0.5\r\n  adjustVisibility(dimming, action, 0.5);\r\n\r\n  // If the action is 'hide', check for and remove the .scaled-thumbnail using triggerTargetElement\r\n  if (action === 'hide') {\r\n    if (scaledThumbnail) {\r\n      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.removeBigImageEventListeners)(); // Remove all bigImage event listeners\r\n      triggerTargetElement(scaledThumbnail, 'hide'); // Use triggerTargetElement to fade out and remove the scaled-thumbnail\r\n    }\r\n  }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/elementVisibility.js?");

/***/ }),

/***/ "./src/helpers/getLatestMessageData.js":
/*!*********************************************!*\
  !*** ./src/helpers/getLatestMessageData.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLatestMessageData: () => (/* binding */ getLatestMessageData),\n/* harmony export */   highlightMentionWords: () => (/* binding */ highlightMentionWords),\n/* harmony export */   isMentionForMe: () => (/* binding */ isMentionForMe)\n/* harmony export */ });\n/* harmony import */ var _colorUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colorUtils.js */ \"./src/helpers/colorUtils.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  ignored,\r\n  mentionKeywords,\r\n  usernameReplacements,\r\n  usersToTrack\r\n} = _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_2__.settingsState;\r\n\r\n\r\n// --- Helper functions for message processing ---\r\n\r\n// Function to check if a username is mentioned in the message\r\nfunction isMentionForMe(message) {\r\n  const messageLowercase = message.toLowerCase();\r\n  return mentionKeywords.some(keyword => messageLowercase.includes(keyword.toLowerCase()));\r\n}\r\n\r\n// Function to replace usernames with their pronunciations or replacements\r\nfunction replaceWithPronunciation(text) {\r\n  if (text === null) return text;\r\n\r\n  // Combine all usernames that need replacement\r\n  const allUsernames = [\r\n    ...usersToTrack.map(user => user.name),\r\n    ...usernameReplacements.map(replacement => replacement.original)\r\n  ];\r\n\r\n  // Create a pattern to match any character that is part of a word (including Cyrillic characters).\r\n  const pattern = new RegExp(`(${allUsernames.join('|')})`, 'gu');\r\n\r\n  return text.replace(pattern, (matched) => {\r\n    // Priority 1: Check username replacements\r\n    const replacement = usernameReplacements.find(r => r.original === matched);\r\n    if (replacement) return replacement.replacement;\r\n\r\n    // Priority 2: Check tracked user pronunciations\r\n    const trackedUser = usersToTrack.find(user => user.name === matched);\r\n    return trackedUser?.pronunciation || matched;\r\n  });\r\n}\r\n\r\n// Function to highlight mention words in messages\r\nfunction highlightMentionWords(containerType = 'generalMessages') {\r\n  const containerSelectors = {\r\n    generalMessages: {\r\n      container: '.messages-content div',\r\n      messageElement: 'p',\r\n      exclude: ['.time', '.username'] // Add exclusion list\r\n    },\r\n    chatlogsMessages: {\r\n      container: '.chat-logs-container',\r\n      messageElement: '.message-text'\r\n    },\r\n    personalMessages: {\r\n      container: '.messages-container',\r\n      messageElement: '.message-text'\r\n    }\r\n  };\r\n\r\n  const config = containerSelectors[containerType];\r\n  if (!config) {\r\n    console.error('Invalid container type');\r\n    return;\r\n  }\r\n\r\n  const containers = document.querySelectorAll(config.container);\r\n  const globalProcessed = new WeakSet();\r\n\r\n  containers.forEach((container) => {\r\n    const messages = container.querySelectorAll(config.messageElement);\r\n\r\n    messages.forEach((message) => {\r\n      const processingQueue = [\r\n        ...message.querySelectorAll('.private'),\r\n        ...message.querySelectorAll('.system-message'),\r\n        message\r\n      ];\r\n\r\n      processingQueue.forEach((element) => {\r\n        const walker = document.createTreeWalker(\r\n          element,\r\n          NodeFilter.SHOW_TEXT,\r\n          {\r\n            acceptNode: (node) => {\r\n              // Skip processed nodes and protected elements\r\n              if (globalProcessed.has(node)) return NodeFilter.FILTER_SKIP;\r\n\r\n              // Check if node is inside excluded elements\r\n              const parent = node.parentElement;\r\n              if (parent.closest('.mention, .time, .username')) {\r\n                return NodeFilter.FILTER_SKIP;\r\n              }\r\n\r\n              // Additional exclusion for generalMessages\r\n              if (containerType === 'generalMessages' && parent.closest(config.exclude.join(','))) {\r\n                return NodeFilter.FILTER_SKIP;\r\n              }\r\n\r\n              return NodeFilter.FILTER_ACCEPT;\r\n            }\r\n          },\r\n          false\r\n        );\r\n\r\n        const nodes = [];\r\n        let currentNode;\r\n        while ((currentNode = walker.nextNode())) {\r\n          nodes.push(currentNode);\r\n        }\r\n\r\n        nodes.forEach((node) => {\r\n          if (!globalProcessed.has(node)) {\r\n            processNode(node);\r\n            globalProcessed.add(node);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  function processNode(node) {\r\n    const regex = /[\\s]+|[^\\s\\wа-яА-ЯёЁ]+|[\\wа-яА-ЯёЁ]+/g;\r\n    const words = node.textContent.match(regex);\r\n    if (!words) return;\r\n\r\n    const fragment = document.createDocumentFragment();\r\n\r\n    words.forEach((word) => {\r\n      if (mentionKeywords.map(alias => alias.toLowerCase()).includes(word.toLowerCase())) {\r\n        const mentionSpan = document.createElement('span');\r\n        mentionSpan.className = 'mention';\r\n        mentionSpan.textContent = word;\r\n        fragment.appendChild(mentionSpan);\r\n      } else {\r\n        fragment.appendChild(document.createTextNode(word));\r\n      }\r\n    });\r\n\r\n    node.parentNode.replaceChild(fragment, node);\r\n  }\r\n}\r\n\r\n// --- Main function to get the latest message data ---\r\n\r\n// Initialize the variable to keep track of the last username seen\r\nlet lastUsername = null;\r\n\r\nasync function getLatestMessageData() {\r\n  const messageElement = document.querySelector('.messages-content div p:last-of-type');\r\n  if (!messageElement) return null;\r\n\r\n  // Inline helper: collects text parts from a container's child nodes.\r\n  const collectMessageParts = async (container) =>\r\n    Array.from(container.childNodes)\r\n      .map(node =>\r\n        node.nodeType === Node.TEXT_NODE && node.textContent.trim() ? node.textContent.trim() :\r\n          node.nodeName === 'IMG' && node.getAttribute('title') ? node.getAttribute('title') :\r\n            node.nodeName === 'A' && node.getAttribute('href') ? node.getAttribute('href') : ''\r\n      )\r\n      .filter(Boolean);\r\n\r\n  // 1. Extract common message text.\r\n  let finalMessageText = (await collectMessageParts(messageElement)).join(' ').trim();\r\n  let messageType = \"common\"; // Default message type\r\n\r\n  // 2. Check for private messages\r\n  const privateMessageContainer = messageElement.querySelector('.room.private');\r\n  if (privateMessageContainer && privateMessageContainer.textContent.includes('[шепчет ')) {\r\n    const privateMessageElement = messageElement.querySelector('span.private');\r\n    if (privateMessageElement) {\r\n      finalMessageText = (await collectMessageParts(privateMessageElement)).join(' ').trim();\r\n      messageType = \"private\";\r\n    }\r\n  }\r\n\r\n  // 3. Check for system messages\r\n  const systemMessageElement = messageElement.querySelector('.system-message');\r\n  if (systemMessageElement) {\r\n    let systemMessageText = (await collectMessageParts(systemMessageElement)).join(' ').trim();\r\n    systemMessageText = systemMessageText.replace(/<Клавобот>\\s*/g, '');\r\n    finalMessageText = systemMessageText;\r\n    messageType = \"system\";\r\n  }\r\n\r\n  // 4. If still \"common\" and it mentions the user, mark as \"mention\".\r\n  if (messageType === \"common\" && isMentionForMe(finalMessageText)) {\r\n    messageType = \"mention\";\r\n  }\r\n\r\n  // Process localStorage: retrieve or initialize personalMessages.\r\n  const personalMessages = JSON.parse(localStorage.getItem('personalMessages')) || {};\r\n\r\n  // Extract message metadata.\r\n  const time = messageElement.querySelector('.time')?.textContent || 'N/A';\r\n  const usernameDataElement = messageElement.querySelector('.username span[data-user]');\r\n  const userId = usernameDataElement ? usernameDataElement.getAttribute('data-user') : null;\r\n  const extractedUsername = usernameDataElement ? usernameDataElement.textContent : 'SYSTEM';\r\n  const usernameColor = usernameDataElement ? usernameDataElement.parentElement.style.color : 'rgb(180,180,180)';\r\n  const normalizedColor = (0,_colorUtils_js__WEBPACK_IMPORTED_MODULE_0__.normalizeUsernameColor)(usernameColor, \"rgb\");\r\n  const messageKey = `${time}_${extractedUsername}_${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.today}`;\r\n\r\n  // Check if the message type is \"mention\" or \"private\", and if the username is not in the ignore list\r\n  const shouldSaveMessage = (\r\n    messageType === \"mention\" ||\r\n    messageType === \"private\"\r\n  ) && !ignored.includes(extractedUsername);\r\n\r\n  // If the condition is met, save the message to localStorage\r\n  if (shouldSaveMessage) {\r\n    personalMessages[messageKey] = {\r\n      time,\r\n      date: _definitions_js__WEBPACK_IMPORTED_MODULE_1__.today,\r\n      username: extractedUsername,\r\n      usernameColor: normalizedColor,\r\n      message: finalMessageText,\r\n      type: messageType,\r\n      userId\r\n    };\r\n    localStorage.setItem('personalMessages', JSON.stringify(personalMessages));\r\n    \r\n    // Update lastClickedMessage to point to the newly added message\r\n    // Create the same key format used in messages.js for consistency\r\n    const lastClickedMessageKey = `${_definitions_js__WEBPACK_IMPORTED_MODULE_1__.today}|${time}|${extractedUsername}`;\r\n    localStorage.setItem('lastClickedMessage', lastClickedMessageKey);\r\n  }\r\n\r\n  // Extract username (defaulting to \"SYSTEM\") and build prefix.\r\n  const usernameContainer = messageElement.querySelector('.username');\r\n  const usernameText = usernameContainer ? usernameContainer.textContent.replace(/[<>]/g, '') : 'SYSTEM';\r\n\r\n  highlightMentionWords(); // Apply highlight for all message types\r\n\r\n  let prefix = (messageType === \"mention\" || messageType === \"private\")\r\n    ? `${replaceWithPronunciation(usernameText)} обращается: `\r\n    : (usernameText !== lastUsername ? `${replaceWithPronunciation(usernameText)} пишет: ` : \"\");\r\n\r\n  lastUsername = usernameText;\r\n\r\n  const messageText = prefix + replaceWithPronunciation(finalMessageText);\r\n  return { messageText, usernameText };\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/getLatestMessageData.js?");

/***/ }),

/***/ "./src/helpers/helpers.js":
/*!********************************!*\
  !*** ./src/helpers/helpers.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBigImageEventListeners: () => (/* binding */ addBigImageEventListeners),\n/* harmony export */   clearSelection: () => (/* binding */ clearSelection),\n/* harmony export */   convertToSingleHours: () => (/* binding */ convertToSingleHours),\n/* harmony export */   copyChatlogsUrlToClipboard: () => (/* binding */ copyChatlogsUrlToClipboard),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   getCurrentLanguage: () => (/* binding */ getCurrentLanguage),\n/* harmony export */   getCurrentTimeString: () => (/* binding */ getCurrentTimeString),\n/* harmony export */   getExportMessageContent: () => (/* binding */ getExportMessageContent),\n/* harmony export */   getFullMessageContent: () => (/* binding */ getFullMessageContent),\n/* harmony export */   getRandomEmojiAvatar: () => (/* binding */ getRandomEmojiAvatar),\n/* harmony export */   isBanMessage: () => (/* binding */ isBanMessage),\n/* harmony export */   isTextSelected: () => (/* binding */ isTextSelected),\n/* harmony export */   isTrustedDomain: () => (/* binding */ isTrustedDomain),\n/* harmony export */   localizedMessage: () => (/* binding */ localizedMessage),\n/* harmony export */   locationHas: () => (/* binding */ locationHas),\n/* harmony export */   logUserAction: () => (/* binding */ logUserAction),\n/* harmony export */   normalizeAndResetUsernames: () => (/* binding */ normalizeAndResetUsernames),\n/* harmony export */   normalizeDate: () => (/* binding */ normalizeDate),\n/* harmony export */   playSound: () => (/* binding */ playSound),\n/* harmony export */   removeAllPanelEventListeners: () => (/* binding */ removeAllPanelEventListeners),\n/* harmony export */   removeBigImageEventListeners: () => (/* binding */ removeBigImageEventListeners),\n/* harmony export */   removePreviousPanel: () => (/* binding */ removePreviousPanel),\n/* harmony export */   shouldEnable: () => (/* binding */ shouldEnable),\n/* harmony export */   stopParserIfRunning: () => (/* binding */ stopParserIfRunning),\n/* harmony export */   updatePersonalMessageCounts: () => (/* binding */ updatePersonalMessageCounts)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _colorUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorUtils.js */ \"./src/helpers/colorUtils.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../animations.js */ \"./src/animations.js\");\n\r\n\r\n\r\n\r\n\r\nlet { panelsEvents, bigImageEvents, fetchedUsers } = _definitions_js__WEBPACK_IMPORTED_MODULE_0__.state;\r\n\r\nconst locationHas = part => window.location.href.includes(part);\r\n\r\n// Function to remove all event listeners from the panel\r\nfunction removeAllPanelEventListeners() {\r\n  Object.values(panelsEvents).forEach((handler) => {\r\n    document.removeEventListener('keydown', handler);\r\n  });\r\n\r\n  // Remove all keys without reassigning the object\r\n  Object.keys(panelsEvents).forEach((key) => delete panelsEvents[key]);\r\n}\r\n\r\nfunction addBigImageEventListeners() {\r\n  Object.entries(bigImageEvents).forEach(([event, handler]) => {\r\n    document.addEventListener(event, handler);\r\n  })\r\n}\r\n\r\nfunction removeBigImageEventListeners() {\r\n  Object.entries(bigImageEvents).forEach(([event, handler]) => {\r\n    document.removeEventListener(event, handler);\r\n  })\r\n}\r\n\r\n// Function to remove the previous panel if it exists\r\nfunction removePreviousPanel() {\r\n  removeAllPanelEventListeners();\r\n  const existingPanel = document.querySelector('.popup-panel');\r\n  if (existingPanel) existingPanel.remove();\r\n}\r\n\r\nconst debounce = (func, delay = 300) => {\r\n  let timeoutId;\r\n  return function (...args) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func.apply(this, args), delay);\r\n  };\r\n};\r\n\r\nfunction stopParserIfRunning() {\r\n  // --- STOP CHATLOGS PARSER IF RUNNING ---\r\n  if (window.chatlogsParserState && typeof window.chatlogsParserState.isRunning === 'function' && window.chatlogsParserState.isRunning()) {\r\n    if (typeof window.stopChatlogsParser === 'function') {\r\n      window.stopChatlogsParser();\r\n    }\r\n    // Clean up global references after stopping\r\n    delete window.chatlogsParserState;\r\n    delete window.stopChatlogsParser;\r\n  }\r\n}\r\n\r\n// Variable to store the last selected emoji\r\nlet lastEmojiAvatar = null;\r\n\r\n// Helper function to get a random emoji avatar\r\nfunction getRandomEmojiAvatar() {\r\n  let newEmoji;\r\n  do {\r\n    newEmoji = _definitions_js__WEBPACK_IMPORTED_MODULE_0__.emojiFaces[Math.floor(Math.random() * _definitions_js__WEBPACK_IMPORTED_MODULE_0__.emojiFaces.length)];\r\n  } while (newEmoji === lastEmojiAvatar);\r\n\r\n  lastEmojiAvatar = newEmoji;\r\n  return newEmoji;\r\n}\r\n\r\n// Helper function to convert time string to single hours\r\nfunction convertToSingleHours(timeString) {\r\n  const [hours, minutes = 0, seconds = 0] = timeString.split(':').map(Number);\r\n  return hours + minutes / 60 + seconds / 3600;\r\n}\r\n\r\nfunction shouldEnable(targetCategory, targetType) {\r\n  // Get stored toggle settings or default to empty array\r\n  const storedSettings = JSON.parse(localStorage.getItem('toggle')) || [];\r\n\r\n  // Find matching setting in localStorage\r\n  const storedSetting = storedSettings.find(s =>\r\n    s.category === targetCategory && s.type === targetType\r\n  );\r\n\r\n  // Return true if option is explicitly 'yes', false otherwise\r\n  return storedSetting ? storedSetting.option === 'yes' : true;\r\n}\r\n\r\n// ---- User actions logger (enter && leave) ----\r\n// Helper function to get current time formatted as [HH:MM:SS]\r\nfunction getCurrentTimeString() {\r\n  return new Date().toLocaleTimeString('en-US', {\r\n    hour12: false,\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  });\r\n}\r\n\r\nfunction logUserAction(userId, actionType) {\r\n  if (userId && actionType) {\r\n    // Initialize user object and ensure actionLog is an array\r\n    fetchedUsers[userId] = fetchedUsers[userId] || {};\r\n    fetchedUsers[userId].actionLog = fetchedUsers[userId].actionLog || [];\r\n\r\n    // Log the action\r\n    fetchedUsers[userId].actionLog.push({\r\n      type: actionType,\r\n      timestamp: getCurrentTimeString()\r\n    });\r\n  } else {\r\n    console.error('Missing userId or actionType');\r\n  }\r\n}\r\n\r\nconst isTrustedDomain = url => {\r\n  try {\r\n    const { hostname } = new URL(url);\r\n    const domain = hostname.toLowerCase().split('.').slice(-2).join('.');\r\n    return { isTrusted: _definitions_js__WEBPACK_IMPORTED_MODULE_0__.trustedDomains.includes(domain), domain };\r\n  } catch (err) {\r\n    console.error(\"Error in isTrustedDomain:\", err.message);\r\n    return { isTrusted: false, domain: url };\r\n  }\r\n};\r\n\r\n// Initialize previousTotalCount with the current personal messages count from localStorage\r\nlet previousTotalCount =\r\n  (localStorage.personalMessages && Object.keys(JSON.parse(localStorage.personalMessages)).length) || 0;\r\n/**\r\n * Updates total and new personal message counts near the personal messages button.\r\n * - Increments new message count only when total message count increases.\r\n * - Manages visibility and pulse effects for the new message indicator.\r\n */\r\nfunction updatePersonalMessageCounts() {\r\n  const totalCountElement = document.querySelector('.personal-messages-button .total-message-count');\r\n  const newCountElement = document.querySelector('.personal-messages-button .new-message-count');\r\n  if (!totalCountElement || !newCountElement) return; // Exit if elements are missing\r\n\r\n  const personalMessages = JSON.parse(localStorage.getItem('personalMessages')) || {};\r\n  const totalCount = Object.keys(personalMessages).length;\r\n\r\n  let newCount = Number(localStorage.getItem('newMessagesCount')) || 0;\r\n  if (totalCount > previousTotalCount) {\r\n    newCount++;\r\n    localStorage.setItem('newMessagesCount', newCount);\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_2__.addPulseEffect)(newCountElement); // Apply pulse effect for new messages\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_2__.addJumpEffect)(newCountElement, 50, 50); // Apply jump effect for new messages\r\n  }\r\n\r\n  // Update counts in the UI\r\n  totalCountElement.textContent = totalCount;\r\n  newCountElement.textContent = newCount;\r\n\r\n  // Manage visibility of the new message indicator\r\n  newCountElement.style.visibility = newCount > 0 ? 'visible' : 'hidden';\r\n\r\n  // Apply pulse effect if total count changes\r\n  if (totalCount !== previousTotalCount) (0,_animations_js__WEBPACK_IMPORTED_MODULE_2__.addPulseEffect)(totalCountElement);\r\n\r\n  previousTotalCount = totalCount; // Update previous count\r\n}\r\n\r\n// Function to play sound as a notification for system message banned\r\nfunction playSound() {\r\n  const marioGameOver = 'https://github.com/VimiummuimiV/Sounds/raw/refs/heads/main/Mario_Game_Over.mp3';\r\n  const audio = new Audio(marioGameOver);\r\n  audio.play();\r\n}\r\n\r\n// Function to detect a ban message based on the message text content\r\nfunction isBanMessage(messageText) {\r\n  if (!messageText) return false; // Return false if messageText is null, undefined, or an empty string\r\n  return ['Клавобот', 'Пользователь', 'заблокирован'].every(word => messageText.includes(word));\r\n}\r\n\r\n/**\r\n * Normalizes the color of usernames and resets their filter based on the specified mode.\r\n *\r\n * @param {NodeList|Element} usernameElements - A NodeList of username elements or a single username element.\r\n * @param {string} mode - The mode of operation; either 'one' to process a single username or 'all' to process multiple.\r\n */\r\nfunction normalizeAndResetUsernames(usernameElements, mode) {\r\n  if (!usernameElements) return; // Skip processing if undefined or null\r\n\r\n  if (mode === 'one') {\r\n    // Process a single username element.\r\n    const userSpan = usernameElements.querySelector('span[data-user]');\r\n    if (!userSpan) return; // Skip processing if child span is missing\r\n    const computedColor = getComputedStyle(usernameElements).color;\r\n    const normalizedColor = (0,_colorUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeUsernameColor)(computedColor, \"rgb\");\r\n    usernameElements.style.setProperty('color', normalizedColor, 'important');\r\n    userSpan.style.setProperty('filter', 'invert(0)', 'important');\r\n  } else if (mode === 'all') {\r\n    // Process all username elements using forEach with return (which acts like continue)\r\n    Array.from(usernameElements).forEach(usernameElement => {\r\n      if (!usernameElement) return; // Skip this iteration if the element is falsy\r\n      const userSpan = usernameElement.querySelector('span[data-user]');\r\n      if (!userSpan) return; // Skip if child span is missing\r\n      const computedColor = getComputedStyle(usernameElement).color;\r\n      const normalizedColor = (0,_colorUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeUsernameColor)(computedColor, \"rgb\");\r\n      usernameElement.style.setProperty('color', normalizedColor, 'important');\r\n      userSpan.style.setProperty('filter', 'invert(0)', 'important');\r\n    });\r\n  } else {\r\n    console.error(\"Invalid mode. Use 'one' or 'all'.\");\r\n  }\r\n}\r\n\r\n/**\r\n * Copy a chatlogs URL to the clipboard and shake the time element.\r\n * @param {string} date - The date string (YYYY-MM-DD).\r\n * @param {string} time - The time string (HH:MM:SS or similar).\r\n * @param {HTMLElement} timeElement - The time element to shake.\r\n */\r\nfunction copyChatlogsUrlToClipboard(date, time, timeElement) {\r\n  const url = `https://klavogonki.ru/chatlogs/${date}.html#${time}`;\r\n  if (navigator.clipboard) {\r\n    navigator.clipboard.writeText(url).then(() => {\r\n      (0,_animations_js__WEBPACK_IMPORTED_MODULE_2__.addShakeEffect)(timeElement); // Add shake effect to the time element\r\n      clearSelection(); // Clear any text selection\r\n    });\r\n  }\r\n}\r\n\r\n// Clears any text selection in the document (cross-browser).\r\nfunction clearSelection() {\r\n  if (window.getSelection) {\r\n    const selection = window.getSelection();\r\n    if (selection && selection.removeAllRanges) {\r\n      selection.removeAllRanges();\r\n    }\r\n  }\r\n}\r\n\r\n// Function to check if any text is selected in the document\r\nfunction isTextSelected() {\r\n  return window.getSelection().toString().length > 0;\r\n}\r\n\r\n// Function to get full message content, including image titles (for emoticons/images)\r\nfunction getFullMessageContent(element) {\r\n  let result = '';\r\n  for (const node of element.childNodes) {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      result += node.textContent;\r\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n      // Skip video-wrapper and its children except for .media anchors\r\n      if (node.classList && node.classList.contains('video-wrapper')) {\r\n        // Only extract href from <a class=\"media\"> inside video-wrapper\r\n        const mediaLinks = node.querySelectorAll('a.media');\r\n        mediaLinks.forEach(link => {\r\n          if (link.href) result += link.href + ' ';\r\n        });\r\n        continue;\r\n      }\r\n      if (node.tagName === 'IMG') {\r\n        result += node.title || node.alt || '';\r\n      } else if (node.tagName === 'A') {\r\n        // For <a> tags, use href if present, otherwise fallback to text\r\n        result += node.href ? node.href : node.textContent;\r\n      } else {\r\n        result += getFullMessageContent(node);\r\n      }\r\n    }\r\n  }\r\n  return result.trim();\r\n}\r\n\r\n// Export helper: preserves highlights and smileys for all formats\r\nfunction getExportMessageContent(element, format) {\r\n  if (!element) return '';\r\n  // 1. Replace <img ... title=\":smile:\"> with the title text (e.g. :smile:)\r\n  let html = element.innerHTML.replace(/<img[^>]*title=[\"']([^\"']+)[\"'][^>]*>/gi, '$1');\r\n  // 2. Replace highlight spans with color markup\r\n  html = html\r\n    .replace(/<span class=[\"']parse-match-message[\"']>([\\s\\S]*?)<\\/span>/gi, (m, text) => {\r\n      if (format === 'bbcode') return `[color=#32cd32]${text}[/color]`;\r\n      if (format === 'markdown') return `*${text}*`;\r\n      return text;\r\n    })\r\n    .replace(/<span class=[\"']search-match-message[\"']>([\\s\\S]*?)<\\/span>/gi, (m, text) => {\r\n      if (format === 'bbcode') return `[color=#ffa500]${text}[/color]`;\r\n      if (format === 'markdown') return `*${text}*`;\r\n      return text;\r\n    });\r\n  // 3. Remove any other HTML tags\r\n  html = html.replace(/<[^>]+>/g, '');\r\n  // 4. For plain, just return textContent\r\n  if (format === 'plain') return element.textContent;\r\n  return html;\r\n}\r\n\r\n// Utility to get current language from settings (toggle section)\r\nfunction getCurrentLanguage() {\r\n  try {\r\n    const toggle = JSON.parse(localStorage.getItem('toggle')) || [];\r\n    const langSetting = toggle.find(s => s.category === 'ui' && s.type === 'language');\r\n    return langSetting?.option || 'en';\r\n  } catch {\r\n    return 'en';\r\n  }\r\n}\r\n\r\n// Optimized helper for localized dialogs (alert, prompt, confirm) (en/ru)\r\nfunction localizedMessage(msgs, type = 'alert', ...args) {\r\n  const lang = getCurrentLanguage();\r\n  const message = msgs[lang] || msgs.en;\r\n  if (type === 'alert') return alert(message);\r\n  if (type === 'confirm') return confirm(message);\r\n  if (type === 'prompt') return prompt(message, ...args);\r\n  return alert(message);\r\n}\r\n\r\n// Function to validate date parts (year, month, day)\r\nfunction isValidDateParts(year, month, day) {\r\n  const now = new Date();\r\n  const currentYear = now.getFullYear();\r\n  year = parseInt(year, 10);\r\n  month = parseInt(month, 10);\r\n  day = parseInt(day, 10);\r\n  if (year > currentYear) return false;\r\n  if (month < 1 || month > 12) return false;\r\n  if (day < 1 || day > 31) return false;\r\n  return true;\r\n}\r\n\r\n// Function to normalize date strings into YYYY-MM-DD format\r\nfunction normalizeDate(str) {\r\n  let y, m, d;\r\n  if (/^\\d{4}[:\\-]\\d{2}[:\\-]\\d{2}$/.test(str)) {\r\n    [y, m, d] = str.replace(/:/g, '-').split('-');\r\n  } else if (/^\\d{8}$/.test(str)) {\r\n    y = str.slice(0, 4); m = str.slice(4, 6); d = str.slice(6, 8);\r\n  } else if (/^\\d{6}$/.test(str)) {\r\n    y = '20' + str.slice(0, 2); m = str.slice(2, 4); d = str.slice(4, 6);\r\n  } else if (/^\\d{2}-\\d{2}-\\d{2}$/.test(str)) {\r\n    y = '20' + str.slice(0, 2); m = str.slice(3, 5); d = str.slice(6, 8);\r\n  } else {\r\n    return null;\r\n  }\r\n  if (!isValidDateParts(y, m, d)) return null;\r\n  return `${y}-${m.padStart(2, '0')}-${d.padStart(2, '0')}`;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/helpers.js?");

/***/ }),

/***/ "./src/helpers/hotkeyState.js":
/*!************************************!*\
  !*** ./src/helpers/hotkeyState.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAltKeyPressed: () => (/* binding */ isAltKeyPressed),\n/* harmony export */   isCtrlKeyPressed: () => (/* binding */ isCtrlKeyPressed)\n/* harmony export */ });\n// Tracks the state of Ctrl and Alt keys globally\r\nlet isCtrlKeyPressed = false;\r\nlet isAltKeyPressed = false;\r\n\r\nfunction setKeyState(key, value) {\r\n  if (key === 'Control') isCtrlKeyPressed = value;\r\n  if (key === 'Alt') isAltKeyPressed = value;\r\n}\r\n\r\n['keydown', 'keyup'].forEach(eventType =>\r\n  document.addEventListener(eventType, event => setKeyState(event.key, eventType === 'keydown'))\r\n);\r\n\r\n['blur', 'focus'].forEach(eventType =>\r\n  document.addEventListener(eventType, () => {\r\n    if (isCtrlKeyPressed || isAltKeyPressed) {\r\n      console.log(`${isCtrlKeyPressed ? 'Ctrl ' : ''}${isAltKeyPressed ? 'Alt ' : ''}key was true`);\r\n      isCtrlKeyPressed = false;\r\n      isAltKeyPressed = false;\r\n    }\r\n  })\r\n);\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/hotkeyState.js?");

/***/ }),

/***/ "./src/helpers/iframeProfileLoader.js":
/*!********************************************!*\
  !*** ./src/helpers/iframeProfileLoader.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadProfileIntoIframe: () => (/* binding */ loadProfileIntoIframe)\n/* harmony export */ });\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n\r\n\r\n/**\r\n * Creates and manages an iframe modal for profile content.\r\n * @param {string} url - The profile URL to load in the iframe.\r\n */\r\nconst loadProfileIntoIframe = (url) => {\r\n  // Check if iframe already exists\r\n  let profileIframe = document.querySelector('.profile-iframe-container');\r\n  if (profileIframe) {\r\n    profileIframe.src = url;\r\n    return;\r\n  }\r\n  // Create iframe element and configure basic attributes\r\n  profileIframe = document.createElement('iframe');\r\n  profileIframe.classList.add('profile-iframe-container');\r\n  profileIframe.src = url;\r\n\r\n  document.body.appendChild(profileIframe);\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_0__.adjustVisibility)(profileIframe, 'show', 1);\r\n\r\n  // Cleanup function for removing the iframe and event listeners\r\n  const removeIframe = () => {\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_0__.adjustVisibility)(profileIframe, 'hide', 0);\r\n    document.removeEventListener('keydown', handleEvents);\r\n    document.removeEventListener('mousedown', handleEvents);\r\n  };\r\n\r\n  // Unified event handler for closure interactions\r\n  const handleEvents = (event) => {\r\n    // Spacebar handling: prevent default closure when textarea is focused\r\n    if (event.type === 'keydown' && event.code === 'Space') {\r\n      if (window.lastFocusedIframeTextarea) {\r\n        event.stopPropagation();\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n      removeIframe();\r\n    }\r\n    // Close iframe when clicking outside, but ignore clicks on .profile, .name, .login or their descendants\r\n    if (event.type === 'mousedown' && !profileIframe.contains(event.target)) {\r\n      let el = event.target;\r\n      while (el && el !== document.body) {\r\n        if (el.classList && (el.classList.contains('profile') || el.classList.contains('name') || el.classList.contains('login'))) {\r\n          return; // Do not close if clicked on these elements or their descendants\r\n        }\r\n        el = el.parentElement;\r\n      }\r\n      removeIframe();\r\n    }\r\n  };\r\n\r\n  // Attach global event listeners for closure triggers\r\n  document.addEventListener('keydown', handleEvents);\r\n  document.addEventListener('mousedown', handleEvents);\r\n\r\n  // Configure iframe content interactions after load\r\n  profileIframe.onload = () => {\r\n    try {\r\n      const iframeWindow = profileIframe.contentWindow;\r\n      const iframeDoc = iframeWindow.document;\r\n\r\n      // Track focused text areas within iframe\r\n      iframeDoc.addEventListener('focusin', (e) => {\r\n        if (e.target.tagName === 'TEXTAREA') {\r\n          window.lastFocusedIframeTextarea = e.target;\r\n        }\r\n      });\r\n\r\n      // Clear textarea focus tracking when leaving input\r\n      iframeDoc.addEventListener('focusout', () => {\r\n        setTimeout(() => {\r\n          if (!iframeDoc.activeElement || iframeDoc.activeElement.tagName !== 'TEXTAREA') {\r\n            window.lastFocusedIframeTextarea = null;\r\n          }\r\n        }, 0);\r\n      });\r\n\r\n      // Attach internal iframe closure triggers\r\n      iframeWindow.addEventListener('keydown', handleEvents);\r\n      iframeWindow.addEventListener('dblclick', removeIframe);\r\n\r\n      // Monitor DOM changes for automatic closure conditions\r\n      new MutationObserver((mutations, observer) => {\r\n        if (mutations.some(m => [...m.removedNodes].some(n =>\r\n          n.nodeType === 1 && (n.classList.contains('dimming-background') || n.classList.contains('cached-users-panel'))\r\n        ))) {\r\n          removeIframe();\r\n          observer.disconnect();\r\n        }\r\n      }).observe(document.body, { childList: true, subtree: true });\r\n\r\n    } catch (error) {\r\n      // Handle cross-origin policy restrictions\r\n      console.warn(\"Unable to access iframe contents:\", error);\r\n    }\r\n  };\r\n};\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/iframeProfileLoader.js?");

/***/ }),

/***/ "./src/helpers/messagesFormatter.js":
/*!******************************************!*\
  !*** ./src/helpers/messagesFormatter.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatMessages: () => (/* binding */ formatMessages),\n/* harmony export */   handleExportClick: () => (/* binding */ handleExportClick)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _colorUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorUtils.js */ \"./src/helpers/colorUtils.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\n\r\nconst lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentLanguage)();\r\n\r\n/**\r\n * Formats messages for export in BBCode, Markdown, or Plain text\r\n * @param {HTMLElement} container - DOM element containing messages\r\n * @param {string} format - 'bbcode', 'markdown', or 'plain'\r\n * @param {Object} options - Formatting options\r\n * @returns {string} - Formatted message string\r\n */\r\nfunction formatMessages(container, format, options = {}) {\r\n  const {\r\n    date = null,\r\n    isMessagesPanel = false,\r\n    includeDateHeaders = true,\r\n    includeMessageLinks = true,\r\n    prefix = '',\r\n    messages = {}\r\n  } = options;\r\n\r\n  // Gather visible elements\r\n  const elements = Array.from(\r\n    container.querySelectorAll(\r\n      '.date-item, .message-item'\r\n    )\r\n  ).filter(el => {\r\n    const style = window.getComputedStyle(el);\r\n    return style.contentVisibility !== 'hidden' && style.display !== 'none';\r\n  });\r\n\r\n  let output = '';\r\n  let isFirstLine = true;\r\n\r\n  // BBCode header\r\n  if (format === 'bbcode') output += '[hide]\\n';\r\n\r\n  // Track current date for grouping\r\n  let currentDate = null;\r\n\r\n  // Load user data cache once (performance optimization)\r\n  let cache = {};\r\n  if (!isMessagesPanel) {\r\n    cache = JSON.parse(localStorage.getItem(_definitions_js__WEBPACK_IMPORTED_MODULE_0__.USER_DATA_CACHE_KEY) || '{}');\r\n  }\r\n\r\n  elements.forEach(el => {\r\n    if (el.classList.contains('date-item') && includeDateHeaders) {\r\n      // Get date text without emoji icon\r\n      const dateTextElement = el.querySelector('.date-text');\r\n      const dateText = dateTextElement ?\r\n        dateTextElement.textContent :\r\n        el.textContent.replace(/[📅⏳]+$/, '').trim();\r\n\r\n      currentDate = dateText;\r\n\r\n      if (!isFirstLine) output += '\\n';\r\n\r\n      if (format === 'bbcode') {\r\n        output += `[b][color=gray]${dateText}[/color][/b]\\n`;\r\n      } else if (format === 'markdown') {\r\n        output += `**${dateText}**\\n`;\r\n      } else {\r\n        output += `${dateText}\\n`;\r\n      }\r\n      isFirstLine = false;\r\n    }\r\n    else if (el.classList.contains('message-item')) {\r\n      // Message item\r\n      const time = el.querySelector('.message-time')?.textContent?.trim() || '';\r\n      const username = el.querySelector('.message-username')?.textContent?.trim() || '';\r\n      const messageTextElement = el.querySelector('.message-text');\r\n      const message = messageTextElement ?\r\n        (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getExportMessageContent)(messageTextElement, format) : '';\r\n\r\n      // Create message URL\r\n      const effectiveDate = date || currentDate || new Date().toISOString().slice(0, 10);\r\n      const url = includeMessageLinks ?\r\n        `https://klavogonki.ru/chatlogs/${effectiveDate}.html#${time.replace(/[\\[\\]]/g, '')}` : '';\r\n\r\n      // Get username color\r\n      let color;\r\n      if (isMessagesPanel) {\r\n        // Use stored usernameColor from messages\r\n        const formattedTime = `[${time}]`;\r\n        const messageKey = `${formattedTime}_${username}`;\r\n        const storedMessage = messages[messageKey];\r\n        color = storedMessage && storedMessage.usernameColor ?\r\n          (0,_colorUtils_js__WEBPACK_IMPORTED_MODULE_1__.rgbToHex)(storedMessage.usernameColor) :\r\n          '#808080'; // Fallback gray color\r\n      } else {\r\n        // Use the pre-loaded cache\r\n        color = cache[username]?.color || '#808080'; // Fallback gray color\r\n      }\r\n\r\n      if (format === 'bbcode') {\r\n        const bbMessage = message\r\n          .replace(/(^|\\s|\\():(\\w+):(?=\\s|\\.|,|!|\\?|$)/g,\r\n            (m, pre, word) => `${pre}[img]https://klavogonki.ru/img/smilies/${word}.gif[/img]`);\r\n\r\n        output += url ?\r\n          `[url=${url}]${time}[/url] ` :\r\n          `${time} `;\r\n\r\n        output += `[color=${color}]${username}[/color] ${bbMessage}\\n`;\r\n      }\r\n      else if (format === 'markdown') {\r\n        output += url ?\r\n          `[${time}](${url}) ` :\r\n          `${time} `;\r\n\r\n        output += `**${username}** ${message}\\n`;\r\n      }\r\n      else {\r\n        output += `[${time}] `;\r\n        output += `(${username}) ${message}\\n`;\r\n      }\r\n      isFirstLine = false;\r\n    }\r\n  });\r\n\r\n  if (format === 'bbcode') output += '[/hide]\\n';\r\n  return output;\r\n}\r\n\r\n/**\r\n * Handles export logic for Alt+Click and Alt+Shift+Click\r\n * @param {MouseEvent} event - Click event\r\n * @param {HTMLElement} container - Messages container\r\n * @param {Object} options - Export options\r\n */\r\nfunction handleExportClick(event, container, options = {}) {\r\n  // Only handle Alt+Click events\r\n  if (!event.altKey) return;\r\n\r\n  // Prompt for format\r\n  const formatMap = { '1': 'bbcode', '2': 'markdown', '3': 'plain' };\r\n  const promptText = lang === 'ru' ?\r\n    'Формат экспорта? (1 = BBCode, 2 = Markdown, 3 = Plain)' :\r\n    'Export format? (1 = BBCode, 2 = Markdown, 3 = Plain)';\r\n\r\n  let formatNum = prompt(promptText, '1');\r\n  // Exit if user cancels the prompt\r\n  if (formatNum === null) return;\r\n\r\n  let format = formatMap[formatNum.trim()];\r\n  if (!format) format = 'bbcode';\r\n\r\n  // Generate formatted output\r\n  const output = formatMessages(container, format, options);\r\n  if (!output) return;\r\n\r\n  // Alt+Shift+Click: Save as file\r\n  if (event.shiftKey) {\r\n    const blob = new Blob([output], { type: 'text/plain' });\r\n    const a = document.createElement('a');\r\n    a.href = URL.createObjectURL(blob);\r\n\r\n    // Generate filename\r\n    const prefix = options.prefix;\r\n    const datePart = options.date ? `_${options.date}` : '';\r\n    a.download = `${prefix}_${datePart}_${format}.txt`;\r\n\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(() => document.body.removeChild(a), 100);\r\n  }\r\n  // Alt+Click: Copy to clipboard\r\n  else {\r\n    navigator.clipboard.writeText(output).catch(() => {\r\n      alert(lang === 'ru' ? 'Не удалось скопировать сообщения' : 'Failed to copy messages');\r\n    });\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/messagesFormatter.js?");

/***/ }),

/***/ "./src/helpers/messagesReader.js":
/*!***************************************!*\
  !*** ./src/helpers/messagesReader.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMessageToQueue: () => (/* binding */ addMessageToQueue)\n/* harmony export */ });\n/* harmony import */ var _components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/voiceEngine.js */ \"./src/components/voiceEngine.js\");\n/* harmony import */ var _components_mode_soundMode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/mode/soundMode.js */ \"./src/components/mode/soundMode.js\");\n\r\n\r\n\r\nlet isReading = false;\r\nconst newMessages = new Set();\r\n\r\nfunction addMessageToQueue(message) {\r\n  if (!newMessages.has(message)) {\r\n    newMessages.add(message);\r\n    if (!isReading) {\r\n      isReading = true;\r\n      processMessages();\r\n    }\r\n  }\r\n}\r\n\r\nasync function processMessages() {\r\n  for (const message of newMessages) {\r\n    await (0,_components_voiceEngine_js__WEBPACK_IMPORTED_MODULE_0__.textToSpeech)(message, _components_mode_soundMode_js__WEBPACK_IMPORTED_MODULE_1__.voiceSpeed);\r\n    newMessages.delete(message);\r\n  }\r\n  isReading = false;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/messagesReader.js?");

/***/ }),

/***/ "./src/helpers/messagesSearch.js":
/*!***************************************!*\
  !*** ./src/helpers/messagesSearch.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterMessages: () => (/* binding */ filterMessages),\n/* harmony export */   getMessageDetails: () => (/* binding */ getMessageDetails)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n// Checks if `needle` is a subsequence of `haystack` (letters in order, possibly skipping some)\r\nfunction isSubsequence(needle, haystack) {\r\n  let i = 0, j = 0;\r\n  while (i < needle.length && j < haystack.length) {\r\n    if (needle[i] === haystack[j]) i++;\r\n    j++;\r\n  }\r\n  return i === needle.length;\r\n}\r\n\r\n// Simple Levenshtein distance for fuzzy matching\r\nfunction levenshtein(a, b) {\r\n  if (a.length === 0) return b.length;\r\n  if (b.length === 0) return a.length;\r\n  const matrix = [];\r\n  for (let i = 0; i <= b.length; i++) matrix[i] = [i];\r\n  for (let j = 0; j <= a.length; j++) matrix[0][j] = j;\r\n  for (let i = 1; i <= b.length; i++) {\r\n    for (let j = 1; j <= a.length; j++) {\r\n      if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n        matrix[i][j] = matrix[i - 1][j - 1];\r\n      } else {\r\n        matrix[i][j] = Math.min(\r\n          matrix[i - 1][j - 1] + 1, // substitution\r\n          matrix[i][j - 1] + 1,     // insertion\r\n          matrix[i - 1][j] + 1      // deletion\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return matrix[b.length][a.length];\r\n}\r\n\r\n// Unified normalize function: removes _, -, spaces (does NOT remove commas or dots)\r\nfunction normalize(text) {\r\n  return text.replace(/[_\\-\\s]/g, '').toLowerCase();\r\n}\r\n\r\n// Fixed highlighting function that properly handles multiple matches with custom CSS class\r\nfunction highlightMatches(element, queryParts, exactMatch, cssClass = 'search-match') {\r\n  if (!queryParts.length) return;\r\n  \r\n  // Clear existing search highlights for this specific class\r\n  element.querySelectorAll(`.${cssClass}`).forEach(span => {\r\n    span.replaceWith(document.createTextNode(span.textContent));\r\n  });\r\n  element.normalize();\r\n  \r\n  // Process each query part separately to avoid stale node references\r\n  for (const part of queryParts) {\r\n    if (part.length < 2) continue;\r\n    \r\n    highlightSinglePart(element, part, exactMatch, cssClass);\r\n  }\r\n}\r\n\r\nfunction highlightSinglePart(element, part, exactMatch, cssClass) {\r\n  // Get fresh text nodes for each part\r\n  const walker = document.createTreeWalker(element, NodeFilter.SHOW_TEXT);\r\n  const textNodes = [];\r\n  let fullText = '';\r\n  let node;\r\n  \r\n  while (node = walker.nextNode()) {\r\n    if (node.textContent.trim()) {\r\n      textNodes.push({ node, start: fullText.length, text: node.textContent });\r\n      fullText += node.textContent;\r\n    }\r\n  }\r\n  \r\n  if (!fullText.trim()) return;\r\n  \r\n  // Find all matches for this part\r\n  const matches = [];\r\n  const searchText = exactMatch ? fullText : fullText.toLowerCase();\r\n  const searchPart = exactMatch ? part : part.toLowerCase();\r\n  \r\n  // Find direct matches\r\n  let index = 0;\r\n  while ((index = searchText.indexOf(searchPart, index)) !== -1) {\r\n    matches.push({ start: index, end: index + searchPart.length });\r\n    index++;\r\n  }\r\n  \r\n  // For fuzzy matching, also try normalized matching\r\n  if (!exactMatch) {\r\n    const normalizedText = normalize(fullText);\r\n    const normalizedPart = normalize(part);\r\n    \r\n    for (let i = 0; i <= fullText.length - normalizedPart.length; i++) {\r\n      for (let len = normalizedPart.length; len <= Math.min(fullText.length - i, normalizedPart.length * 2); len++) {\r\n        if (normalize(fullText.substring(i, i + len)) === normalizedPart) {\r\n          matches.push({ start: i, end: i + len });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Remove overlaps and sort\r\n  if (matches.length === 0) return;\r\n  \r\n  const sortedMatches = matches.sort((a, b) => a.start - b.start);\r\n  const uniqueMatches = sortedMatches\r\n    .filter((match, i) => {\r\n      return !sortedMatches.slice(0, i).some(prev => match.start < prev.end && match.end > prev.start);\r\n    })\r\n    .reverse(); // Process from end to avoid index shifting\r\n  \r\n  // Apply highlights\r\n  uniqueMatches.forEach(match => {\r\n    applyHighlightToMatch(textNodes, match, cssClass);\r\n  });\r\n}\r\n\r\nfunction applyHighlightToMatch(textNodes, match, cssClass) {\r\n  // Find text nodes that intersect with this match\r\n  const affectedNodes = textNodes.filter(nodeInfo => {\r\n    const nodeEnd = nodeInfo.start + nodeInfo.text.length;\r\n    return match.start < nodeEnd && match.end > nodeInfo.start;\r\n  });\r\n  \r\n  // Process affected nodes\r\n  affectedNodes.forEach(nodeInfo => {\r\n    const nodeEnd = nodeInfo.start + nodeInfo.text.length;\r\n    const localStart = Math.max(0, match.start - nodeInfo.start);\r\n    const localEnd = Math.min(nodeInfo.text.length, match.end - nodeInfo.start);\r\n    \r\n    if (localStart < localEnd && nodeInfo.node.parentNode) {\r\n      const text = nodeInfo.node.textContent;\r\n      const fragment = document.createDocumentFragment();\r\n      \r\n      // Add text before match\r\n      if (localStart > 0) {\r\n        fragment.appendChild(document.createTextNode(text.substring(0, localStart)));\r\n      }\r\n      \r\n      // Add highlighted match with custom CSS class\r\n      const span = document.createElement('span');\r\n      span.className = cssClass;\r\n      span.textContent = text.substring(localStart, localEnd);\r\n      fragment.appendChild(span);\r\n      \r\n      // Add text after match\r\n      if (localEnd < text.length) {\r\n        fragment.appendChild(document.createTextNode(text.substring(localEnd)));\r\n      }\r\n      \r\n      // Replace the node\r\n      nodeInfo.node.parentNode.replaceChild(fragment, nodeInfo.node);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Retrieves details from message items including usernames and message text.\r\n * @param {Element[]} messageItems - Array of message item DOM elements\r\n * @returns {Array<{username: string, messageText: string, usernameElement: Element, messageTextElement: Element}>}\r\n */\r\nfunction getMessageDetails(messageItems) {\r\n  return messageItems.map(item => {\r\n    const usernameElement = item.querySelector('.message-username');\r\n    const username = usernameElement ? usernameElement.textContent.toLowerCase().trim() : '';\r\n    const messageTextElement = item.querySelector('.message-text');\r\n    const messageText = messageTextElement ? (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getFullMessageContent)(messageTextElement).toLowerCase().trim() : '';\r\n    return { \r\n      username, \r\n      messageText, \r\n      usernameElement, \r\n      messageTextElement,\r\n      originalUsername: usernameElement ? usernameElement.textContent.trim() : '',\r\n      originalMessageText: messageTextElement ? (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getFullMessageContent)(messageTextElement).trim() : ''\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * Filters message items based on the provided query and displays matching messages.\r\n * @param {string} query - The search query\r\n */\r\nfunction filterMessages(query) {\r\n  // If the query contains only digits, hyphens, or colons, do nothing\r\n  if (/^[\\d-:]+$/.test(query.trim())) {\r\n    // Clear any existing highlighting when query is cleared\r\n    clearAllHighlighting();\r\n    return;\r\n  }\r\n\r\n  // Define search prefixes without colons\r\n  const searchPrefixes = {\r\n    user: {\r\n      en: ['user', 'username', 'nick', 'name', 'nickname'],\r\n      ru: ['пользователь', 'ник', 'имя', 'никнейм']\r\n    },\r\n    word: {\r\n      en: ['msg', 'message', 'text', 'word', 'content'],\r\n      ru: ['сообщение', 'текст', 'слово', 'контент']\r\n    }\r\n  };\r\n\r\n  const userPrefixes = [...searchPrefixes.user.en, ...searchPrefixes.user.ru];\r\n  const wordPrefixes = [...searchPrefixes.word.en, ...searchPrefixes.word.ru];\r\n  \r\n  // Create regex patterns for exact match (::) and fuzzy match (:)\r\n  const userExactRegex = new RegExp(`^(${userPrefixes.join('|')})::`, 'i');\r\n  const userFuzzyRegex = new RegExp(`^(${userPrefixes.join('|')}):(?!:)`, 'i');\r\n  const wordExactRegex = new RegExp(`^(${wordPrefixes.join('|')})::`, 'i');\r\n  const wordFuzzyRegex = new RegExp(`^(${wordPrefixes.join('|')}):(?!:)`, 'i');\r\n\r\n  let forceUser = false, forceWord = false, exactMatch = false;\r\n  let queryStr = query.trim();\r\n  \r\n  // Check for exact match prefixes first (double colon)\r\n  if (userExactRegex.test(queryStr)) {\r\n    forceUser = true;\r\n    exactMatch = true;\r\n    queryStr = queryStr.replace(userExactRegex, '');\r\n  } else if (wordExactRegex.test(queryStr)) {\r\n    forceWord = true;\r\n    exactMatch = true;\r\n    queryStr = queryStr.replace(wordExactRegex, '');\r\n  } else if (userFuzzyRegex.test(queryStr)) {\r\n    forceUser = true;\r\n    queryStr = queryStr.replace(userFuzzyRegex, '');\r\n  } else if (wordFuzzyRegex.test(queryStr)) {\r\n    forceWord = true;\r\n    queryStr = queryStr.replace(wordFuzzyRegex, '');\r\n  }\r\n\r\n  // Determine separator and search logic\r\n  let queryParts = [];\r\n  let originalQueryParts = []; // Keep original parts for highlighting\r\n  let useOrLogic = false; // Default to AND logic\r\n  \r\n  if (queryStr.includes(',')) {\r\n    // Comma separation: OR logic for multiple users/terms\r\n    queryParts = queryStr.split(',').map(part => {\r\n      const trimmed = part.trim();\r\n      return exactMatch ? trimmed.toLowerCase() : normalize(trimmed);\r\n    }).filter(Boolean);\r\n    originalQueryParts = queryStr.split(',').map(part => part.trim()).filter(Boolean);\r\n    useOrLogic = true;\r\n  } else if ([\".\", \"|\", \"\\\\\", \"/\"].some(sep => queryStr.includes(sep))) {\r\n    // Dot, pipe, backslash, or slash separation: OR logic for word-only search\r\n    queryParts = queryStr.split(/[.|\\\\/]/).map(part => {\r\n      const trimmed = part.trim();\r\n      return exactMatch ? trimmed.toLowerCase() : normalize(trimmed);\r\n    }).filter(Boolean);\r\n    originalQueryParts = queryStr.split(/[.|\\\\/]/).map(part => part.trim()).filter(Boolean);\r\n    useOrLogic = true;\r\n    forceWord = true; // Force word search when using these separators\r\n  } else {\r\n    // Single term or space-separated terms: AND logic\r\n    const trimmed = queryStr.trim();\r\n    queryParts = [exactMatch ? trimmed.toLowerCase() : normalize(trimmed)].filter(Boolean);\r\n    originalQueryParts = [trimmed].filter(Boolean);\r\n    useOrLogic = false;\r\n  }\r\n\r\n  // Retrieve message and date items within the filterMessages function\r\n  const containerSelector = '.messages-search-container';\r\n  const allElements = Array.from(\r\n    document.querySelectorAll(\r\n      `${containerSelector} > .date-item, ${containerSelector} > .message-item`\r\n    )\r\n  );\r\n  const messageItems = allElements.filter(el => el.classList.contains('message-item'));\r\n\r\n  const messageDetails = getMessageDetails(messageItems); // Get the message details\r\n  // Use the query parts for empty check\r\n  const isEmptyQuery = !queryParts.length;\r\n\r\n  // Clear all highlighting if empty query\r\n  if (isEmptyQuery) {\r\n    clearAllHighlighting();\r\n  }\r\n\r\n  // Username/text search: partial, fuzzy, and subsequence match (for fuzzy matching)\r\n  function normalizedMatch(normalizedValue, part) {\r\n    // Ignore too-short search parts (avoid matching single letters)\r\n    if (part.length < 2) return false;\r\n    // Partial match: search part is contained anywhere in the value\r\n    if (normalizedValue.includes(part)) return true;\r\n    // Fuzzy match: search part is one typo away from the value\r\n    if (part.length >= 3 && levenshtein(normalizedValue, part) === 1) return true;\r\n    // Subsequence match: search part letters appear in order in the value, possibly skipping some\r\n    if (part.length >= 3 && isSubsequence(part, normalizedValue)) return true;\r\n    // No match\r\n    return false;\r\n  }\r\n\r\n  // Exact match function (case-insensitive but preserves spaces, hyphens, underscores)\r\n  function exactMatchFunction(originalValue, part, isUsername = false) {\r\n    const val = originalValue.toLowerCase();\r\n    return isUsername ? val === part : val.includes(part);\r\n  }\r\n\r\n  // Compact matching logic\r\n  function getMatchTargets(username, messageText, normalizedUsername, normalizedMessageText) {\r\n    if (exactMatch) {\r\n      // For exact match, use original values (lowercased for case-insensitive comparison)\r\n      if (forceUser) return [username];\r\n      if (forceWord) return [messageText];\r\n      return [username, messageText];\r\n    } else {\r\n      // For fuzzy match, use normalized values\r\n      if (forceUser) return [normalizedUsername];\r\n      if (forceWord) return [normalizedMessageText];\r\n      return [normalizedUsername, normalizedMessageText];\r\n    }\r\n  }\r\n\r\n  function matchesQuery(targets, queryParts, useOrLogic, isExactMatch, isUserSearch = false) {\r\n    const matchFn = useOrLogic ? 'some' : 'every';\r\n    const matchFunction = isExactMatch ? \r\n      (target, part) => exactMatchFunction(target, part, isUserSearch) : \r\n      normalizedMatch;\r\n    return queryParts[matchFn](part => \r\n      targets.some(target => matchFunction(target, part))\r\n    );\r\n  }\r\n\r\n  messageItems.forEach((item, index) => {\r\n    const messageContainer = item.closest('.message-item');\r\n    const messageDetailsItem = messageDetails[index];\r\n    \r\n    const normalizedUsername = normalize(messageDetailsItem.username);\r\n    const normalizedMessageText = normalize(messageDetailsItem.messageText);\r\n    \r\n    const shouldDisplay = isEmptyQuery || \r\n      matchesQuery(\r\n        getMatchTargets(\r\n          messageDetailsItem.username,\r\n          messageDetailsItem.messageText,\r\n          normalizedUsername,\r\n          normalizedMessageText\r\n        ),\r\n        queryParts,\r\n        useOrLogic,\r\n        exactMatch,\r\n        forceUser\r\n      );\r\n\r\n    messageContainer.classList.toggle('hidden-message', !shouldDisplay);\r\n\r\n    // Apply highlighting only to visible messages with specific CSS classes\r\n    if (shouldDisplay && !isEmptyQuery) {\r\n      // Highlight username if not forcing word search only - use 'search-match-username' class\r\n      if (!forceWord && messageDetailsItem.usernameElement) {\r\n        highlightMatches(\r\n          messageDetailsItem.usernameElement, \r\n          originalQueryParts, \r\n          exactMatch,\r\n          'search-match-username'\r\n        );\r\n      }\r\n      \r\n      // Highlight message text if not forcing user search only - use 'search-match-message' class\r\n      if (!forceUser && messageDetailsItem.messageTextElement) {\r\n        highlightMatches(\r\n          messageDetailsItem.messageTextElement, \r\n          originalQueryParts, \r\n          exactMatch,\r\n          'search-match-message'\r\n        );\r\n      }\r\n    } else if (!shouldDisplay) {\r\n      // Clear highlighting from hidden messages - clear both types\r\n      if (messageDetailsItem.usernameElement) {\r\n        messageDetailsItem.usernameElement.querySelectorAll('.search-match-username').forEach(span => {\r\n          span.replaceWith(document.createTextNode(span.textContent));\r\n        });\r\n      }\r\n      if (messageDetailsItem.messageTextElement) {\r\n        messageDetailsItem.messageTextElement.querySelectorAll('.search-match-message').forEach(span => {\r\n          span.replaceWith(document.createTextNode(span.textContent));\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  // --- Hide date headers with no visible messages (class-based) ---\r\n  // Find all date-item elements\r\n  const dateItems = allElements.filter(el => el.classList.contains('date-item'));\r\n  for (let i = 0; i < dateItems.length; i++) {\r\n    const dateItem = dateItems[i];\r\n    // Find all message-items between this dateItem and the next dateItem\r\n    let nextDateIndex = allElements.indexOf(dateItem) + 1;\r\n    let hasVisibleMessage = false;\r\n    while (nextDateIndex < allElements.length && !allElements[nextDateIndex].classList.contains('date-item')) {\r\n      const el = allElements[nextDateIndex];\r\n      if (el.classList.contains('message-item') && !el.classList.contains('hidden-message')) {\r\n        hasVisibleMessage = true;\r\n        break;\r\n      }\r\n      nextDateIndex++;\r\n    }\r\n    // Show or hide the date header using a class\r\n    dateItem.classList.toggle('hidden-date', !hasVisibleMessage);\r\n  }\r\n}\r\n\r\n// Helper function to clear all highlighting - now clears both types\r\nfunction clearAllHighlighting() {\r\n  document.querySelectorAll('.search-match-username, .search-match-message').forEach(span => {\r\n    span.replaceWith(document.createTextNode(span.textContent));\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/messagesSearch.js?");

/***/ }),

/***/ "./src/helpers/scrollButtons.js":
/*!**************************************!*\
  !*** ./src/helpers/scrollButtons.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createScrollButtons: () => (/* binding */ createScrollButtons),\n/* harmony export */   updateScrollButtonOpacity: () => (/* binding */ updateScrollButtonOpacity),\n/* harmony export */   updateScrollButtonsVisibility: () => (/* binding */ updateScrollButtonsVisibility)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/tooltip.js */ \"./src/components/tooltip.js\");\n\r\n\r\n\r\n\r\n// Function to update button opacity\r\nfunction updateScrollButtonOpacity({ container, buttons }) {\r\n  const tolerance = 3,\r\n    isAtTop = container.scrollTop === 0,\r\n    isAtBottom = container.scrollTop + container.clientHeight >= container.scrollHeight - tolerance;\r\n\r\n  [buttons.fullScrollUpButton, buttons.partialScrollUpButton].forEach(button => {\r\n    button.style.opacity = isAtTop ? '0.3' : '1';\r\n    button.style.pointerEvents = isAtTop ? 'none' : 'auto';\r\n  });\r\n\r\n  [buttons.fullScrollDownButton, buttons.partialScrollDownButton].forEach(button => {\r\n    button.style.opacity = isAtBottom ? '0.3' : '1';\r\n    button.style.pointerEvents = isAtBottom ? 'none' : 'auto';\r\n  });\r\n}\r\n\r\n// Function to update the visibility of the scroll buttons container\r\nfunction updateScrollButtonsVisibility({ container, scrollButtonsContainer }) {\r\n  if (container.scrollHeight > container.clientHeight) {\r\n    scrollButtonsContainer.style.display = 'flex';\r\n  } else {\r\n    scrollButtonsContainer.style.display = 'none';\r\n  }\r\n}\r\n\r\nfunction createScrollButtons(container) {\r\n  const scrollButtonsContainer = document.createElement('div');\r\n  scrollButtonsContainer.className = 'scroll-buttons-container';\r\n\r\n  const fullScrollUpButton = document.createElement('div');\r\n  fullScrollUpButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.chevronsUpSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(fullScrollUpButton, {\r\n    en: 'Scroll Up (Full)',\r\n    ru: 'Прокрутить вверх (всё)'\r\n  });\r\n\r\n  const partialScrollUpButton = document.createElement('div');\r\n  partialScrollUpButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.chevronUpSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(partialScrollUpButton, {\r\n    en: 'Scroll Up (Partial)',\r\n    ru: 'Прокрутить вверх (частично)'\r\n  });\r\n\r\n  const partialScrollDownButton = document.createElement('div');\r\n  partialScrollDownButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.chevronDownSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(partialScrollDownButton, {\r\n    en: 'Scroll Down (Partial)',\r\n    ru: 'Прокрутить вниз (частично)'\r\n  });\r\n\r\n  const fullScrollDownButton = document.createElement('div');\r\n  fullScrollDownButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.chevronsDownSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(fullScrollDownButton, {\r\n    en: 'Scroll Down (Full)',\r\n    ru: 'Прокрутить вниз (всё)'\r\n  });\r\n\r\n  const buttons = {\r\n    fullScrollUpButton,\r\n    partialScrollUpButton,\r\n    partialScrollDownButton,\r\n    fullScrollDownButton\r\n  };\r\n\r\n  Object.values(buttons).forEach(button => {\r\n    button.classList.add(\"large-button\", \"scroll-button\");\r\n    scrollButtonsContainer.appendChild(button);\r\n  });\r\n\r\n  function scrollContainer(direction, isFullScroll) {\r\n    const scrollAmount = isFullScroll ? container.scrollHeight : container.clientHeight;\r\n    container.scrollBy({\r\n      top: direction === 'up' ? -scrollAmount : scrollAmount,\r\n      behavior: 'smooth'\r\n    });\r\n    updateScrollButtonOpacity({ container, buttons });\r\n  }\r\n\r\n  fullScrollUpButton.addEventListener('click', () => scrollContainer('up', true));\r\n  partialScrollUpButton.addEventListener('click', () => scrollContainer('up', false));\r\n  partialScrollDownButton.addEventListener('click', () => scrollContainer('down', false));\r\n  fullScrollDownButton.addEventListener('click', () => scrollContainer('down', true));\r\n\r\n  // Initial setup\r\n  updateScrollButtonOpacity({ container, buttons });\r\n  updateScrollButtonsVisibility({ container, scrollButtonsContainer });\r\n\r\n  // Monitor for scrollability changes\r\n  const checkScrollability = () => {\r\n    updateScrollButtonsVisibility({ container, scrollButtonsContainer });\r\n    updateScrollButtonOpacity({ container, buttons });\r\n  };\r\n\r\n  // Listen for scroll events\r\n  container.addEventListener('scroll', checkScrollability);\r\n\r\n  // Create a ResizeObserver to detect container size changes\r\n  const resizeObserver = new ResizeObserver(checkScrollability);\r\n  resizeObserver.observe(container);\r\n\r\n  // Create a MutationObserver to detect content changes\r\n  const mutationObserver = new MutationObserver(checkScrollability);\r\n  mutationObserver.observe(container, {\r\n    childList: true,     // Watch for added/removed children\r\n    subtree: true,       // Watch the entire subtree\r\n    characterData: true, // Watch for text changes\r\n    attributes: true     // Watch for attribute changes that might affect layout\r\n  });\r\n\r\n  // Function to clean up all observers\r\n  const cleanup = () => {\r\n    resizeObserver.disconnect();\r\n    mutationObserver.disconnect();\r\n    container.removeEventListener('scroll', checkScrollability);\r\n  };\r\n\r\n  return {\r\n    scrollButtonsContainer,\r\n    cleanup  // Return cleanup function to allow proper disposal\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/scrollButtons.js?");

/***/ }),

/***/ "./src/helpers/scrollTo.js":
/*!*********************************!*\
  !*** ./src/helpers/scrollTo.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrollToBottom: () => (/* binding */ scrollToBottom),\n/* harmony export */   scrollToMiddle: () => (/* binding */ scrollToMiddle)\n/* harmony export */ });\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../animations.js */ \"./src/animations.js\");\n\r\n\r\n// Scrolls the specified container to the bottom if the user has scrolled close enough\r\nfunction scrollToBottom(containerType = 'generalMessages', customScrollThreshold = 600) {\r\n  const containerSelectors = {\r\n    generalMessages: '.messages-content',\r\n    chatlogsMessages: '.chat-logs-container',\r\n    personalMessages: '.messages-container-wrapper'\r\n  };\r\n\r\n  const containerSelector = containerSelectors[containerType];\r\n  if (!containerSelector) return;\r\n\r\n  const container = document.querySelector(containerSelector);\r\n  if (!container) return;\r\n\r\n  if (typeof scrollToBottom.firstTime === 'undefined') scrollToBottom.firstTime = true;\r\n\r\n  if (scrollToBottom.firstTime) {\r\n    container.scrollTop = container.scrollHeight;\r\n    scrollToBottom.firstTime = false;\r\n  } else {\r\n    const distanceFromBottom = container.scrollHeight - container.scrollTop - container.clientHeight;\r\n\r\n    if (distanceFromBottom <= customScrollThreshold) {\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n}\r\n\r\n// Function to scroll messages to the middle of the parent container\r\nasync function scrollToMiddle(parent, element) {\r\n  const { top, height } = element.getBoundingClientRect();\r\n  const { top: parentTop, height: parentHeight } = parent.getBoundingClientRect();\r\n  const parentMiddle = parentTop + parentHeight / 2;\r\n  const scrollOffset = top - parentMiddle + height / 2;\r\n  parent.scrollBy({\r\n    top: scrollOffset,\r\n    behavior: 'smooth'\r\n  });\r\n  await new Promise(resolve => setTimeout(resolve, 500));\r\n  parent.style.scrollBehavior = 'auto';\r\n  // Remove previous highlight and focused-message\r\n  const prev = parent.querySelector('.focused-message');\r\n  if (prev) prev.classList.remove('focused-message');\r\n  (0,_animations_js__WEBPACK_IMPORTED_MODULE_0__.addShakeEffect)(element);\r\n  element.classList.add('focused-message');\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/scrollTo.js?");

/***/ }),

/***/ "./src/helpers/urlUtils.js":
/*!*********************************!*\
  !*** ./src/helpers/urlUtils.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeURL: () => (/* binding */ decodeURL),\n/* harmony export */   isEncodedURL: () => (/* binding */ isEncodedURL),\n/* harmony export */   processEncodedLinks: () => (/* binding */ processEncodedLinks)\n/* harmony export */ });\n// Checks if a URL is valid and contains encoded characters.\r\nfunction isEncodedURL(url) {\r\n  const urlPattern = /^https?:\\/\\//; // Regex pattern to check if the value is a URL\r\n  const encodedPattern = /%[0-9A-Fa-f]{2}/; // Regex pattern to check if the URL is encoded\r\n  return urlPattern.test(url) && encodedPattern.test(url);\r\n}\r\n\r\n// Decodes a URL and replaces spaces with underscores.\r\nfunction decodeURL(url) {\r\n  const [base] = url.split('#'); // Split at the '#' symbol and take the base part\r\n  return decodeURIComponent(base).replace(/ /g, '_'); // Decode and replace spaces with underscores\r\n}\r\n\r\n/**\r\n * Processes and decodes all encoded links in a given message container type.\r\n * @param {string} type - One of 'generalMessages', 'chatlogsMessages', 'personalMessages'.\r\n */\r\nfunction processEncodedLinks(type) {\r\n  document.querySelector(({\r\n    generalMessages: \".messages-content div\", // General messages container\r\n    chatlogsMessages: \".chat-logs-container\", // Chat logs container\r\n    personalMessages: \".messages-container-wrapper\" // Personal messages container\r\n  })[type])?.querySelectorAll('a:not(.media):not(.decoded)').forEach(link => {\r\n    try {\r\n      if (isEncodedURL(link.href)) {\r\n        let decoded = decodeURL(link.href);\r\n        link.href = link.textContent = decoded;\r\n        link.classList.add('decoded');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error decoding link:', error, link.href);\r\n    }\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/urlUtils.js?");

/***/ }),

/***/ "./src/helpers/userProfileData.js":
/*!****************************************!*\
  !*** ./src/helpers/userProfileData.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserProfileData: () => (/* binding */ getUserProfileData)\n/* harmony export */ });\n/* harmony import */ var _apiData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiData.js */ \"./src/helpers/apiData.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\nconst lang = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentLanguage)();\r\n\r\n// Function to validate required user data\r\nfunction validateUserData(user) {\r\n  const requiredFields = ['rank', 'login', 'registered', 'bestSpeed', 'ratingLevel', 'friends', 'cars', 'avatarTimestamp'];\r\n  return user && typeof user === 'object' && requiredFields.every(field => user?.[field] !== undefined);\r\n}\r\n\r\n// Main function to get profile summary and index data\r\nasync function getUserProfileData(userId, useLocalStorage = true) {\r\n  let cachedUserInfo = useLocalStorage ? JSON.parse(localStorage.getItem('fetchedUsers')) || {} : {};\r\n  const user = cachedUserInfo[userId];\r\n\r\n  // Validate if user data exists and has the required properties\r\n  if (useLocalStorage && validateUserData(user)) {\r\n    // If all data is cached, return the cached data\r\n    return {\r\n      rank: user.rank,\r\n      login: user.login,\r\n      registeredDate: user.registered,\r\n      bestSpeed: user.bestSpeed,\r\n      ratingLevel: user.ratingLevel,\r\n      friends: user.friends,\r\n      cars: user.cars,\r\n      avatar: user.avatar,\r\n      avatarTimestamp: user.avatarTimestamp\r\n    };\r\n  }\r\n\r\n  try {\r\n    // Fetch all summary and index data in just 2 requests\r\n    const [allUserData, allIndexData] = await Promise.all([\r\n      (0,_apiData_js__WEBPACK_IMPORTED_MODULE_0__.getDataById)(userId, 'allUserData'),\r\n      (0,_apiData_js__WEBPACK_IMPORTED_MODULE_0__.getDataById)(userId, 'allIndexData')\r\n    ]);\r\n    if (!allUserData || !allIndexData) throw new Error('Invalid data format received from the API.');\r\n\r\n    // Extract fields from the two objects\r\n    const rank = allUserData.title || (allUserData.status?.title ?? null);\r\n    const login = allUserData.login || null;\r\n    const registeredDate = (0,_apiData_js__WEBPACK_IMPORTED_MODULE_0__.formatRegisteredDate)(allIndexData.stats?.registered);\r\n    const bestSpeed = allIndexData.stats?.best_speed || 0;\r\n    const ratingLevel = allIndexData.stats?.rating_level || 0;\r\n    const friends = allIndexData.stats?.friends_cnt || 0;\r\n    const cars = allIndexData.stats?.cars_cnt || 0;\r\n    const avatar = allUserData.avatar || null;\r\n    const sec = avatar?.sec || 0;\r\n    const usec = avatar?.usec || 0;\r\n    const avatarTimestamp = (sec != null && usec != null)\r\n      ? (0,_apiData_js__WEBPACK_IMPORTED_MODULE_0__.convertToUpdatedTimestamp)(sec, usec)\r\n      : null;\r\n\r\n    if (login && rank && registeredDate) {\r\n      if (useLocalStorage) {\r\n        cachedUserInfo[userId] = {\r\n          rank,\r\n          login,\r\n          registered: registeredDate,\r\n          bestSpeed,\r\n          ratingLevel,\r\n          friends,\r\n          cars,\r\n          avatar,\r\n          avatarTimestamp\r\n        };\r\n        localStorage.setItem('fetchedUsers', JSON.stringify(cachedUserInfo));\r\n      }\r\n\r\n      return {\r\n        rank,\r\n        login,\r\n        registeredDate,\r\n        bestSpeed,\r\n        ratingLevel,\r\n        friends,\r\n        cars,\r\n        avatar,\r\n        avatarTimestamp\r\n      };\r\n    } else {\r\n      throw new Error('Invalid data format received from the API.');\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error fetching user profile data for ${userId}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers/userProfileData.js?");

/***/ }),

/***/ "./src/icons.js":
/*!**********************!*\
  !*** ./src/icons.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionSVG: () => (/* binding */ actionSVG),\n/* harmony export */   addSVG: () => (/* binding */ addSVG),\n/* harmony export */   beepSVG: () => (/* binding */ beepSVG),\n/* harmony export */   calendarSVG: () => (/* binding */ calendarSVG),\n/* harmony export */   chatLogsSVG: () => (/* binding */ chatLogsSVG),\n/* harmony export */   chevronDownSVG: () => (/* binding */ chevronDownSVG),\n/* harmony export */   chevronLeftSVG: () => (/* binding */ chevronLeftSVG),\n/* harmony export */   chevronRightSVG: () => (/* binding */ chevronRightSVG),\n/* harmony export */   chevronUpSVG: () => (/* binding */ chevronUpSVG),\n/* harmony export */   chevronsDownSVG: () => (/* binding */ chevronsDownSVG),\n/* harmony export */   chevronsUpSVG: () => (/* binding */ chevronsUpSVG),\n/* harmony export */   clipboardSVG: () => (/* binding */ clipboardSVG),\n/* harmony export */   clockSVG: () => (/* binding */ clockSVG),\n/* harmony export */   closeSVG: () => (/* binding */ closeSVG),\n/* harmony export */   deniedSVG: () => (/* binding */ deniedSVG),\n/* harmony export */   enterSVG: () => (/* binding */ enterSVG),\n/* harmony export */   exportSVG: () => (/* binding */ exportSVG),\n/* harmony export */   ignoredSVG: () => (/* binding */ ignoredSVG),\n/* harmony export */   importSVG: () => (/* binding */ importSVG),\n/* harmony export */   leaveSVG: () => (/* binding */ leaveSVG),\n/* harmony export */   mediaMessagesSVG: () => (/* binding */ mediaMessagesSVG),\n/* harmony export */   modeEverySVG: () => (/* binding */ modeEverySVG),\n/* harmony export */   modeMentionSVG: () => (/* binding */ modeMentionSVG),\n/* harmony export */   moderatorSVG: () => (/* binding */ moderatorSVG),\n/* harmony export */   pauseSVG: () => (/* binding */ pauseSVG),\n/* harmony export */   personalMessagesSVG: () => (/* binding */ personalMessagesSVG),\n/* harmony export */   playSVG: () => (/* binding */ playSVG),\n/* harmony export */   rangeIsOutSVG: () => (/* binding */ rangeIsOutSVG),\n/* harmony export */   removeSVG: () => (/* binding */ removeSVG),\n/* harmony export */   saveSVG: () => (/* binding */ saveSVG),\n/* harmony export */   settingsSVG: () => (/* binding */ settingsSVG),\n/* harmony export */   shuffleSVG: () => (/* binding */ shuffleSVG),\n/* harmony export */   silenceSVG: () => (/* binding */ silenceSVG),\n/* harmony export */   snowflakeSVG: () => (/* binding */ snowflakeSVG),\n/* harmony export */   sunSVG: () => (/* binding */ sunSVG),\n/* harmony export */   toggleLeftSVG: () => (/* binding */ toggleLeftSVG),\n/* harmony export */   toggleRightSVG: () => (/* binding */ toggleRightSVG),\n/* harmony export */   trackedSVG: () => (/* binding */ trackedSVG),\n/* harmony export */   trashSVG: () => (/* binding */ trashSVG),\n/* harmony export */   userSVG: () => (/* binding */ userSVG),\n/* harmony export */   userlistCacheSVG: () => (/* binding */ userlistCacheSVG),\n/* harmony export */   usersSVG: () => (/* binding */ usersSVG),\n/* harmony export */   voiceSVG: () => (/* binding */ voiceSVG)\n/* harmony export */ });\nconst svgUrl = \"http://www.w3.org/2000/svg\";\r\nconst iconStrokeWidth = 2;\r\nconst iconSize = 28;\r\n\r\n// SVG icon for entering\r\nconst enterSVGStrokeColor = \"currentColor\";\r\nconst enterSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${enterSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-enter icon-feather icon-log-in\">\r\n    <path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"></path>\r\n    <polyline points=\"10 17 15 12 10 7\"></polyline>\r\n    <line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\r\n  </svg>`;\r\n\r\n// SVG icon for leaving\r\nconst leaveSVGStrokeColor = \"currentColor\";\r\nconst leaveSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${leaveSVGStrokeColor}\" stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon-leave icon-feather icon-log-out\">\r\n    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\r\n    <polyline points=\"16 17 21 12 16 7\"></polyline>\r\n    <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\r\n  </svg>`;\r\n\r\n// SVG icon for the moderator with gradient\r\nconst moderatorSVGStopColorStart = \"rgb(255, 215, 0)\";\r\nconst moderatorSVGStopColorEnd = \"rgb(255, 140, 0)\";\r\nconst moderatorSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 10}\"\r\n      height=\"${iconSize - 10}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"url(#moderatorGradient)\"  <!-- Use a gradient fill -->\r\n      stroke=\"none\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-shield\">\r\n    <!-- Define the gradient -->\r\n    <defs>\r\n        <linearGradient id=\"moderatorGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n            <stop offset=\"0%\" style=\"stop-color: ${moderatorSVGStopColorStart}; stop-opacity: 1\" />\r\n            <stop offset=\"100%\" style=\"stop-color: ${moderatorSVGStopColorEnd}; stop-opacity: 1\" />\r\n        </linearGradient>\r\n    </defs>\r\n    <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\r\n  </svg>`;\r\n\r\n// SVG icon for the tracked with gradient stroke\r\nconst trackedSVGStopColorStart = \"rgb(135, 206, 250)\";\r\nconst trackedSVGStopColorEnd = \"rgb(0, 191, 255)\";\r\nconst trackedSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n       width=\"${iconSize - 12}\"\r\n       height=\"${iconSize - 12}\"\r\n       viewBox=\"0 0 24 24\"\r\n       fill=\"url(#trackedGradient)\"  <!-- Use a gradient fill -->\r\n       class=\"feather feather-star\">\r\n      <!-- Define the gradient for the fill -->\r\n    <defs>\r\n      <linearGradient id=\"trackedGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n        <stop offset=\"0%\" style=\"stop-color: ${trackedSVGStopColorStart}; stop-opacity: 1\" />\r\n        <stop offset=\"100%\" style=\"stop-color: ${trackedSVGStopColorEnd}; stop-opacity: 1\" />\r\n      </linearGradient>\r\n    </defs>\r\n    <!-- Use the gradient for the fill -->\r\n    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\r\n      stroke=\"url(#trackedGradient)\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    </polygon>\r\n  </svg>`;\r\n\r\n// SVG icon for ignored users\r\nconst ignoredSVGStrokeColor = \"rgb(255, 160, 122)\";\r\nconst ignoredSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${ignoredSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-slash\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>\r\n  </svg>`;\r\n\r\n// SVG markup for a clock icon\r\nconst clockSVGStrokeColor = \"currentColor\";\r\nconst clockSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n       width=\"${iconSize - 12}\"\r\n       height=\"${iconSize - 12}\"\r\n       viewBox=\"0 0 24 24\"\r\n       fill=\"none\"\r\n       stroke=\"${clockSVGStrokeColor}\"\r\n       stroke-width=\"${iconStrokeWidth}\"\r\n       stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-clock\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n  </svg>`;\r\n\r\n// SVG for the \"chevron right\" icon, used in a popup chat messages\r\nconst actionSVGStrokeColor = \"currentColor\";\r\nconst actionSVG = `\r\n    <svg xmlns=\"${svgUrl}\"\r\n        width=\"${iconSize - 12}\"\r\n        height=\"${iconSize - 12}\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"${actionSVGStrokeColor}\"\r\n        stroke-width=\"${iconStrokeWidth}\"\r\n        stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\">\r\n      <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n    </svg>`;\r\n\r\n// SVG markup for a user icon\r\nconst userSVGStrokeColor = \"currentColor\";\r\nconst userSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${userSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user\">\r\n    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n  </svg>`;\r\n\r\n// Button SVG icons \"silence\", \"beep\", \"voice\" representation\r\nconst silenceSVGStrokeColor = \"hsl(355, 80%, 65%)\";\r\nconst beepSVGStrokeColor = \"hsl(55, 80%, 65%)\";\r\nconst voiceSVGStrokeColor = \"hsl(80, 80%, 40%)\";\r\nconst silenceSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${silenceSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\r\n    <line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\"></line>\r\n    <line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\"></line>\r\n  </svg>`;\r\n\r\nconst beepSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${beepSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\r\n    <path d=\"M19.07 4.93a10 10 0 0 1 0 14.14\" opacity=\"0.3\"></path>\r\n    <path d=\"M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\r\n  </svg>`;\r\n\r\nconst voiceSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${voiceSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\r\n    <path d=\"M19.07 4.93a10 10 0 0 1 0 14.14\"></path>\r\n    <path d=\"M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\r\n  </svg>`;\r\n\r\n// Icons for message mode button\r\n// Button SVG icons \"every\", \"mention\" representation\r\nconst modeEverySVGStrokeColor = \"hsl(100, 50%, 50%)\";\r\nconst modeEverySVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${modeEverySVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n  </svg>`;\r\n\r\nconst modeMentionSVGStrokeColor = \"hsl(180, 60%, 50%)\";\r\nconst modeMentionSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${modeMentionSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n  </svg>`;\r\n\r\n// Icon for the out of range value\r\nconst rangeIsOutSVGStrokeColor = \"currentColor\";\r\nconst rangeIsOutSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${rangeIsOutSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-slash\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>\r\n  </svg>`;\r\n\r\n// Icon for userlistCache\r\nconst userlistCacheSVGStrokeColor = \"rgb(180, 213, 131)\";\r\nconst userlistCacheSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${userlistCacheSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-database\">\r\n    <ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse>\r\n    <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"></path>\r\n    <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"></path>\r\n  </svg>`;\r\n\r\n// Icon for personal messages\r\nconst personalMessagesSVGStrokeColor = \"rgb(255, 160, 122)\";\r\nconst personalMessagesSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${personalMessagesSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-mail\">\r\n    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\r\n    <polyline points=\"22,6 12,13 2,6\"></polyline>\r\n  </svg>`;\r\n\r\n// Icon for chat logs\r\nconst chatLogsSVGStrokeColor = \"rgb(100, 149, 237)\";\r\nconst chatLogsSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize}\"\r\n      height=\"${iconSize}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chatLogsSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-message-circle\">\r\n      <path \r\n          d=\"M21 11.5 a8.38 8.38 0 0 1 -.9 3.8 a8.5 8.5 0 0 1 -7.6 4.7 a8.38 8.38 0 0 1 -3.8 -.9\r\n          L3 21 l1.9 -5.7 a8.38 8.38 0 0 1 -.9 -3.8 a8.5 8.5 0 0 1 4.7 -7.6\r\n          a8.38 8.38 0 0 1 3.8 -.9 h.5 a8.48 8.48 0 0 1 8 8 v.5 z\">\r\n      </path>\r\n  </svg>`;\r\n\r\n// Icon for media messages\r\nconst mediaMessagesSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-film\">\r\n    <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2.18\" ry=\"2.18\"></rect>\r\n    <line x1=\"7\" y1=\"2\" x2=\"7\" y2=\"22\"></line>\r\n    <line x1=\"17\" y1=\"2\" x2=\"17\" y2=\"22\"></line>\r\n    <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n    <line x1=\"2\" y1=\"7\" x2=\"7\" y2=\"7\"></line>\r\n    <line x1=\"2\" y1=\"17\" x2=\"7\" y2=\"17\"></line>\r\n    <line x1=\"17\" y1=\"17\" x2=\"22\" y2=\"17\"></line>\r\n    <line x1=\"17\" y1=\"7\" x2=\"22\" y2=\"7\"></line>\r\n  </svg>`;\r\n\r\n// Icon for the disabled chat button\r\nconst deniedSVGStrokeColor = \"rgb(255, 100, 100)\";\r\nconst deniedSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${deniedSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-slash\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n    <line x1=\"4.93\" y1=\"4.93\" x2=\"19.07\" y2=\"19.07\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the settings icon\r\nconst settingsSVGStrokeColor = \"rgb(255, 228, 196)\";\r\nconst settingsSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${settingsSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-sliders\">\r\n    <line x1=\"4\" y1=\"21\" x2=\"4\" y2=\"14\"></line>\r\n    <line x1=\"4\" y1=\"10\" x2=\"4\" y2=\"3\"></line>\r\n    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"12\"></line>\r\n    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"3\"></line>\r\n    <line x1=\"20\" y1=\"21\" x2=\"20\" y2=\"16\"></line>\r\n    <line x1=\"20\" y1=\"12\" x2=\"20\" y2=\"3\"></line>\r\n    <line x1=\"1\" y1=\"14\" x2=\"7\" y2=\"14\"></line>\r\n    <line x1=\"9\" y1=\"8\" x2=\"15\" y2=\"8\"></line>\r\n    <line x1=\"17\" y1=\"16\" x2=\"23\" y2=\"16\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"x\" icon (close button)\r\nconst closeSVGStrokeColor = \"rgb(144, 238, 144)\";\r\nconst closeSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${closeSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-x\">\r\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"chevrons up\" icon\r\nconst chevronsSVGStrokeColor = \"rgb(211, 211, 211)\";\r\nconst chevronsUpSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chevronsSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevrons-up\">\r\n    <polyline points=\"17 11 12 6 7 11\"></polyline>\r\n    <polyline points=\"17 18 12 13 7 18\"></polyline>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"chevron up\" icon\r\nconst chevronUpSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chevronsSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-up\">\r\n    <polyline points=\"18 15 12 9 6 15\"></polyline>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"chevron down\" icon\r\nconst chevronDownSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chevronsSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\">\r\n    <polyline points=\"6 9 12 15 18 9\"></polyline>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"chevrons down\" icon\r\nconst chevronsDownSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chevronsSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevrons-down\">\r\n    <polyline points=\"7 13 12 18 17 13\"></polyline>\r\n    <polyline points=\"7 6 12 11 17 6\"></polyline>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"toggle-right\" icon\r\nconst toggleRightSVGStrokeColor = \"rgb(137, 187, 255)\";\r\nconst toggleRightSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 25 25\"\r\n      fill=\"none\"\r\n      stroke=\"${toggleRightSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-toggle-right\">\r\n    <rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect>\r\n    <circle cx=\"16\" cy=\"12\" r=\"3\"></circle>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"toggle-left\" icon\r\nconst toggleLeftSVGStrokeColor = \"rgb(137, 187, 255)\";\r\nconst toggleLeftSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 25 25\"\r\n      fill=\"none\"\r\n      stroke=\"${toggleLeftSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-toggle-left\">\r\n    <rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect>\r\n    <circle cx=\"8\" cy=\"12\" r=\"3\"></circle>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"calendar\" icon\r\nconst calendarSVGStrokeColor = \"rgb(176, 196, 222)\";\r\nconst calendarSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${calendarSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-calendar\">\r\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\r\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\r\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"clipboard\" icon\r\nconst clipboardSVGStrokeColor = \"rgb(176, 196, 222)\";\r\nconst clipboardSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${clipboardSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-clipboard\">\r\n    <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path>\r\n    <rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect>\r\n  </svg>`;\r\n\r\n// SVG for the \"chevron left\" icon, used to change chat logs one day backward\r\nconst chevronLeftSVGStrokeColor = \"rgb(28, 229, 229)\";\r\nconst chevronLeftSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chevronLeftSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-left\">\r\n    <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n  </svg>`;\r\n\r\n// SVG for the \"chevron right\" icon, used to change chat logs one day forward\r\nconst chevronRightSVGStrokeColor = \"rgb(28, 229, 229)\";\r\nconst chevronRightSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${chevronRightSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\">\r\n      <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n  </svg>`;\r\n\r\n// SVG for the \"shuffle\" icon, used to select a random year, month, and day\r\nconst shuffleSVGStrokeColor = \"hsl(250, 40%, 80%)\";\r\nconst shuffleSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${shuffleSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-shuffle\">\r\n    <polyline points=\"16 3 21 3 21 8\"></polyline>\r\n    <line x1=\"4\" y1=\"20\" x2=\"21\" y2=\"3\"></line>\r\n    <polyline points=\"21 16 21 21 16 21\"></polyline>\r\n    <line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line>\r\n    <line x1=\"4\" y1=\"4\" x2=\"9\" y2=\"9\"></line>\r\n  </svg>`;\r\n\r\n// SVG for the \"sun\" icon, used to load chat logs for the current day\r\nconst sunSVGStrokeColor = \"hsl(50, 100%, 50%)\";\r\nconst sunSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${sunSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-sun\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\r\n    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\r\n    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\r\n    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\r\n    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\r\n    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\r\n    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\r\n    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\r\n    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the trash icon\r\nconst trashSVGStrokeColor = \"rgb(255, 140, 0)\";\r\nconst trashSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${trashSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-trash-2\">\r\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the users icon\r\nconst usersSVGStrokeColor = \"currentColor\";\r\nconst usersSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${usersSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-users\">\r\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"import\" icon (export button)\r\nconst importSVGStrokeColor = \"rgb(209, 144, 238)\";\r\nconst importSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${importSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-download\">\r\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n    <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"export\" icon (import button)\r\nconst exportSVGStrokeColor = \"rgb(144, 185, 238)\";\r\nconst exportSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${exportSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\" stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\" class=\"feather feather-upload\">\r\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n    <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n    <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"save\" icon (save button)\r\nconst saveSVGStrokeColor = \"rgb(144, 238, 220)\";\r\nconst saveSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${saveSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-save\">\r\n    <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\r\n    <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\r\n    <polyline points=\"7 3 7 8 15 8\"></polyline>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"remove\" icon (remove button)\r\nconst removeSVGStrokeColor = \"rgb(238, 144, 144)\";\r\nconst removeSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${removeSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-trash\">\r\n    <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"snowflake\" icon\r\nconst snowflakeSVGStrokeColor = \"rgb(176, 196, 222)\";\r\nconst snowflakeSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 8}\"\r\n      height=\"${iconSize - 8}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${snowflakeSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-snowflake\">\r\n    <g id=\"snowflake\">\r\n      <line x1=\"12.06\" y1=\"2.74\" x2=\"12.06\" y2=\"12.06\" />\r\n      <line x1=\"20.12\" y1=\"7.4\" x2=\"12.06\" y2=\"12.06\" />\r\n      <line x1=\"20.12\" y1=\"16.71\" x2=\"12.06\" y2=\"12.06\" />\r\n      <line x1=\"12.06\" y1=\"21.37\" x2=\"12.06\" y2=\"12.06\" />\r\n      <line x1=\"3.99\" y1=\"16.71\" x2=\"12.06\" y2=\"12.06\" />\r\n      <line x1=\"3.99\" y1=\"7.4\" x2=\"12.06\" y2=\"12.06\" />\r\n      <polyline points=\"8.96,4.67 12.06,7.77 15.16,4.67\"/>\r\n      <polyline points=\"16.9,5.68 15.76,9.92 20,11.05\"/>\r\n      <polyline points=\"20,13.06 15.76,14.2 16.9,18.43\"/>\r\n      <polyline points=\"15.16,19.44 12.06,16.34 8.96,19.44\"/>\r\n      <polyline points=\"7.21,18.43 8.35,14.2 4.11,13.06\"/>\r\n      <polyline points=\"4.11,11.05 8.35,9.92 7.21,5.68\"/>\r\n    </g>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"add\" icon (add button)\r\nconst addSVGStrokeColor = \"rgb(209, 144, 238)\";\r\nconst addSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 12}\"\r\n      height=\"${iconSize - 12}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${addSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\">\r\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"play\" icon (parse inception button)\r\nconst playSVGStrokeColor = \"hsl(150, 70%, 60%)\";\r\nconst playSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${playSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-play\">\r\n    <polygon points=\"5 3 19 12 5 21 5 3\"></polygon>\r\n  </svg>`;\r\n\r\n// Inline SVG source for the \"pause\" icon (parse pause button)\r\nconst pauseSVGStrokeColor = \"hsl(150, 70%, 60%)\";\r\nconst pauseSVG = `\r\n  <svg xmlns=\"${svgUrl}\"\r\n      width=\"${iconSize - 4}\"\r\n      height=\"${iconSize - 4}\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"${pauseSVGStrokeColor}\"\r\n      stroke-width=\"${iconStrokeWidth}\"\r\n      stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-pause\">\r\n    <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect>\r\n    <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect>\r\n  </svg>`;\n\n//# sourceURL=webpack://tampermonkey-script/./src/icons.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isInitializedChat: () => (/* binding */ isInitializedChat)\n/* harmony export */ });\n/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.scss */ \"./src/style.scss\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/getLatestMessageData.js */ \"./src/helpers/getLatestMessageData.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n/* harmony import */ var _panels_cache_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./panels/cache/cacheHelpers.js */ \"./src/panels/cache/cacheHelpers.js\");\n/* harmony import */ var _chat_chatIgnore_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chat/chatIgnore.js */ \"./src/chat/chatIgnore.js\");\n/* harmony import */ var _panels_messages_messagesParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./panels/messages/messagesParser.js */ \"./src/panels/messages/messagesParser.js\");\n/* harmony import */ var _chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chat/chatWorkers.js */ \"./src/chat/chatWorkers.js\");\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n/* harmony import */ var _components_fonts_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/fonts.js */ \"./src/components/fonts.js\");\n/* harmony import */ var _chat_chatUserlist_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./chat/chatUserlist.js */ \"./src/chat/chatUserlist.js\");\n/* harmony import */ var _chat_chatMessagesRemover_chatMessagesRemover_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chat/chatMessagesRemover/chatMessagesRemover.js */ \"./src/chat/chatMessagesRemover/chatMessagesRemover.js\");\n/* harmony import */ var _components_participantCount_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/participantCount.js */ \"./src/components/participantCount.js\");\n/* harmony import */ var _chat_chatUsersObserver_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./chat/chatUsersObserver.js */ \"./src/chat/chatUsersObserver.js\");\n/* harmony import */ var _chat_chatMessagesObserver_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./chat/chatMessagesObserver.js */ \"./src/chat/chatMessagesObserver.js.js\");\n/* harmony import */ var _components_popupLengthIndicator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/popupLengthIndicator.js */ \"./src/components/popupLengthIndicator.js\");\n/* harmony import */ var _converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./converters/imageConverter.js */ \"./src/converters/imageConverter.js\");\n/* harmony import */ var _converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./converters/videoConverter.js */ \"./src/converters/videoConverter.js\");\n/* harmony import */ var _components_mode_messageMode_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/mode/messageMode.js */ \"./src/components/mode/messageMode.js\");\n/* harmony import */ var _components_mode_soundMode_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/mode/soundMode.js */ \"./src/components/mode/soundMode.js\");\n/* harmony import */ var _panels_messages_messages_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./panels/messages/messages.js */ \"./src/panels/messages/messages.js\");\n/* harmony import */ var _panels_chatlogs_chatlogs_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./panels/chatlogs/chatlogs.js */ \"./src/panels/chatlogs/chatlogs.js\");\n/* harmony import */ var _panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./panels/settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// definitions\r\n\r\n\r\n// Skip reading the messages on page load to read them normally when the user is present and the page is stable\r\nlet isInitializedChat = false;\r\n\r\n(() => { // This is the recommended way for safety and isolation\r\n\r\n  // Initialize all fonts with one call\r\n  (0,_components_fonts_js__WEBPACK_IMPORTED_MODULE_9__.setupFonts)();\r\n\r\n  // Creates an empowerment panel and appends it to the document body\r\n  const empowermentPanel = (() => {\r\n    const panel = document.createElement('div');\r\n    panel.classList.add(\"empowerment-panel\");\r\n    document.body.appendChild(panel);\r\n    return panel;\r\n  })();\r\n\r\n  // 1 ======================================================================\r\n  // Check if the current location is 'gmid' or 'gamelist'\r\n  if ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gmid') || (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gamelist')) {\r\n    const shouldCreateCounter = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.shouldEnable)('elements', 'counter');\r\n    if (shouldCreateCounter) {\r\n      (0,_components_participantCount_js__WEBPACK_IMPORTED_MODULE_12__.createChatUserCounter)(empowermentPanel);\r\n    }\r\n    (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.applyDynamicBackgroundColor)();\r\n  }\r\n  // ========================================================================\r\n\r\n\r\n  // Check if the current location is 'gmid' or 'gamelist'\r\n  if ((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gmid') || (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gamelist')) {\r\n    // 2 ======================================================================\r\n    (0,_components_mode_soundMode_js__WEBPACK_IMPORTED_MODULE_19__.createSoundSwitcherButton)(empowermentPanel);\r\n    // ========================================================================\r\n\r\n    // 3 ======================================================================\r\n    (0,_components_mode_messageMode_js__WEBPACK_IMPORTED_MODULE_18__.createMessageModeButton)(empowermentPanel);\r\n    // ========================================================================\r\n  }\r\n\r\n  // 4 ======================================================================\r\n  (0,_panels_cache_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_4__.createCacheButton)(empowermentPanel);\r\n  // ========================================================================\r\n\r\n  // 5 ======================================================================\r\n  (0,_panels_messages_messages_js__WEBPACK_IMPORTED_MODULE_20__.createMessagesButton)(empowermentPanel);\r\n  // ========================================================================\r\n\r\n  // 6 ======================================================================\r\n  (0,_panels_chatlogs_chatlogs_js__WEBPACK_IMPORTED_MODULE_21__.createChatLogsButton)(empowermentPanel);\r\n  // ========================================================================\r\n\r\n  // 7 ======================================================================\r\n  (0,_panels_settings_settings_js__WEBPACK_IMPORTED_MODULE_22__.createSettingsButton)(empowermentPanel);\r\n  // ========================================================================\r\n\r\n\r\n  // OBSERVERS\r\n  // 1 ======================================================================\r\n  (0,_chat_chatMessagesObserver_js__WEBPACK_IMPORTED_MODULE_14__.startChatMessagesObserver)();\r\n  // ========================================================================\r\n\r\n  // 2 ======================================================================\r\n  (0,_chat_chatUsersObserver_js__WEBPACK_IMPORTED_MODULE_13__.startChatUserObserver)();\r\n  // ========================================================================\r\n\r\n  // Check if the current location is 'gmid' or 'gamelist'\r\n  if (!((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gmid') || (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.locationHas)('gamelist'))) return;\r\n\r\n  // Instantiate ChatMessagesRemover before using it\r\n  const chatMessagesRemover = new _chat_chatMessagesRemover_chatMessagesRemover_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\r\n\r\n  // Create a new MutationObserver to wait for the chat to fully load with all messages\r\n  let waitForChatObserver = new MutationObserver(() => {\r\n    // Get the container for all chat messages\r\n    const messagesContainer = document.querySelector('.messages-content div');\r\n    // Get all the message elements from messages container\r\n    const messages = document.querySelectorAll('.messages-content div p');\r\n\r\n    // Check if the chat element has been added to the DOM\r\n    if (document.contains(messagesContainer)) {\r\n      (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.restoreChatState)();\r\n      // Check if there are at least 20 messages in the container\r\n      if (messages.length >= 20) {\r\n        waitForChatObserver.disconnect();\r\n        (0,_chat_chatIgnore_js__WEBPACK_IMPORTED_MODULE_5__.removeIgnoredUserMessages)();\r\n        (0,_converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_16__.convertImageLinksToImage)('generalMessages');\r\n        (0,_converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_17__.convertVideoLinksToPlayer)('generalMessages');\r\n        (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.processEncodedLinks)('generalMessages');\r\n        window.location.href.includes('gmid') && (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.restoreChatTab)();\r\n        (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.setupInputBackup)('#chat-general .text');\r\n        (0,_helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_2__.highlightMentionWords)();\r\n        (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.groupChatMessages)();\r\n        (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_8__.scrollToBottom)('generalMessages', 350);\r\n        (0,_panels_cache_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_4__.refreshFetchedUsers)(false, _definitions_js__WEBPACK_IMPORTED_MODULE_23__.cacheRefreshThresholdHours);\r\n        (0,_chat_chatUserlist_js__WEBPACK_IMPORTED_MODULE_10__.refreshUserList)();\r\n        (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.setChatFieldFocus)();\r\n        chatMessagesRemover.updateDeletedMessages();\r\n        (0,_chat_chatWorkers_js__WEBPACK_IMPORTED_MODULE_7__.setupChatInputListener)();\r\n        (0,_chat_chatMessagesRemover_chatMessagesRemover_js__WEBPACK_IMPORTED_MODULE_11__.pruneDeletedMessages)();\r\n        setTimeout(() => { (0,_components_popupLengthIndicator_js__WEBPACK_IMPORTED_MODULE_15__.initChatEvents)() }, 600);\r\n        setTimeout(() => (isInitializedChat = true), 600);\r\n        (0,_panels_messages_messagesParser_js__WEBPACK_IMPORTED_MODULE_6__.parsePersonalMessages)(_definitions_js__WEBPACK_IMPORTED_MODULE_23__.today);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Start observing the DOM for changes\r\n  waitForChatObserver.observe(document, { childList: true, subtree: true });\r\n\r\n})();\n\n//# sourceURL=webpack://tampermonkey-script/./src/main.js?");

/***/ }),

/***/ "./src/panels/cache/cache.js":
/*!***********************************!*\
  !*** ./src/panels/cache/cache.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showCachePanel: () => (/* binding */ showCachePanel)\n/* harmony export */ });\n/* harmony import */ var _cache_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache.scss */ \"./src/panels/cache/cache.scss\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cacheHelpers.js */ \"./src/panels/cache/cacheHelpers.js\");\n/* harmony import */ var _cacheSort_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cacheSort.js */ \"./src/panels/cache/cacheSort.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/scrollButtons.js */ \"./src/helpers/scrollButtons.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _cacheSearch_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cacheSearch.js */ \"./src/panels/cache/cacheSearch.js\");\n/* harmony import */ var _cacheUserElement_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cacheUserElement.js */ \"./src/panels/cache/cacheUserElement.js\");\n/* harmony import */ var _cacheDelegatedTooltips_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cacheDelegatedTooltips.js */ \"./src/panels/cache/cacheDelegatedTooltips.js\");\n/* harmony import */ var _cacheDelegatedEvents_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cacheDelegatedEvents.js */ \"./src/panels/cache/cacheDelegatedEvents.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// --- Localization for cache panel interface ---\r\nconst cacheMessages = {\r\n  threshold: {\r\n    icon: '🚧',\r\n    en: 'Threshold',\r\n    ru: 'Порог'\r\n  },\r\n  countdown: {\r\n    icon: '💣',\r\n    en: 'Countdown',\r\n    ru: 'Обратный отсчёт'\r\n  }\r\n};\r\nconst currentLanguage = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentLanguage)();\r\n\r\n// Function to display the cached user list panel\r\nfunction showCachePanel() {\r\n  const existingPanel = document.querySelector('.cached-users-panel');\r\n  if (existingPanel) {\r\n    existingPanel.remove();\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerDimmingElement)('hide');\r\n    return;\r\n  }\r\n\r\n  (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.removePreviousPanel)();\r\n  let users = JSON.parse(localStorage.getItem('fetchedUsers')) || {};\r\n\r\n  const cachedUsersPanel = document.createElement('div');\r\n  cachedUsersPanel.className = 'cached-users-panel popup-panel';\r\n\r\n  _definitions_js__WEBPACK_IMPORTED_MODULE_7__.state.panelsEvents.handleCacheKeydown = (event) => {\r\n    if (event.key === 'Escape') {\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerTargetElement)(cachedUsersPanel, 'hide');\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerDimmingElement)('hide');\r\n      document.removeEventListener('keydown', _definitions_js__WEBPACK_IMPORTED_MODULE_7__.state.panelsEvents.handleCacheKeydown);\r\n    }\r\n  };\r\n  document.addEventListener('keydown', _definitions_js__WEBPACK_IMPORTED_MODULE_7__.state.panelsEvents.handleCacheKeydown);\r\n\r\n  const panelHeaderContainer = document.createElement('div');\r\n  panelHeaderContainer.className = 'panel-header';\r\n\r\n  const dropTime = document.createElement('div');\r\n  dropTime.className = 'drop-time';\r\n\r\n  const dropTimeThresholdDescription = document.createElement('span');\r\n  dropTimeThresholdDescription.className = 'drop-time-threshold-description';\r\n  dropTimeThresholdDescription.textContent = `${cacheMessages.threshold.icon} ${cacheMessages.threshold[currentLanguage]}`;\r\n\r\n  const dropTimeThreshold = document.createElement('span');\r\n  dropTimeThreshold.className = 'drop-time-threshold';\r\n  const storedThresholdTime = localStorage.getItem('cacheRefreshThresholdHours');\r\n  dropTimeThreshold.innerHTML = storedThresholdTime || '00:00:00';\r\n  dropTimeThreshold.addEventListener('click', _cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__.setCacheRefreshTime);\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(dropTimeThreshold, {\r\n    en: 'Click to set cache refresh time',\r\n    ru: 'Нажмите, чтобы установить время обновления кэша'\r\n  });\r\n\r\n  const dropTimeExpirationDescription = document.createElement('span');\r\n  dropTimeExpirationDescription.className = 'drop-time-expiration-description';\r\n  dropTimeExpirationDescription.textContent = `${cacheMessages.countdown.icon} ${cacheMessages.countdown[currentLanguage]}`;\r\n\r\n  const dropTimeExpiration = document.createElement('span');\r\n  dropTimeExpiration.className = 'drop-time-expiration';\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(dropTimeExpiration, {\r\n    en: 'Time until cache refresh',\r\n    ru: 'Время до обновления кэша'\r\n  });\r\n\r\n  dropTime.append(dropTimeThresholdDescription, dropTimeThreshold, dropTimeExpirationDescription, dropTimeExpiration);\r\n  panelHeaderContainer.appendChild(dropTime);\r\n\r\n  const cacheSearchContainer = document.createElement('div');\r\n  cacheSearchContainer.className = 'search-for-cached-users';\r\n\r\n  const cacheSearchInput = document.createElement('input');\r\n  cacheSearchInput.className = 'cached-users-search-input';\r\n  cacheSearchInput.type = 'text';\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(cacheSearchInput, {\r\n    en: `\r\n      [Ctrl + Click] to clear the input and display all users\r\n      [Enter] to activate user search mode on the site\r\n    `,\r\n    ru: ` \r\n      [Ctrl + Клик] очистить поле и показать всех пользователей\r\n      [Enter] включить режим поиска пользователей на сайте\r\n    `\r\n  });\r\n  cacheSearchContainer.appendChild(cacheSearchInput);\r\n\r\n  cacheSearchInput.addEventListener('click', (event) => {\r\n    if (event.ctrlKey) {\r\n      cacheSearchInput.value = '';\r\n      cacheSearchInput.dispatchEvent(new Event('input', { bubbles: true }));\r\n    }\r\n  });\r\n\r\n  cacheSearchInput.addEventListener('input', () => {\r\n    const oldUsersContainer = document.querySelector('.old-users');\r\n    const newUsersContainer = document.querySelector('.new-users');\r\n    const fetchedUsersContainer = document.querySelector('.fetched-users');\r\n\r\n    if (!cacheSearchInput.value.trim()) {\r\n      oldUsersContainer.style.display = 'grid';\r\n      newUsersContainer.style.display = 'grid';\r\n      const searchResultsContainer = document.querySelector('.search-results');\r\n      if (searchResultsContainer && fetchedUsersContainer) {\r\n        fetchedUsersContainer.removeChild(searchResultsContainer);\r\n      }\r\n    }\r\n  });\r\n\r\n  cacheSearchInput.addEventListener('keydown', (event) => {\r\n    if (event.key === 'Enter' && !event.target.value.trim()) {\r\n      event.preventDefault();\r\n      event.target.value = 'user ';\r\n    }\r\n  });\r\n\r\n  cacheSearchInput.addEventListener('input', (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.debounce)((event) => {\r\n    const inputValue = event.target.value.trim();\r\n    const searchMode = localStorage.getItem('cachePanelSearchMode');\r\n    const username = inputValue.startsWith('user ') ? inputValue.substring(5).trim() : (searchMode === 'fetch' ? inputValue : '');\r\n    if (username) (0,_cacheSearch_js__WEBPACK_IMPORTED_MODULE_9__.handleSearch)(username, _cacheUserElement_js__WEBPACK_IMPORTED_MODULE_10__.createCachePanelUserElement);\r\n  }, _definitions_js__WEBPACK_IMPORTED_MODULE_7__.debounceTimeout));\r\n\r\n  panelHeaderContainer.appendChild(cacheSearchContainer);\r\n\r\n  const observer = new MutationObserver(mutations => {\r\n    if (mutations.some(m => m.type === 'childList' && m.addedNodes.length)) {\r\n      const cachePanelSearchInput = document.querySelector('.cached-users-search-input');\r\n      const cachePanelLogins = Array.from(document.querySelectorAll('.fetched-users .login'));\r\n\r\n      const getFuzzyMatchScore = (query, text) => {\r\n        let score = 0, queryIndex = 0;\r\n        for (const char of text.toLowerCase()) {\r\n          if (queryIndex < query.length && char === query[queryIndex].toLowerCase()) {\r\n            score += 2;\r\n            queryIndex++;\r\n          }\r\n        }\r\n        return queryIndex === query.length ? score : 0;\r\n      };\r\n\r\n      const filterItems = query => {\r\n        cachePanelLogins.forEach(item => {\r\n          const userContainer = item.closest('.user-item');\r\n          userContainer.style.display = (!query || getFuzzyMatchScore(query, item.textContent) > 0) ? 'grid' : 'none';\r\n        });\r\n      };\r\n\r\n      cachePanelSearchInput.focus();\r\n      cachePanelSearchInput.addEventListener('input', () => filterItems(cachePanelSearchInput.value.trim()));\r\n      observer.disconnect();\r\n    }\r\n  });\r\n  observer.observe(panelHeaderContainer, { childList: true, subtree: true });\r\n\r\n  const panelControlButtons = document.createElement('div');\r\n  panelControlButtons.className = 'panel-control-buttons';\r\n  panelControlButtons.style.display = 'flex';\r\n\r\n  const cachePanelSearchMode = document.createElement('div');\r\n  cachePanelSearchMode.className = 'large-button user-mode-button';\r\n  cachePanelSearchMode.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_6__.usersSVG;\r\n  const currentSearchMode = localStorage.getItem('cachePanelSearchMode') || (localStorage.setItem('cachePanelSearchMode', 'cache'), 'cache');\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(cachePanelSearchMode, {\r\n    en: (mode => `Current active mode: ${mode}`)(currentSearchMode),\r\n    ru: (mode => `Текущий активный режим: ${mode === 'cache' ? 'кэш' : 'поиск'}`)(currentSearchMode)\r\n  });\r\n\r\n  function updateStyles(mode) {\r\n    cachePanelSearchMode.classList.toggle('cache-mode-button', mode === 'cache');\r\n    cachePanelSearchMode.classList.toggle('fetch-mode-button', mode !== 'cache');\r\n  }\r\n  updateStyles(currentSearchMode);\r\n\r\n  cachePanelSearchMode.addEventListener('click', () => {\r\n    const newMode = localStorage.getItem('cachePanelSearchMode') === 'cache' ? 'fetch' : 'cache';\r\n    localStorage.setItem('cachePanelSearchMode', newMode);\r\n    updateStyles(newMode);\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(cachePanelSearchMode, {\r\n      en: `Current active mode: ${newMode}`,\r\n      ru: `Текущий активный режим: ${newMode === 'cache' ? 'кэш' : 'поиск'}`\r\n    });\r\n\r\n    // Toggle visibility of user containers based on the mode\r\n    const oldUsersContainer = document.querySelector('.old-users');\r\n    const newUsersContainer = document.querySelector('.new-users');\r\n    let searchResultsContainer = document.querySelector('.search-results');\r\n\r\n    if (newMode === 'fetch') {\r\n      // Hide old and new user containers\r\n      oldUsersContainer.style.display = 'none';\r\n      newUsersContainer.style.display = 'none';\r\n\r\n      // Create or show the search results container\r\n      if (!searchResultsContainer) {\r\n        searchResultsContainer = document.createElement('div');\r\n        searchResultsContainer.className = 'users-container search-results';\r\n        fetchedUsersContainer.appendChild(searchResultsContainer);\r\n      }\r\n      searchResultsContainer.style.display = 'grid';\r\n    } else {\r\n      // Show old and new user containers, hide search results\r\n      oldUsersContainer.style.display = 'grid';\r\n      newUsersContainer.style.display = 'grid';\r\n      if (searchResultsContainer) {\r\n        searchResultsContainer.style.display = 'none';\r\n      }\r\n    }\r\n  });\r\n\r\n  panelControlButtons.appendChild(cachePanelSearchMode);\r\n\r\n  const clearCacheButton = document.createElement('div');\r\n  clearCacheButton.className = 'large-button panel-header-clear-button';\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(clearCacheButton, {\r\n    en: 'Clear cache',\r\n    ru: 'Очистить кэш'\r\n  });\r\n  clearCacheButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_6__.trashSVG;\r\n  clearCacheButton.addEventListener('click', () => {\r\n    hideCachePanel();\r\n    (0,_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__.refreshFetchedUsers)(true, _definitions_js__WEBPACK_IMPORTED_MODULE_7__.cacheRefreshThresholdHours);\r\n    const userCountElement = document.querySelector('.cache-panel-load-button .cache-user-count');\r\n    if (userCountElement) userCountElement.textContent = '0';\r\n  });\r\n\r\n  const closePanelButton = document.createElement('div');\r\n  closePanelButton.className = 'large-button panel-header-close-button';\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(closePanelButton, {\r\n    en: 'Close panel',\r\n    ru: 'Закрыть панель'\r\n  });\r\n  closePanelButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_6__.closeSVG;\r\n  closePanelButton.addEventListener('click', hideCachePanel);\r\n\r\n  panelControlButtons.append(clearCacheButton, closePanelButton);\r\n\r\n  panelHeaderContainer.appendChild(panelControlButtons);\r\n\r\n  const fetchedUsersContainer = document.createElement('div');\r\n  fetchedUsersContainer.className = 'fetched-users';\r\n\r\n  const oldUsersContainer = (0,_cacheSearch_js__WEBPACK_IMPORTED_MODULE_9__.createUserContainer)('old');\r\n  const newUsersContainer = (0,_cacheSearch_js__WEBPACK_IMPORTED_MODULE_9__.createUserContainer)('new');\r\n\r\n  // Create and store description elements using imported createDescription function\r\n  const oldUsersDescription = (0,_cacheSearch_js__WEBPACK_IMPORTED_MODULE_9__.createDescription)(\r\n    currentLanguage === 'en' ? 'Old Residents' : 'Постояльцы',\r\n    'old-users-description'\r\n  );\r\n  oldUsersContainer.appendChild(oldUsersDescription);\r\n\r\n  const newUsersDescription = (0,_cacheSearch_js__WEBPACK_IMPORTED_MODULE_9__.createDescription)(\r\n    currentLanguage === 'en' ? 'New Residents' : 'Новобранцы',\r\n    'new-users-description'\r\n  );\r\n  newUsersContainer.appendChild(newUsersDescription);\r\n\r\n  fetchedUsersContainer.append(oldUsersContainer, newUsersContainer);\r\n\r\n  const userElements = [];\r\n  const currentDate = new Date();\r\n  const isNewUser = registered => (currentDate - new Date(registered)) <= 24 * 60 * 60 * 1000;\r\n\r\n  if (localStorage.getItem('cachePanelSearchMode') === 'cache') {\r\n    Object.keys(users).forEach(userId => {\r\n      const userData = users[userId];\r\n      userElements.push((0,_cacheUserElement_js__WEBPACK_IMPORTED_MODULE_10__.createCachePanelUserElement)(userId, userData));\r\n    });\r\n    userElements.sort((a, b) => a.sortData.order !== b.sortData.order\r\n      ? a.sortData.order - b.sortData.order\r\n      : b.sortData.bestSpeed - a.sortData.bestSpeed);\r\n    userElements.forEach(({ userElement, registered }) => {\r\n      (isNewUser(registered) ? newUsersContainer : oldUsersContainer).appendChild(userElement);\r\n    });\r\n  }\r\n\r\n  const sortButtonsContainer = (0,_cacheSort_js__WEBPACK_IMPORTED_MODULE_3__.createSortButtons)(\r\n    userElements,\r\n    oldUsersContainer,\r\n    newUsersContainer,\r\n    isNewUser,\r\n    oldUsersDescription,\r\n    newUsersDescription\r\n  );\r\n\r\n  cachedUsersPanel.append(panelHeaderContainer, sortButtonsContainer, fetchedUsersContainer);\r\n  const { scrollButtonsContainer } = (0,_helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_5__.createScrollButtons)(fetchedUsersContainer);\r\n  cachedUsersPanel.appendChild(scrollButtonsContainer);\r\n\r\n  document.body.appendChild(cachedUsersPanel);\r\n\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerTargetElement)(cachedUsersPanel, 'show');\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerDimmingElement)('show');\r\n\r\n  setInterval(_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__.updateRemainingTime, 1000);\r\n  (0,_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__.updateRemainingTime)();\r\n\r\n  // Setup delegated tooltips and events\r\n  (0,_cacheDelegatedTooltips_js__WEBPACK_IMPORTED_MODULE_11__.setupCacheTooltips)(sortButtonsContainer, fetchedUsersContainer);\r\n  (0,_cacheDelegatedEvents_js__WEBPACK_IMPORTED_MODULE_12__.setupCacheDelegatedEvents)(fetchedUsersContainer);\r\n}\r\n\r\nfunction hideCachePanel() {\r\n  const cachedUsersPanel = document.querySelector('.cached-users-panel');\r\n  if (cachedUsersPanel) {\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerTargetElement)(cachedUsersPanel, 'hide');\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_4__.triggerDimmingElement)('hide');\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cache.js?");

/***/ }),

/***/ "./src/panels/cache/cache.scss":
/*!*************************************!*\
  !*** ./src/panels/cache/cache.scss ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_cache_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./cache.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/cache/cache.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_cache_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_cache_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_cache_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_cache_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cache.scss?");

/***/ }),

/***/ "./src/panels/cache/cacheDelegatedEvents.js":
/*!**************************************************!*\
  !*** ./src/panels/cache/cacheDelegatedEvents.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupCacheDelegatedEvents: () => (/* binding */ setupCacheDelegatedEvents)\n/* harmony export */ });\n/* harmony import */ var _helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/iframeProfileLoader.js */ \"./src/helpers/iframeProfileLoader.js\");\n/* harmony import */ var _components_notifications_notifications_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components/notifications/notifications.js */ \"./src/components/notifications/notifications.js\");\n/* harmony import */ var _cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cacheHelpers.js */ \"./src/panels/cache/cacheHelpers.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction setupCacheDelegatedEvents(fetchedUsersContainer) {\r\n  // Delegated event listener for metrics and login elements\r\n  fetchedUsersContainer.addEventListener('click', (event) => {\r\n    const metric = event.target.closest('.best-speed, .rating-level, .cars-count, .friends-count');\r\n    if (metric) {\r\n      const url = metric.dataset.url;\r\n      if (url) (0,_helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_0__.loadProfileIntoIframe)(url);\r\n      return;\r\n    }\r\n\r\n    const login = event.target.closest('.login');\r\n    if (login) {\r\n      event.preventDefault();\r\n      const userId = login.href.split('/').pop();\r\n      const profileUrl = _definitions_js__WEBPACK_IMPORTED_MODULE_5__.profileBaseUrl + userId;\r\n      const messageInProfile = `${_definitions_js__WEBPACK_IMPORTED_MODULE_5__.profileBaseUrl}${_definitions_js__WEBPACK_IMPORTED_MODULE_5__.myUserId}/messages/${userId}/`;\r\n      if (event.ctrlKey && event.shiftKey) {\r\n        const newTab = window.open(messageInProfile, '_blank');\r\n        if (newTab) newTab.focus();\r\n      } else if (event.ctrlKey) {\r\n        (0,_helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_0__.loadProfileIntoIframe)(messageInProfile);\r\n      } else {\r\n        (0,_helpers_iframeProfileLoader_js__WEBPACK_IMPORTED_MODULE_0__.loadProfileIntoIframe)(profileUrl);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const visits = event.target.closest('.visits');\r\n    if (visits) {\r\n      event.stopPropagation();\r\n      let shouldProcessActionLog = true;\r\n      const userId = visits.dataset.userId;\r\n      const users = JSON.parse(localStorage.getItem('fetchedUsers')) || {};\r\n      const user = users[userId];\r\n      const actionLog = user?.actionLog;\r\n\r\n      if (user) {\r\n        let actionLogContainer = document.querySelector('.action-log');\r\n        if (!actionLogContainer) {\r\n          actionLogContainer = document.createElement('div');\r\n          actionLogContainer.className = 'action-log';\r\n          fetchedUsersContainer.appendChild(actionLogContainer);\r\n          (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__.adjustVisibility)(actionLogContainer, 'show', 1);\r\n        } else {\r\n          actionLogContainer.replaceChildren();\r\n        }\r\n\r\n        if (actionLog && shouldProcessActionLog) {\r\n          actionLog.forEach((action, index) => {\r\n            if (!shouldProcessActionLog || typeof action !== 'object' || !action) return;\r\n            const { type, timestamp } = action;\r\n            const userAction = visits.closest('.user-item').querySelector('.login').textContent || 'Unknown User';\r\n            const actionIconType = type === 'enter' ? _icons_js__WEBPACK_IMPORTED_MODULE_4__.enterSVG : _icons_js__WEBPACK_IMPORTED_MODULE_4__.leaveSVG;\r\n            const userPresence = type === 'enter';\r\n            setTimeout(() => {\r\n              if (shouldProcessActionLog) {\r\n                (0,_components_notifications_notifications_js__WEBPACK_IMPORTED_MODULE_1__.createStaticNotification)(userAction, actionIconType, timestamp, userPresence, 'cachePanel');\r\n              }\r\n            }, 10 * (index + 1));\r\n          });\r\n        }\r\n        const closeActionLog = (e) => {\r\n          if (!actionLogContainer.contains(e.target) || e.code === 'Space') {\r\n            if (e.code === 'Space') e.preventDefault();\r\n            (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__.adjustVisibility)(actionLogContainer, 'hide', 0);\r\n            shouldProcessActionLog = false;\r\n            ['click', 'keydown'].forEach(evt => document.removeEventListener(evt, closeActionLog));\r\n          }\r\n        };\r\n        ['click', 'keydown'].forEach(evt => document.addEventListener(evt, closeActionLog));\r\n      } else {\r\n        console.error('User data not found');\r\n      }\r\n    }\r\n  });\r\n\r\n  // Delegated event listener for hover effects on registered elements\r\n  fetchedUsersContainer.addEventListener('mouseover', (event) => {\r\n    const registered = event.target.closest('.registered');\r\n    if (registered && fetchedUsersContainer.contains(registered)) {\r\n      registered._originalContent = registered.textContent;\r\n      registered._hoverTimer = setTimeout(() => {\r\n        const userItem = registered.closest('.user-item');\r\n        const login = userItem?.querySelector('.login');\r\n        const userId = login?.href?.split('/').pop();\r\n        const users = JSON.parse(localStorage.getItem('fetchedUsers')) || {};\r\n        const userData = users[userId] || { registered: registered.textContent };\r\n        registered.textContent = (0,_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__.calculateTimeOnSite)(userData.registered);\r\n      }, 300);\r\n    }\r\n  });\r\n\r\n  fetchedUsersContainer.addEventListener('mouseout', (event) => {\r\n    const registered = event.target.closest('.registered');\r\n    if (registered && fetchedUsersContainer.contains(registered)) {\r\n      clearTimeout(registered._hoverTimer);\r\n      if (registered._originalContent) {\r\n        registered.textContent = registered._originalContent;\r\n      }\r\n    }\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cacheDelegatedEvents.js?");

/***/ }),

/***/ "./src/panels/cache/cacheDelegatedTooltips.js":
/*!****************************************************!*\
  !*** ./src/panels/cache/cacheDelegatedTooltips.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupCacheTooltips: () => (/* binding */ setupCacheTooltips)\n/* harmony export */ });\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n\r\n\r\nfunction setupCacheTooltips(sortButtonsContainer, fetchedUsersContainer) {\r\n  // Delegated tooltips for sort buttons\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(\r\n    '.sort-button',\r\n    sortButtonsContainer,\r\n    (el) => {\r\n      if (el.classList.contains('online')) {\r\n        return {\r\n          en: 'Sort by online status',\r\n          ru: 'Сортировать по статусу онлайн'\r\n        };\r\n      }\r\n      if (el.classList.contains('offline')) {\r\n        return {\r\n          en: 'Sort by offline status',\r\n          ru: 'Сортировать по статусу оффлайн'\r\n        };\r\n      }\r\n      if (el.classList.contains('rankSpeed')) {\r\n        return {\r\n          en: 'Sort by rank and speed',\r\n          ru: 'Сортировать по рангу и скорости'\r\n        };\r\n      }\r\n      if (el.classList.contains('ratingLevel')) {\r\n        return {\r\n          en: 'Sort by rating level',\r\n          ru: 'Сортировать по уровню рейтинга'\r\n        };\r\n      }\r\n      if (el.classList.contains('carsCount')) {\r\n        return {\r\n          en: 'Sort by cars count',\r\n          ru: 'Сортировать по количеству машин'\r\n        };\r\n      }\r\n      if (el.classList.contains('friendsCount')) {\r\n        return {\r\n          en: 'Sort by friends count',\r\n          ru: 'Сортировать по количеству друзей'\r\n        };\r\n      }\r\n      if (el.classList.contains('visitsCount')) {\r\n        return {\r\n          en: 'Sort by visits count',\r\n          ru: 'Сортировать по количеству посещений'\r\n        };\r\n      }\r\n      if (el.classList.contains('alpha')) {\r\n        return {\r\n          en: 'Sort alphabetically',\r\n          ru: 'Сортировать по алфавиту'\r\n        };\r\n      }\r\n      if (el.classList.contains('registered')) {\r\n        return {\r\n          en: 'Sort by registration date',\r\n          ru: 'Сортировать по дате регистрации'\r\n        };\r\n      }\r\n    });\r\n\r\n  // Delegated tooltips for user metrics\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)(\r\n    '.waiting,' +\r\n    '.online,' +\r\n    '.offline,' +\r\n    '.login,' +\r\n    '.visits,' +\r\n    '.best-speed,' +\r\n    '.rating-level,' +\r\n    '.cars-count,' +\r\n    '.friends-count',\r\n    fetchedUsersContainer,\r\n    (el) => {\r\n      if (el.classList.contains('waiting')) {\r\n        return {\r\n          en: 'Waiting for presence status',\r\n          ru: 'Ожидание статуса присутствия'\r\n        };\r\n      }\r\n      if (el.classList.contains('online')) {\r\n        return {\r\n          en: 'Online',\r\n          ru: 'Онлайн'\r\n        };\r\n      }\r\n      if (el.classList.contains('offline')) {\r\n        return {\r\n          en: 'Offline',\r\n          ru: 'Оффлайн'\r\n        };\r\n      }\r\n\r\n      if (el.classList.contains('login')) {\r\n        return {\r\n          en: ` \r\n            [Click] to open profile in iframe (summary)\r\n            [Ctrl + Click] to open profile in iframe (messages)\r\n            [Ctrl + Shift + Click] to open profile in a new tab (messages)\r\n          `,\r\n          ru: ` \r\n            [Клик] открыть профиль в iframe (сводка)\r\n            [Ctrl + Клик] открыть профиль в iframe (сообщения)\r\n            [Ctrl + Shift + Клик] открыть профиль в новой вкладке (сообщения)\r\n          `\r\n        }\r\n      }\r\n\r\n      if (el.classList.contains('visits')) {\r\n        const userItem = el.closest('.user-item');\r\n        const loginElement = userItem?.querySelector('.login');\r\n        const loginText = loginElement?.textContent || '';\r\n        return {\r\n          en: `View action log for ${loginText}`,\r\n          ru: `Посмотреть журнал действий для ${loginText}`\r\n        }\r\n      }\r\n\r\n      if (el.classList.contains('best-speed')) {\r\n        return { en: 'Best speed', ru: 'Лучшая скорость' };\r\n      }\r\n      if (el.classList.contains('rating-level')) {\r\n        return { en: 'Rating level', ru: 'Уровень рейтинга' };\r\n      }\r\n      if (el.classList.contains('cars-count')) {\r\n        return { en: 'Cars count', ru: 'Количество машин' };\r\n      }\r\n      if (el.classList.contains('friends-count')) {\r\n        return { en: 'Friends count', ru: 'Количество друзей' };\r\n      }\r\n      return { en: '', ru: '' };\r\n    },\r\n    true\r\n  );\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cacheDelegatedTooltips.js?");

/***/ }),

/***/ "./src/panels/cache/cacheHelpers.js":
/*!******************************************!*\
  !*** ./src/panels/cache/cacheHelpers.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateTimeOnSite: () => (/* binding */ calculateTimeOnSite),\n/* harmony export */   createCacheButton: () => (/* binding */ createCacheButton),\n/* harmony export */   refreshFetchedUsers: () => (/* binding */ refreshFetchedUsers),\n/* harmony export */   setCacheRefreshTime: () => (/* binding */ setCacheRefreshTime),\n/* harmony export */   updateRemainingTime: () => (/* binding */ updateRemainingTime),\n/* harmony export */   updateUserCountText: () => (/* binding */ updateUserCountText),\n/* harmony export */   updateVisitsEmoticon: () => (/* binding */ updateVisitsEmoticon)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cache.js */ \"./src/panels/cache/cache.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\nlet { fetchedUsers } = _definitions_js__WEBPACK_IMPORTED_MODULE_0__.state;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentLanguage)();\r\n\r\n// Global function to prepend an emoticon to the visits element in the cache panel.\r\nfunction updateVisitsEmoticon(visitsElement) {\r\n  // Convert content to number; exit if invalid\r\n  const count = Number(visitsElement.textContent);\r\n  if (isNaN(count)) return console.warn('Invalid visits count!');\r\n\r\n  // Select emoticon: 0–10: 💧, 11–20: 💦, 21–30: 🌊, above 30: 🔥\r\n  const emoticon = count <= 10 ? '💧' : count <= 20 ? '💦' : count <= 30 ? '🌊' : '🔥';\r\n\r\n  visitsElement.textContent = `${emoticon} ${count}`;\r\n}\r\n\r\n// Function to set the cache refresh time based on user input\r\nfunction setCacheRefreshTime() {\r\n  let isValidInput = false;\r\n  while (!isValidInput) {\r\n    const userInput = prompt(\r\n      (lang === 'ru')\r\n        ? 'Введите время обновления кэша (например, HH, HH:mm или HH:mm:ss):'\r\n        : 'Enter a cache refresh time (e.g., HH, HH:mm, or HH:mm:ss):'\r\n    );\r\n    const dropTimeThreshold = document.querySelector('.drop-time-threshold');\r\n    const timeRegex = /^([0-9]+|[01][0-9]|2[0-4])(:([0-5]?[0-9])(:([0-5]?[0-9]))?)?$/;\r\n    if (userInput === null) {\r\n      isValidInput = true;\r\n    } else if (timeRegex.test(userInput)) {\r\n      const [hours, minutes = '00', seconds = '00'] = userInput.split(':').map(part => part.padStart(2, '0'));\r\n      dropTimeThreshold.textContent = `${hours}:${minutes}:${seconds}`;\r\n      localStorage.setItem('cacheRefreshThresholdHours', `${hours}:${minutes}:${seconds}`);\r\n      localStorage.removeItem('fetchedUsers');\r\n      localStorage.removeItem('lastClearTime');\r\n      localStorage.removeItem('nextClearTime');\r\n      setTimeout(() => location.reload(), 1000);\r\n      isValidInput = true;\r\n    } else {\r\n      alert(\r\n        (lang === 'ru')\r\n          ? 'Неверный формат времени. Пожалуйста, используйте HH, HH:mm или HH:mm:ss.'\r\n          : 'Invalid time format. Please use HH, HH:mm, or HH:mm:ss.'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// Function to calculate time spent on the site\r\nfunction calculateTimeOnSite(registeredDate) {\r\n  const totalSeconds = Math.floor((new Date() - new Date(registeredDate)) / 1000);\r\n  const years = Math.floor(totalSeconds / (365 * 24 * 60 * 60));\r\n  const months = Math.floor((totalSeconds % (365 * 24 * 60 * 60)) / (30.44 * 24 * 60 * 60));\r\n  const days = Math.floor((totalSeconds % (30.44 * 24 * 60 * 60)) / (24 * 60 * 60));\r\n  const hours = Math.floor((totalSeconds % (24 * 60 * 60)) / (60 * 60));\r\n  const minutes = Math.floor((totalSeconds % (60 * 60)) / 60);\r\n  const seconds = totalSeconds % 60;\r\n\r\n  const timeComponents = [];\r\n\r\n  if (years > 0) {\r\n    timeComponents.push(`${years} year${years > 1 ? 's' : ''}`);\r\n    if (months > 0) timeComponents.push(`${months} month${months > 1 ? 's' : ''}`);\r\n  } else if (months > 1 || (months === 1 && days > 0)) {\r\n    timeComponents.push(`${months} month${months > 1 ? 's' : ''}`);\r\n    if (days > 0) timeComponents.push(`${days} day${days > 1 ? 's' : ''}`);\r\n  } else if (days > 0) {\r\n    timeComponents.push(`${days} day${days > 1 ? 's' : ''}`);\r\n    if (hours > 0) timeComponents.push(`${hours} hour${hours > 1 ? 's' : ''}`);\r\n    if (minutes > 0) timeComponents.push(`${minutes} minute${minutes > 1 ? 's' : ''}`);\r\n  } else if (hours > 0) {\r\n    timeComponents.push(`${hours} hour${hours > 1 ? 's' : ''}`);\r\n    if (minutes > 0) timeComponents.push(`${minutes} minute${minutes > 1 ? 's' : ''}`);\r\n  } else if (minutes > 0) {\r\n    timeComponents.push(`${minutes} minute${minutes > 1 ? 's' : ''}`);\r\n    if (seconds > 0) timeComponents.push(`${seconds} second${seconds > 1 ? 's' : ''}`);\r\n  } else {\r\n    timeComponents.push(`${seconds} second${seconds > 1 ? 's' : ''}`);\r\n  }\r\n\r\n  return timeComponents.filter(Boolean).join(' '); // Filter out empty strings and join components\r\n}\r\n\r\n// Function to refresh or manually clear fetched users and reset the timer\r\n// @param {boolean} isManual - If true, clears cache unconditionally; if false, clears based on threshold (default is false)\r\n// @param {number} thresholdHours - Time threshold in hours for automatic cache clearing (default is 24 hours)\r\nfunction refreshFetchedUsers(isManual = false, thresholdHours = 24) {\r\n  // Retrieve the last clear time from localStorage\r\n  const lastClearTime = localStorage.getItem('lastClearTime');\r\n  const timeElapsed = lastClearTime ? (new Date().getTime() - lastClearTime) / (1000 * 60 * 60) : Infinity;\r\n\r\n  // If clearing manually or the time threshold has been reached, clear the cache\r\n  if (isManual || timeElapsed >= thresholdHours) {\r\n    localStorage.removeItem('fetchedUsers');\r\n    // fetchedUsers = {};\r\n    Object.keys(fetchedUsers).forEach(key => delete fetchedUsers[key]);\r\n    // Reset the timer by updating 'lastClearTime' and 'nextClearTime'\r\n    const nextClearTime = new Date().getTime() + thresholdHours * 60 * 60 * 1000;\r\n    localStorage.setItem('lastClearTime', new Date().getTime().toString());\r\n    localStorage.setItem('nextClearTime', nextClearTime.toString());\r\n  }\r\n}\r\n\r\nfunction updateRemainingTime() {\r\n  const lastClearTime = localStorage.getItem('lastClearTime');\r\n  const nextClearTime = localStorage.getItem('nextClearTime');\r\n  const dropTimeExpiration = document.querySelector('.drop-time-expiration');\r\n  if (lastClearTime && nextClearTime && dropTimeExpiration) {\r\n    const remainingTime = nextClearTime - Date.now();\r\n    if (remainingTime <= 0) {\r\n      refreshFetchedUsers(true, cacheRefreshThresholdHours);\r\n    } else {\r\n      updateDropTimeExpiration(dropTimeExpiration, remainingTime);\r\n    }\r\n  }\r\n}\r\n\r\nconst emojiMap = { 0: '🕛', 5: '🕐', 10: '🕑', 15: '🕒', 20: '🕓', 25: '🕔', 30: '🕕', 35: '🕖', 40: '🕗', 45: '🕘', 50: '🕙', 55: '🕚' };\r\nfunction updateDropTimeExpiration(dropTimeExpiration, remainingTime) {\r\n  const hours = String(Math.floor(remainingTime / 3600000)).padStart(2, '0');\r\n  const minutes = String(Math.floor((remainingTime % 3600000) / 60000)).padStart(2, '0');\r\n  const seconds = String(Math.floor((remainingTime % 60000) / 1000)).padStart(2, '0');\r\n  const nextInterval = Math.ceil(parseInt(seconds) / 5) * 5;\r\n  dropTimeExpiration.textContent = `${hours}:${minutes}:${seconds} ${emojiMap[nextInterval] || emojiMap[0]}`;\r\n}\r\n\r\nfunction createCacheButton(panel) {\r\n  const showUserListCacheButton = document.createElement('div');\r\n  showUserListCacheButton.classList.add('empowerment-button', 'cache-panel-load-button');\r\n  showUserListCacheButton.style.position = 'relative';\r\n  showUserListCacheButton.style.zIndex = '3';\r\n  showUserListCacheButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_2__.userlistCacheSVG;\r\n\r\n  const cacheUserCount = document.createElement('div');\r\n  cacheUserCount.className = 'cache-user-count';\r\n  cacheUserCount.textContent = Object.keys(JSON.parse(localStorage.getItem('fetchedUsers')) || {}).length;\r\n  showUserListCacheButton.appendChild(cacheUserCount);\r\n\r\n  // Replace with custom tooltip\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_1__.createCustomTooltip)(showUserListCacheButton, {\r\n    en: 'Open Cache',\r\n    ru: 'Открыть кэш'\r\n  });\r\n  showUserListCacheButton.addEventListener('click', () => {\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_3__.addPulseEffect)(showUserListCacheButton);\r\n    (0,_cache_js__WEBPACK_IMPORTED_MODULE_4__.showCachePanel)();\r\n  });\r\n\r\n  panel.appendChild(showUserListCacheButton);\r\n}\r\n\r\nfunction updateUserCountText() {\r\n  const userCountElement = document.querySelector('.cache-panel-load-button .cache-user-count');\r\n  if (!userCountElement) return;\r\n  const newUserCount = Object.keys(JSON.parse(localStorage.getItem('fetchedUsers')) || {}).length.toString();\r\n  if (newUserCount !== userCountElement.textContent) {\r\n    userCountElement.textContent = newUserCount;\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_3__.addPulseEffect)(userCountElement);\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cacheHelpers.js?");

/***/ }),

/***/ "./src/panels/cache/cacheSearch.js":
/*!*****************************************!*\
  !*** ./src/panels/cache/cacheSearch.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDescription: () => (/* binding */ createDescription),\n/* harmony export */   createUserContainer: () => (/* binding */ createUserContainer),\n/* harmony export */   handleSearch: () => (/* binding */ handleSearch)\n/* harmony export */ });\n/* harmony import */ var _helpers_apiData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/apiData.js */ \"./src/helpers/apiData.js\");\n/* harmony import */ var _helpers_userProfileData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/userProfileData.js */ \"./src/helpers/userProfileData.js\");\n/* harmony import */ var _cacheUserElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cacheUserElement.js */ \"./src/panels/cache/cacheUserElement.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\n\r\n\r\nconst lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentLanguage)();\r\n\r\n/**\r\n * Creates a user container element with the specified type\r\n * @param {string} type - The type of container ('old', 'new', or 'search')\r\n * @returns {HTMLElement} The created container element\r\n */\r\nfunction createUserContainer(type) {\r\n  const userContainer = document.createElement('div');\r\n  if (type === 'old') {\r\n    userContainer.className = 'users-container old-users';\r\n  } else if (type === 'new') {\r\n    userContainer.className = 'users-container new-users';\r\n  } else if (type === 'search') {\r\n    userContainer.className = 'users-container search-results';\r\n  }\r\n  return userContainer;\r\n}\r\n/**\r\n * Creates a description element with specified text and class\r\n * @param {string} text - The description text\r\n * @param {string} className - The CSS class name\r\n * @returns {HTMLElement} The created description element\r\n */\r\nfunction createDescription(text, className) {\r\n  const description = document.createElement('span');\r\n  description.className = `description ${className}`;\r\n  description.textContent = text;\r\n  return description;\r\n}\r\n/**\r\n * Handles user search functionality\r\n * @param {string} username - The username to search for\r\n * @param {Function} createCachePanelUserElementFn - Function to create user elements\r\n * @returns {Promise<void>}\r\n */\r\nasync function handleSearch(username, createCachePanelUserElementFn = _cacheUserElement_js__WEBPACK_IMPORTED_MODULE_2__.createCachePanelUserElement) {\r\n  const oldUsersContainer = document.querySelector('.old-users');\r\n  const newUsersContainer = document.querySelector('.new-users');\r\n  const fetchedUsersContainer = document.querySelector('.fetched-users');\r\n  if (username) {\r\n    oldUsersContainer.style.display = 'none';\r\n    newUsersContainer.style.display = 'none';\r\n    let searchResultsContainer = document.querySelector('.search-results') || createUserContainer('search');\r\n    if (!searchResultsContainer.parentElement) fetchedUsersContainer.appendChild(searchResultsContainer);\r\n    searchResultsContainer.replaceChildren();\r\n    const userElements = [];\r\n    try {\r\n      const userIds = await (0,_helpers_apiData_js__WEBPACK_IMPORTED_MODULE_0__.getAllUserIDsByName)(username);\r\n      await Promise.all(userIds.map(async (userId) => {\r\n        const profileData = await (0,_helpers_userProfileData_js__WEBPACK_IMPORTED_MODULE_1__.getUserProfileData)(userId, false);\r\n        const userData = {\r\n          rank: profileData.rank,\r\n          login: profileData.login,\r\n          registered: profileData.registeredDate,\r\n          bestSpeed: profileData.bestSpeed,\r\n          ratingLevel: profileData.ratingLevel,\r\n          friends: profileData.friends,\r\n          cars: profileData.cars,\r\n          avatarTimestamp: profileData.avatarTimestamp,\r\n          avatar: profileData.avatar\r\n        };\r\n        const userElementData = createCachePanelUserElementFn(userId, userData);\r\n        if (userElementData) userElements.push(userElementData);\r\n      }));\r\n      userElements.sort((a, b) => a.sortData.order !== b.sortData.order\r\n        ? a.sortData.order - b.sortData.order\r\n        : b.sortData.bestSpeed - a.sortData.bestSpeed);\r\n\r\n      // Add search info as first element\r\n      const searchText = lang === 'ru' ? 'Результаты поиска для:' : 'Search Results for:';\r\n      let searchInfo = document.querySelector('.search-results-info');\r\n      if (searchInfo) {\r\n        searchInfo.textContent = `${searchText} ${username}`;\r\n      } else {\r\n        searchInfo = document.createElement('div');\r\n        searchInfo.className = 'search-results-info';\r\n        searchInfo.textContent = `${searchText} ${username}`;\r\n      }\r\n      searchResultsContainer.appendChild(searchInfo);\r\n\r\n      // Then add all user elements\r\n      userElements.forEach(({ userElement }) => searchResultsContainer.appendChild(userElement));\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      const errorMessage = document.createElement('div');\r\n      errorMessage.className = 'error-message-info';\r\n      errorMessage.textContent = `Error: ${error.message}`;\r\n      searchResultsContainer.appendChild(errorMessage);\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cacheSearch.js?");

/***/ }),

/***/ "./src/panels/cache/cacheSort.js":
/*!***************************************!*\
  !*** ./src/panels/cache/cacheSort.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSortButtons: () => (/* binding */ createSortButtons)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\nconst sortIcons = {\r\n  online: '✅',\r\n  offline: '🛑',\r\n  rankSpeed: '🚀',\r\n  ratingLevel: '⭐',\r\n  carsCount: '🚖',\r\n  friendsCount: '🤝',\r\n  visitsCount: '👁️',\r\n  alpha: '🅰️',\r\n  registered: '📅'\r\n};\r\n\r\nfunction getSortFunction(sortMode) {\r\n  return (a, b) => {\r\n    if (sortMode === 'online') {\r\n      if (a.sortData.isOnline && !b.sortData.isOnline) return -1;\r\n      if (!a.sortData.isOnline && b.sortData.isOnline) return 1;\r\n    } else if (sortMode === 'offline') {\r\n      if (!a.sortData.isOnline && b.sortData.isOnline) return -1;\r\n      if (a.sortData.isOnline && !b.sortData.isOnline) return 1;\r\n    } else if (sortMode === 'ratingLevel') {\r\n      if (a.sortData.ratingLevel !== b.sortData.ratingLevel) return b.sortData.ratingLevel - a.sortData.ratingLevel;\r\n    } else if (sortMode === 'carsCount') {\r\n      if (a.sortData.cars !== b.sortData.cars) return b.sortData.cars - a.sortData.cars;\r\n    } else if (sortMode === 'friendsCount') {\r\n      if (a.sortData.friends !== b.sortData.friends) return b.sortData.friends - a.sortData.friends;\r\n    } else if (sortMode === 'visitsCount') {\r\n      if (a.sortData.visits !== b.sortData.visits) return b.sortData.visits - a.sortData.visits;\r\n    } else if (sortMode === 'alpha') {\r\n      // Cyrillic first, then Latin, both alphabetically\r\n      const getAlphaType = (str) => {\r\n        if (/^[\\u0400-\\u04FF]/.test(str)) return 0; // Cyrillic\r\n        if (/^[A-Za-z]/.test(str)) return 1; // Latin\r\n        return 2; // Other\r\n      };\r\n      const aType = getAlphaType(a.userElement.querySelector('.login')?.textContent || '');\r\n      const bType = getAlphaType(b.userElement.querySelector('.login')?.textContent || '');\r\n      if (aType !== bType) return aType - bType;\r\n      const aLogin = (a.userElement.querySelector('.login')?.textContent || '').toLocaleLowerCase();\r\n      const bLogin = (b.userElement.querySelector('.login')?.textContent || '').toLocaleLowerCase();\r\n      return aLogin.localeCompare(bLogin);\r\n    } else if (sortMode === 'registered') {\r\n      // Sort by registration date (oldest first)\r\n      const aReg = new Date(a.registered);\r\n      const bReg = new Date(b.registered);\r\n      return aReg - bReg;\r\n    }\r\n    if (a.sortData.order !== b.sortData.order) return a.sortData.order - b.sortData.order;\r\n    return b.sortData.bestSpeed - a.sortData.bestSpeed;\r\n  };\r\n}\r\n\r\nfunction createSortButtons(\r\n  userElements,\r\n  oldUsersContainer,\r\n  newUsersContainer,\r\n  isNewUser,\r\n  oldUsersDescription,\r\n  newUsersDescription\r\n) {\r\n  let currentSortMode = 'rankSpeed';\r\n  let currentSortButton = null;\r\n\r\n  const sortButtonsContainer = document.createElement('div');\r\n  sortButtonsContainer.className = 'sort-buttons-container';\r\n\r\n  const sortModes = [\r\n    'online', 'offline', 'rankSpeed', 'ratingLevel', 'carsCount',\r\n    'friendsCount', 'visitsCount', 'alpha', 'registered'\r\n  ];\r\n\r\n  sortModes.forEach(modeKey => {\r\n    const button = document.createElement('button');\r\n    button.className = `sort-button ${modeKey}`;\r\n    button.textContent = sortIcons[modeKey];\r\n    button.dataset.mode = modeKey;\r\n    button.addEventListener('click', () => {\r\n      if ((modeKey === 'online' || modeKey === 'offline')) {\r\n        const anyWaiting = userElements.some(u => u.userElement.querySelector('.present-marker.waiting'));\r\n        if (anyWaiting) {\r\n          (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.localizedMessage)({\r\n            en: 'Some user statuses are still loading.',\r\n            ru: 'Статусы некоторых пользователей ещё загружаются.'\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      if (currentSortButton) currentSortButton.classList.remove('active');\r\n      button.classList.add('active');\r\n      currentSortButton = button;\r\n      currentSortMode = modeKey;\r\n      sortAndAppendUsers();\r\n    });\r\n    if (modeKey === currentSortMode) {\r\n      button.classList.add('active');\r\n      currentSortButton = button;\r\n    }\r\n    sortButtonsContainer.appendChild(button);\r\n  });\r\n\r\n  function sortAndAppendUsers() {\r\n    userElements.sort(getSortFunction(currentSortMode));\r\n    oldUsersContainer.replaceChildren();\r\n    newUsersContainer.replaceChildren();\r\n\r\n    // Re-append descriptions before user elements\r\n    oldUsersContainer.appendChild(oldUsersDescription);\r\n    newUsersContainer.appendChild(newUsersDescription);\r\n\r\n    userElements.forEach(({ userElement, registered }) => {\r\n      (isNewUser(registered) ? newUsersContainer : oldUsersContainer).appendChild(userElement);\r\n    });\r\n  }\r\n\r\n  sortAndAppendUsers();\r\n\r\n  return sortButtonsContainer;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cacheSort.js?");

/***/ }),

/***/ "./src/panels/cache/cacheUserElement.js":
/*!**********************************************!*\
  !*** ./src/panels/cache/cacheUserElement.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCachePanelUserElement: () => (/* binding */ createCachePanelUserElement)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_apiData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/apiData.js */ \"./src/helpers/apiData.js\");\n/* harmony import */ var _cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cacheHelpers.js */ \"./src/panels/cache/cacheHelpers.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a user element for the cache panel\r\n * @param {string} userId - The user ID\r\n * @param {Object} userData - The user data object\r\n * @returns {Object} Object containing userElement, sortData, and registered date\r\n */\r\nfunction createCachePanelUserElement(userId, userData) {\r\n  const userElement = document.createElement('div');\r\n  userElement.className = 'user-item';\r\n\r\n  const avatarElement = document.createElement('div');\r\n  avatarElement.className = 'avatar';\r\n  const avatarTimestamp = userData.avatarTimestamp;\r\n  const bigAvatarUrl = `/storage/avatars/${userId}_big.png`;\r\n  if ((avatarTimestamp && avatarTimestamp !== '00') || (userData.avatar && Object.keys(userData.avatar).length)) {\r\n    const imgElement = document.createElement('img');\r\n    imgElement.src = `${bigAvatarUrl}?updated=${avatarTimestamp}`;\r\n    imgElement.alt = `${userData.login}'s avatar`;\r\n    imgElement.style.objectFit = 'cover';\r\n    avatarElement.appendChild(imgElement);\r\n  } else {\r\n    avatarElement.innerHTML = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getRandomEmojiAvatar)();\r\n  }\r\n\r\n  const userDataElement = document.createElement('div');\r\n  userDataElement.className = 'user-data';\r\n\r\n  const loginContainer = document.createElement('div');\r\n  loginContainer.className = 'login-container';\r\n\r\n  const presentMarker = document.createElement('span');\r\n  // Define marker first as gray\r\n  presentMarker.className = 'present-marker waiting';\r\n\r\n  const sortData = {\r\n    isOnline: null,\r\n    ratingLevel: userData.ratingLevel,\r\n    cars: userData.cars,\r\n    friends: userData.friends,\r\n    bestSpeed: userData.bestSpeed || 0,\r\n    order: _definitions_js__WEBPACK_IMPORTED_MODULE_3__.rankOrder[userData.rank] || 10,\r\n    visits: userData.visits !== undefined ? userData.visits : 0\r\n  };\r\n\r\n  if (typeof _helpers_apiData_js__WEBPACK_IMPORTED_MODULE_1__.getDataById === 'function') {\r\n    (0,_helpers_apiData_js__WEBPACK_IMPORTED_MODULE_1__.getDataById)(userId, 'isOnline').then(isOnline => {\r\n      presentMarker.classList.remove('waiting');\r\n      presentMarker.className = `present-marker ${isOnline ? 'online' : 'offline'}`;\r\n      sortData.isOnline = isOnline;\r\n    }).catch(() => {\r\n      console.error(`Failed to fetch online status for user ${userId}`);\r\n      presentMarker.classList.remove('waiting');\r\n      presentMarker.className = 'present-marker offline';\r\n      sortData.isOnline = false;\r\n    });\r\n  }\r\n\r\n  loginContainer.appendChild(presentMarker);\r\n\r\n  const loginElement = document.createElement('a');\r\n  loginElement.className = 'login';\r\n  loginElement.textContent = userData.login;\r\n  loginElement.href = `https://klavogonki.ru/profile/${userId}`;\r\n\r\n  loginContainer.appendChild(loginElement);\r\n\r\n  if (userData.visits !== undefined) {\r\n    const visitsElement = document.createElement('span');\r\n    visitsElement.className = `visits ${userData.tracked ? 'tracked' : 'untracked'}`;\r\n    visitsElement.textContent = userData.visits;\r\n    visitsElement.dataset.userId = userId;\r\n    (0,_cacheHelpers_js__WEBPACK_IMPORTED_MODULE_2__.updateVisitsEmoticon)(visitsElement);\r\n    loginContainer.appendChild(visitsElement);\r\n  }\r\n\r\n  userDataElement.appendChild(loginContainer);\r\n\r\n  const rankElement = document.createElement('div');\r\n  rankElement.className = 'rank';\r\n  rankElement.textContent = userData.rank || 'N/A';\r\n  rankElement.style.color = _definitions_js__WEBPACK_IMPORTED_MODULE_3__.rankColors[userData.rank] || 'white';\r\n  userDataElement.appendChild(rankElement);\r\n\r\n  const registeredElement = document.createElement('div');\r\n  registeredElement.className = 'registered';\r\n  registeredElement.textContent = userData.registered || 'N/A';\r\n  userDataElement.appendChild(registeredElement);\r\n\r\n  const createMetricElement = (className, color, icon, value, title, url) => {\r\n    const element = document.createElement('span');\r\n    element.className = className;\r\n    element.style.color = color;\r\n    element.innerHTML = `${icon}${value || 0}`;\r\n    element.style.cursor = 'pointer';\r\n    element.dataset.url = url;\r\n    return element;\r\n  };\r\n\r\n  const userMetrics = document.createElement('div');\r\n  userMetrics.className = \"user-metrics\";\r\n  userMetrics.append(\r\n    createMetricElement(\r\n      'best-speed',\r\n      'cyan',\r\n      '🚀',\r\n      userData.bestSpeed,\r\n      'Best speed',\r\n      `https://klavogonki.ru/u/#/${userId}/stats/normal/`\r\n    ),\r\n\r\n    createMetricElement(\r\n      'rating-level',\r\n      'gold',\r\n      '⭐',\r\n      userData.ratingLevel,\r\n      'Rating level',\r\n      `https://klavogonki.ru/top/rating/today?s=${userData.login}`\r\n    ),\r\n\r\n    createMetricElement(\r\n      'cars-count',\r\n      'lightblue',\r\n      '🚖',\r\n      userData.cars,\r\n      'Cars count',\r\n      `https://klavogonki.ru/u/#/${userId}/car/`\r\n    ),\r\n\r\n    createMetricElement(\r\n      'friends-count',\r\n      'lightgreen',\r\n      '🤝',\r\n      userData.friends,\r\n      'Friends count',\r\n      `https://klavogonki.ru/u/#/${userId}/friends/list/`\r\n    )\r\n  );\r\n\r\n  userElement.append(avatarElement, userDataElement, userMetrics);\r\n\r\n  return {\r\n    userElement,\r\n    sortData,\r\n    registered: userData.registered\r\n  };\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/cache/cacheUserElement.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogs.js":
/*!*****************************************!*\
  !*** ./src/panels/chatlogs/chatlogs.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createChatLogsButton: () => (/* binding */ createChatLogsButton),\n/* harmony export */   showChatLogsPanel: () => (/* binding */ showChatLogsPanel)\n/* harmony export */ });\n/* harmony import */ var _chatlogs_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chatlogs.scss */ \"./src/panels/chatlogs/chatlogs.scss\");\n/* harmony import */ var _converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../converters/imageConverter.js */ \"./src/converters/imageConverter.js\");\n/* harmony import */ var _converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../converters/videoConverter.js */ \"./src/converters/videoConverter.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _helpers_messagesFormatter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/messagesFormatter.js */ \"./src/helpers/messagesFormatter.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n/* harmony import */ var _helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/scrollButtons.js */ \"./src/helpers/scrollButtons.js\");\n/* harmony import */ var _helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/getLatestMessageData.js */ \"./src/helpers/getLatestMessageData.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _chatlogsParser_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./chatlogsParser.js */ \"./src/panels/chatlogs/chatlogsParser.js\");\n/* harmony import */ var _chatlogsToMessages_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./chatlogsToMessages.js */ \"./src/panels/chatlogs/chatlogsToMessages.js\");\n/* harmony import */ var _chatlogsMessages_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./chatlogsMessages.js */ \"./src/panels/chatlogs/chatlogsMessages.js\");\n/* harmony import */ var _chatlogsUserlist_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./chatlogsUserlist.js */ \"./src/panels/chatlogs/chatlogsUserlist.js\");\n/* harmony import */ var _helpers_colorUtils_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../helpers/colorUtils.js */ \"./src/helpers/colorUtils.js\");\n/* harmony import */ var _helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../helpers/messagesSearch.js */ \"./src/helpers/messagesSearch.js\");\n/* harmony import */ var _chatlogsLoader_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./chatlogsLoader.js */ \"./src/panels/chatlogs/chatlogsLoader.js\");\n/* harmony import */ var _chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./chatlogsHelpers.js */ \"./src/panels/chatlogs/chatlogsHelpers.js\");\n\r\n\r\n\r\n\r\n\r\n// icons\r\n\r\n\r\n\r\n\r\n\r\n// helpers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// definitions\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Define dynamic variables\r\nlet {\r\n  panelsEvents\r\n} = _definitions_js__WEBPACK_IMPORTED_MODULE_11__.state;\r\n\r\n// Function to create the button for opening chat logs\r\nfunction createChatLogsButton(panel) {\r\n  const showChatLogsButton = document.createElement('div');\r\n  showChatLogsButton.classList.add(\"empowerment-button\", \"chat-logs-button\");\r\n\r\n  showChatLogsButton.style.position = 'relative';\r\n  showChatLogsButton.style.zIndex = '1';\r\n  showChatLogsButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.chatLogsSVG; // Add icon\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(showChatLogsButton, {\r\n    en: 'Open Chat Logs',\r\n    ru: 'Открыть логи чата'\r\n  });\r\n\r\n  showChatLogsButton.addEventListener('click', async function () {\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_12__.addPulseEffect)(showChatLogsButton); // Add pulse effect\r\n    await showChatLogsPanel();\r\n  });\r\n\r\n  panel.appendChild(showChatLogsButton);\r\n}\r\n\r\n//   Function to display the chat logs panel\r\n// Load initially with default date or date given by personal messages panel with parameter date\r\nasync function showChatLogsPanel(personalMessagesDate) {\r\n  // Check if the panel already exists\r\n  const existingPanel = document.querySelector('.chat-logs-panel');\r\n  if (existingPanel) {\r\n    existingPanel.remove(); // Remove the settings panel\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerDimmingElement)('hide');\r\n    return; // Return immediately to prevent further execution\r\n  }\r\n\r\n  // Remove any previous panel before creating a new one\r\n  (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.removePreviousPanel)();\r\n\r\n  // Create a container div with class 'chat-logs-panel'\r\n  const chatLogsPanel = document.createElement('div');\r\n  chatLogsPanel.className = 'chat-logs-panel popup-panel';\r\n\r\n  // Create a container div for the panel header\r\n  const panelHeaderContainer = document.createElement('div');\r\n  panelHeaderContainer.className = 'panel-header';\r\n\r\n  // Create a container div with class 'panel-control-buttons'\r\n  const panelControlButtons = document.createElement('div');\r\n  panelControlButtons.className = 'panel-control-buttons';\r\n\r\n  // Create a container div for the search input\r\n  const chatlogsSearchContainer = document.createElement('div');\r\n  chatlogsSearchContainer.className = 'search-for-chatlogs-messages';\r\n\r\n  // Create the input field for searching users\r\n  const chatlogsSearchInput = document.createElement('input');\r\n  chatlogsSearchInput.className = 'chatlogs-search-input';\r\n  chatlogsSearchInput.type = 'text';\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(chatlogsSearchInput, {\r\n    en: ` \r\n      [Ctrl + Click] clear input and reset filtered items\r\n      [Valid date + Enter] load chat logs for the date in input field (e.g. 2023-10-01, 2023:10:01, 231001, 2310, 2310:01)\r\n      [Search by name]: name(, name2…); prefix: name (partial) or prefix:: name (exact), e.g. name: iv / name:: Ivan. Prefixes: user, username, nick, name, nickname.\r\n      [Search by word]: word(, or(\\\\/|) word2…); prefix: word (partial) or prefix:: word (exact), e.g. word: priv / word:: privet. Prefixes: msg, message, text, word, content.\r\n    `,\r\n    ru: ` \r\n      [Ctrl + Click] очистить поле и сбросить фильтр\r\n      [Корректная дата + Enter] загрузить чат-логи за выбранную дату (например, 2023-10-01, 2023:10:01, 231001, 2310, 2310:01)\r\n      [Поиск по имени]: имя(, имя2…); приставка: имя (неполное) или приставка:: имя (точное), напр. имя: ив / имя:: Иван. Приставки: пользователь, ник, имя, никнейм.\r\n      [Поиск по слову]: слово(. или(\\\\/|) слово2…); приставка: слово (неполное) или приставка:: слово (точное), напр. слово: прив / слово:: привет. Приставки: сообщение, текст, слово, контент.\r\n    `\r\n  });\r\n\r\n  // Append search input to the search container\r\n  chatlogsSearchContainer.appendChild(chatlogsSearchInput);\r\n  // Append the search container to the panel header container\r\n  panelHeaderContainer.appendChild(chatlogsSearchContainer);\r\n\r\n  // Add input event listener to filter items as the user types\r\n  chatlogsSearchInput.addEventListener('input', () => (0,_helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_19__.filterMessages)(chatlogsSearchInput.value));\r\n\r\n  // Clears the input when the left mouse button (LMB) is clicked while holding the Ctrl key\r\n  // Also updates the filtered items accordingly\r\n  chatlogsSearchInput.addEventListener('click', (event) => {\r\n    if (event.ctrlKey) {\r\n      chatlogsSearchInput.value = '';\r\n      // Call the function to update the filtered items based on the cleared input\r\n      (0,_helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_19__.filterMessages)(chatlogsSearchInput.value);\r\n    }\r\n  });\r\n\r\n  // Add keydown event listener to handle date format and validity check\r\n  chatlogsSearchInput.addEventListener('keydown', async (event) => {\r\n    const inputValue = chatlogsSearchInput.value;\r\n\r\n    if (event.key === 'Enter') {\r\n      let normalizedDate = inputValue;\r\n\r\n      // Handle 8-digit and 6-digit date formats\r\n      if (/^\\d{8}$/.test(inputValue)) {\r\n        normalizedDate = inputValue.length === 6 ? '20' + inputValue : inputValue;\r\n        normalizedDate = normalizedDate.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3');\r\n      } else if (/^\\d{6}$/.test(inputValue)) {\r\n        normalizedDate = '20' + inputValue.replace(/(\\d{2})(\\d{2})(\\d{2})/, '$1-$2-$3');\r\n      }\r\n\r\n      // Check if the normalized input matches either 'yyyy:mm:dd' or 'yyyy-mm-dd' format\r\n      const isValidFormat = /^\\d{2,4}[:\\-]\\d{2}[:\\-]\\d{2}$/.test(normalizedDate.replace(/:/g, '-'));\r\n\r\n      // Check if the normalized date is a valid date\r\n      const isValidDate = isValidFormat && !isNaN(new Date(normalizedDate.replace(/:/g, '-')).getTime());\r\n\r\n      if (isValidDate) {\r\n        await loadChatLogs(normalizedDate); // Load chat logs for the determined date\r\n        showDateInput(dateInput);\r\n      } else {\r\n        const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentLanguage)();\r\n        const alertMsg = lang === 'ru'\r\n          ? [\r\n            'Пожалуйста, введите корректную дату.',\r\n            '',\r\n            'Допустимые форматы:',\r\n            '1. гггг-мм-дд',\r\n            '2. гггг:мм:дд',\r\n            '3. гг-мм-дд',\r\n            '4. гг:мм:дд',\r\n            '5. ггггммдд',\r\n            '6. ггммдд',\r\n            ''\r\n          ].join('\\n')\r\n          : [\r\n            'Please enter a valid date.',\r\n            '',\r\n            'Valid formats include:',\r\n            '1. yyyy-mm-dd',\r\n            '2. yyyy:mm:dd',\r\n            '3. yy-mm-dd',\r\n            '4. yy:mm:dd',\r\n            '5. yyyymmdd',\r\n            '6. yymmdd',\r\n            ''\r\n          ].join('\\n');\r\n        alert(alertMsg);\r\n      }\r\n\r\n      // Clear the input value after processing the \"Enter\" key\r\n      chatlogsSearchInput.value = '';\r\n    }\r\n  });\r\n\r\n  // Focus on the search input using requestAnimationFrame\r\n  function focusOnSearchField() { requestAnimationFrame(function () { chatlogsSearchInput.focus(); }); } focusOnSearchField();\r\n\r\n  // Create a parse button in the panel header\r\n  const parseButton = document.createElement('div');\r\n  parseButton.className = 'large-button panel-header-parse-button';\r\n  parseButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.playSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(parseButton, {\r\n    en: `\r\n      [Click] to parse Chat Logs\r\n      [Ctrl + Click] to delete stored Chat Logs from IndexedDB\r\n    `,\r\n    ru: `\r\n      [Клик] спарсить логи чата\r\n      [Ctrl + Клик] удалить сохранённые логи из IndexedDB\r\n    `\r\n  });\r\n  (0,_chatlogsParser_js__WEBPACK_IMPORTED_MODULE_14__.setupChatLogsParser)(parseButton, chatLogsPanel);\r\n\r\n  panelControlButtons.appendChild(parseButton);\r\n\r\n  // Create a date input toggle with similar styles as the close button\r\n  const dateInputToggle = document.createElement('div');\r\n  dateInputToggle.className = \"large-button panel-header-date-button\";\r\n  dateInputToggle.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.calendarSVG;\r\n\r\n  // Function to toggle visibility of an element\r\n  function toggleDateInputVisibility(element) {\r\n    element.style.display = element.style.display === 'none' ? 'flex' : 'none';\r\n  }\r\n\r\n  // Function to show the date input if it is currently hidden\r\n  function showDateInput(element) {\r\n    if (element.style.display === 'none') element.style.display = 'flex';\r\n  }\r\n\r\n  // Toggle the visibility of the date input when the toggle is clicked\r\n  dateInputToggle.addEventListener('click', () => {\r\n    toggleDateInputVisibility(dateInput);\r\n  });\r\n\r\n  // Create the date input field\r\n  const dateInput = document.createElement('input');\r\n  dateInput.type = 'date';\r\n  dateInput.className = 'chatlogs-date-input';\r\n  dateInput.style.display = \"none\";\r\n\r\n  // Append the date button and input field to the control buttons container\r\n  panelControlButtons.appendChild(dateInputToggle);\r\n  panelControlButtons.appendChild(dateInput);\r\n\r\n  // Create a toggle mention messages component\r\n  const toggleMentionMessages = document.createElement('div');\r\n  toggleMentionMessages.className = \"large-button panel-header-toggle-mention-messages-button\";\r\n  // Set the inner HTML of the toggle component with a suitable SVG or text\r\n  toggleMentionMessages.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.personalMessagesSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(toggleMentionMessages, {\r\n    en: 'Toggle Mention Messages',\r\n    ru: 'Показать только упоминания'\r\n  });\r\n\r\n  // Add a click event listener to toggle the visibility of messages without mentions\r\n  toggleMentionMessages.addEventListener('click', async () => {\r\n    toggleMessagesVisibility('mention');\r\n  });\r\n\r\n  // Create a new div element for the toggle mention messages counter\r\n  const toggleMentionMessagesCounter = document.createElement('div');\r\n  // Assign a class name to the element\r\n  toggleMentionMessagesCounter.className = 'toggle-mention-messages-counter';\r\n  toggleMentionMessagesCounter.textContent = '0'; // Set as default value before assign\r\n\r\n  // Append the counter inside the toggleMentionMessages component\r\n  toggleMentionMessages.appendChild(toggleMentionMessagesCounter);\r\n  // Append the toggle mention messages component to the control panel\r\n  panelControlButtons.appendChild(toggleMentionMessages);\r\n\r\n  // Create a toggle media messages component\r\n  const toggleMediaMessages = document.createElement('div');\r\n  toggleMediaMessages.className = \"large-button panel-header-toggle-media-messages-button\";\r\n  // Set the inner HTML of the toggle component with a suitable SVG or text\r\n  toggleMediaMessages.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.mediaMessagesSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(toggleMediaMessages, {\r\n    en: 'Toggle Media Messages',\r\n    ru: 'Показать только медиа контент'\r\n  });\r\n  // Apply common styles to the component\r\n  // applyHeaderButtonStyles(toggleMediaMessages, 'darkslategray');\r\n\r\n  // Add a click event listener to toggle the visibility of media messages\r\n  toggleMediaMessages.addEventListener('click', async () => {\r\n    toggleMessagesVisibility('media');\r\n  });\r\n\r\n  // Create a new div element for the toggle media messages counter\r\n  const toggleMediaMessagesCounter = document.createElement('div');\r\n  // Assign a class name to the element\r\n  toggleMediaMessagesCounter.className = 'toggle-media-messages-counter';\r\n  toggleMediaMessagesCounter.textContent = '0'; // Set as default value before assign\r\n\r\n  // Append the counter inside the toggleMediaMessages component\r\n  toggleMediaMessages.appendChild(toggleMediaMessagesCounter);\r\n\r\n  // Append the toggle media messages component to the control panel\r\n  panelControlButtons.appendChild(toggleMediaMessages);\r\n\r\n  // Function to update the media and mention counters\r\n  function updateMediaAndMentionCounters() {\r\n    // Update the media counter\r\n    toggleMediaMessagesCounter.textContent = document.querySelectorAll('.chat-logs-container .media').length;\r\n    // Update the mention counter\r\n    toggleMentionMessagesCounter.textContent = document.querySelectorAll('.chat-logs-container .mention').length;\r\n  }\r\n\r\n  // Create a copy chatlogs button element\r\n  const copyChatLogsUrl = document.createElement('div');\r\n  copyChatLogsUrl.className = \"large-button panel-header-copy-button\";\r\n  copyChatLogsUrl.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.clipboardSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(copyChatLogsUrl, {\r\n    en: ` \r\n      [Click] to copy Chat Logs Url\r\n      [Ctrl + Click] to save Chat Logs with title\r\n      [Shift + Click] to show/hide saved Chat Logs\r\n      [Alt + Click] to copy Chat Logs in BBCode, Markdown, or Plain format\r\n      [Alt + Shift + Click] to save Chat Logs in BBCode, Markdown, or Plain format\r\n    `,\r\n    ru: ` \r\n      [Клик] скопировать ссылку на чат-логи\r\n      [Ctrl + Клик] сохранить чат-логи с заголовком\r\n      [Shift + Клик] показать/скрыть сохранённые чат-логи\r\n      [Alt + Клик] скопировать чат-логи в BBCode, Markdown или Plain\r\n      [Alt + Shift + Клик] сохранить чат-логи в BBCode, Markdown или Plain\r\n    `\r\n  });\r\n\r\n  // Function to create and populate chat log links\r\n  function createChatLogLinks(savedChatlogs, chatLogsLinksContainer) {\r\n    // Check if the container exists and return if not\r\n    if (!chatLogsLinksContainer) return;\r\n    // Clear the container before repopulating it\r\n    chatLogsLinksContainer.replaceChildren();\r\n\r\n    savedChatlogs.forEach(({ url, title }) => {\r\n      const date = (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.extractDateFromUrl)(url); // Extract date from URL\r\n\r\n      // Create the wrapper container for each link\r\n      const logWrapper = document.createElement('div');\r\n      logWrapper.classList.add('saved-chatlog-url-wrapper');\r\n\r\n      // Create the log link element\r\n      const logLink = document.createElement('a');\r\n      logLink.classList.add('saved-chatlog-url');\r\n      logLink.textContent = date; // Display the date\r\n      logLink.href = url; // Store the URL in the href attribute\r\n\r\n      // Create the title element\r\n      const logTitle = document.createElement('span');\r\n      logTitle.classList.add('saved-chatlog-url-title');\r\n      logTitle.textContent = title || '➕'; // Display the title (or an empty string if none provided)\r\n\r\n      // Append the elements to the wrapper\r\n      logWrapper.appendChild(logLink);\r\n      logWrapper.appendChild(logTitle);\r\n\r\n      // Append the wrapper to the container\r\n      chatLogsLinksContainer.appendChild(logWrapper);\r\n    });\r\n  }\r\n\r\n  // Add a click event listener to copy chatLogsUrlForCopy to the clipboard\r\n  copyChatLogsUrl.addEventListener('click', (event) => {\r\n    let chatLogsLinksContainer = document.querySelector('.saved-chatlog-container');\r\n\r\n    !chatLogsLinksContainer && !event.shiftKey && (0,_animations_js__WEBPACK_IMPORTED_MODULE_12__.addJumpEffect)(copyChatLogsUrl, 0, 0);\r\n\r\n    if (chatLogsLinksContainer && !event.ctrlKey && !chatLogsLinksContainer.contains(event.target)) {\r\n      chatLogsLinksContainer.remove();\r\n    }\r\n\r\n    let savedChatlogs = JSON.parse(localStorage.getItem('savedChatlogs')) || [];\r\n\r\n    // Prevent copy/save if there are no chatlogs loaded\r\n    const chatlogItems = document.querySelectorAll('.chat-logs-container .message-item');\r\n    if ((event.altKey || (event.altKey && event.shiftKey)) && chatlogItems.length === 0) {\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.localizedMessage)({\r\n        en: 'No chat logs to copy or save.',\r\n        ru: 'Нет чатлогов для копирования или сохранения.'\r\n      }, 'alert');\r\n      return;\r\n    }\r\n\r\n    // Handle export with Alt and Alt+Shift to copy or save chat logs\r\n    if (event.altKey) {\r\n      (0,_helpers_messagesFormatter_js__WEBPACK_IMPORTED_MODULE_4__.handleExportClick)(event, chatLogsContainer, {\r\n        date: dateInput.value || _definitions_js__WEBPACK_IMPORTED_MODULE_11__.today,\r\n        isMessagesPanel: false,\r\n        includeDateHeaders: true,\r\n        includeMessageLinks: true,\r\n        prefix: 'chatlogs',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (event.ctrlKey && !event.target.closest('.saved-chatlog-url')) {\r\n      const currentUrlDate = (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.extractDateFromUrl)(chatLogsUrlForCopy);\r\n      if (!currentUrlDate) return;\r\n\r\n      // Ask for title input\r\n      const title = prompt('Enter a title for this chat log:', '➕');\r\n\r\n      // Check if the URL with the same date already exists\r\n      const urlExists = savedChatlogs.some(log => (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.extractDateFromUrl)(log.url) === currentUrlDate);\r\n\r\n      if (!urlExists) {\r\n        // Add the new URL and title if no match was found for the date\r\n        savedChatlogs.push({ url: chatLogsUrlForCopy, title: title || '➕' });\r\n\r\n        // Sort the saved URLs based on the date extracted from the URL\r\n        savedChatlogs.sort((a, b) => {\r\n          const dateA = (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.extractDateFromUrl)(a.url);\r\n          const dateB = (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.extractDateFromUrl)(b.url);\r\n          return new Date(dateA) - new Date(dateB);\r\n        });\r\n\r\n        // Store the updated list back in localStorage\r\n        localStorage.setItem('savedChatlogs', JSON.stringify(savedChatlogs));\r\n      }\r\n      createChatLogLinks(savedChatlogs, chatLogsLinksContainer);\r\n    } else if (event.shiftKey) {\r\n      if (savedChatlogs.length > 0 && !chatLogsLinksContainer) {\r\n        chatLogsLinksContainer = document.createElement('div');\r\n        chatLogsLinksContainer.classList.add('saved-chatlog-container');\r\n        createChatLogLinks(savedChatlogs, chatLogsLinksContainer);\r\n\r\n        copyChatLogsUrl.appendChild(chatLogsLinksContainer);\r\n      }\r\n    } else {\r\n      navigator.clipboard.writeText(chatLogsUrlForCopy)\r\n        .catch(err => console.error('Failed to copy: ', err));\r\n    }\r\n  });\r\n\r\n  panelControlButtons.appendChild(copyChatLogsUrl);\r\n\r\n  // Retrieve `shouldShowActiveUsers` from localStorage or set it to 'shown' if it doesn't exist\r\n  const shouldShowActiveUsers = localStorage.getItem('shouldShowActiveUsers') || (localStorage.setItem('shouldShowActiveUsers', 'shown'), 'shown');\r\n\r\n  // Create a toggle active users button\r\n  const toggleActiveUsers = document.createElement('div');\r\n  toggleActiveUsers.className = \"large-button panel-header-toggle-button\";\r\n  updateActiveUsersToggle(shouldShowActiveUsers); // Set initial SVG based on stored state\r\n\r\n  // Function to update the toggle button's SVG and title based on current state\r\n  function updateActiveUsersToggle(state) {\r\n    toggleActiveUsers.innerHTML = state === 'shown' ? _icons_js__WEBPACK_IMPORTED_MODULE_3__.toggleLeftSVG : _icons_js__WEBPACK_IMPORTED_MODULE_3__.toggleRightSVG; // Toggle between SVGs\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(toggleActiveUsers, state === 'shown' ? {\r\n      en: 'Hide User List',\r\n      ru: 'Скрыть список пользователей'\r\n    } : {\r\n      en: 'Show User List',\r\n      ru: 'Показать список пользователей'\r\n    });\r\n  }\r\n\r\n  // Function to toggle active users and update localStorage, SVG, and title\r\n  function toggleActiveUsersState() {\r\n    const newState = localStorage.getItem('shouldShowActiveUsers') === 'shown' ? 'hidden' : 'shown'; // Determine new state\r\n    localStorage.setItem('shouldShowActiveUsers', newState); // Update localStorage\r\n    updateActiveUsersToggle(newState); // Update the displayed SVG and title\r\n\r\n    if (newState === 'shown') {\r\n      // Call renderActiveUsers to update the display of active users based on their message counts\r\n      (0,_chatlogsUserlist_js__WEBPACK_IMPORTED_MODULE_17__.renderActiveUsers)(usernameMessageCountMap, chatLogsPanel);\r\n    } else {\r\n      // Remove the active users container if the state is hidden\r\n      const activeUsersContainer = chatLogsPanel.querySelector('.active-users');\r\n      if (activeUsersContainer) {\r\n        chatLogsPanel.removeChild(activeUsersContainer);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add click event to toggle active users\r\n  toggleActiveUsers.addEventListener('click', toggleActiveUsersState);\r\n\r\n  // Append the toggle active users to the panel control buttons\r\n  panelControlButtons.appendChild(toggleActiveUsers);\r\n\r\n  // Create and style the chevron left button\r\n  const oneDayBackward = document.createElement('div');\r\n  oneDayBackward.className = \"large-button panel-header-one-day-back-button\";\r\n  oneDayBackward.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.chevronLeftSVG; // Assuming you have chevronLeftSVG defined\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(oneDayBackward, {\r\n    en: 'Previous Day',\r\n    ru: 'Предыдущий день'\r\n  });\r\n\r\n  // Create and style the chevron right button\r\n  const oneDayForward = document.createElement('div');\r\n  oneDayForward.className = \"large-button panel-header-one-day-forward-button\";\r\n  oneDayForward.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.chevronRightSVG; // Assuming you have chevronRightSVG defined\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(oneDayForward, {\r\n    en: 'Next Day',\r\n    ru: 'Следующий день'\r\n  });\r\n\r\n  // Create and style the shuffle button\r\n  const randomDay = document.createElement('div');\r\n  randomDay.className = \"large-button panel-header-shuffle-button\";\r\n  randomDay.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.shuffleSVG; // Assuming you have shuffleSVG defined\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(randomDay, {\r\n    en: 'Random Date',\r\n    ru: 'Случайная дата'\r\n  });\r\n\r\n  // Function to get current date or fallback to today's date\r\n  function getEffectiveDate() {\r\n    return dateInput.value ? new Date(dateInput.value) : new Date(); // Use dateInput value or today's date\r\n  }\r\n\r\n  // Function to update the date input and title\r\n  const updateDateTooltip = (newDate) => {\r\n    dateInput.value = newDate; // Update the date input\r\n    const tooltipContent = {\r\n      en: `Current date: ${newDate}`,\r\n      ru: `Текущая дата: ${newDate}`\r\n    };\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(dateInput, tooltipContent);\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(dateInputToggle, tooltipContent);\r\n  };\r\n\r\n  // Helper to perform auto search/filter and focus after day switch\r\n  function performAutoSearch() {\r\n    if (chatlogsSearchInput.value && chatlogsSearchInput.value.trim().length > 0) {\r\n      (0,_helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_19__.filterMessages)(chatlogsSearchInput.value);\r\n    }\r\n    showDateInput(dateInput);\r\n    focusOnSearchField();\r\n  }\r\n\r\n  // Event listener for the chevron left button\r\n  oneDayBackward.addEventListener('click', async () => {\r\n    const currentDate = getEffectiveDate(); // Get the effective date\r\n    currentDate.setDate(currentDate.getDate() - 1); // Go one day back\r\n    await loadChatLogs(currentDate, performAutoSearch);\r\n  });\r\n\r\n  // Event listener for the chevron right button\r\n  oneDayForward.addEventListener('click', async () => {\r\n    const currentDate = getEffectiveDate(); // Get the effective date\r\n    currentDate.setDate(currentDate.getDate() + 1); // Go one day forward\r\n    await loadChatLogs(currentDate, performAutoSearch);\r\n  });\r\n\r\n  // Event listener for the shuffle button (load today's logs after parsing done)\r\n  randomDay.addEventListener('click', async () => {\r\n    if (randomDay.dataset.mode === 'loadToday') {\r\n      await loadChatLogs(_definitions_js__WEBPACK_IMPORTED_MODULE_11__.today, () => {\r\n        performAutoSearch();\r\n        randomDay.dataset.mode = '';\r\n        randomDay.classList.remove('today');\r\n        randomDay.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.shuffleSVG;\r\n        (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(randomDay, {\r\n          en: 'Random Date',\r\n          ru: 'Случайная дата'\r\n        });\r\n      });\r\n    } else {\r\n      const randomDate = (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.getRandomDateInRange)();\r\n      await loadChatLogs(randomDate, () => {\r\n        performAutoSearch();\r\n      });\r\n    }\r\n  });\r\n\r\n  // Append buttons to the control buttons container\r\n  panelControlButtons.appendChild(oneDayBackward);\r\n  panelControlButtons.appendChild(oneDayForward);\r\n  panelControlButtons.appendChild(randomDay);\r\n\r\n  // Create a close button with the provided SVG icon\r\n  const closePanelButton = document.createElement('div');\r\n  closePanelButton.className = \"large-button panel-header-close-button\";\r\n  closePanelButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.closeSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(closePanelButton, {\r\n    en: 'Close panel',\r\n    ru: 'Закрыть панель'\r\n  });\r\n\r\n  // Add a click event listener to the close panel button\r\n  closePanelButton.addEventListener('click', () => {\r\n    // Fade out the chat logs panel when the close button is clicked\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerTargetElement)(chatLogsPanel, 'hide');\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerDimmingElement)('hide');\r\n  });\r\n\r\n  // Append close button to control buttons, and control buttons to header\r\n  panelControlButtons.appendChild(closePanelButton);\r\n  panelHeaderContainer.appendChild(panelControlButtons);\r\n\r\n  // Create a container for the chat logs\r\n  const chatLogsContainer = document.createElement('div');\r\n  chatLogsContainer.className = 'chat-logs-container messages-search-container';\r\n\r\n  // Append the header and chat logs container to the chat logs panel\r\n  chatLogsPanel.appendChild(panelHeaderContainer);\r\n  chatLogsPanel.appendChild(chatLogsContainer);\r\n\r\n  // Append the chat logs panel to the body\r\n  document.body.appendChild(chatLogsPanel);\r\n\r\n  // Create and append scroll buttons\r\n  const { scrollButtonsContainer } = (0,_helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_9__.createScrollButtons)(chatLogsContainer);\r\n  chatLogsPanel.appendChild(scrollButtonsContainer);\r\n\r\n  // Fade in the chat logs panel and dimming background\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerTargetElement)(chatLogsPanel, 'show');\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerDimmingElement)('show');\r\n\r\n  // Define an object to store the hue for each username\r\n  // Initialize a map to track message counts for unique usernames\r\n  const usernameMessageCountMap = new Map();\r\n  // Store the current chat logs URL for clipboard copy.\r\n  let chatLogsUrlForCopy = ''; // Store the current chat logs URL for copying\r\n\r\n  // Function to load the total message count into the placeholder without replacing the existing text\r\n  function loadTotalMessageCount() {\r\n    if (chatLogsContainer.childElementCount > 0) {\r\n      const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentLanguage)();\r\n      const totalMsgLabel = lang === 'ru' ? 'Всего сообщений' : 'Total messages';\r\n      chatlogsSearchInput.placeholder += ` | ${totalMsgLabel}: ${chatLogsContainer.childElementCount}`;\r\n    }\r\n  }\r\n\r\n  // Function to load and display chat logs into the container\r\n  const loadChatLogs = async (date, afterRenderCallback) => {\r\n    // Normalize date input to 'yyyy-mm-dd' format, supporting 'yyyy:mm:dd' format as well\r\n    const normalizeDate = date => /^\\d{4}:\\d{2}:\\d{2}$/.test(date) ? date.replace(/:/g, '-') : date;\r\n    // Normalize and format the date\r\n    const formattedDate = new Intl.DateTimeFormat('en-CA').format(new Date(normalizeDate(date)));\r\n\r\n    // Check if the provided date is out of bounds (less than minimalChatlogsDate or greater than today)\r\n    if (formattedDate < _definitions_js__WEBPACK_IMPORTED_MODULE_11__.minimalChatlogsDate || formattedDate > _definitions_js__WEBPACK_IMPORTED_MODULE_11__.today) {\r\n      const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentLanguage)();\r\n      const minDateMsg =\r\n        lang === 'ru'\r\n          ? `Выбранная дата не может быть раньше ${_definitions_js__WEBPACK_IMPORTED_MODULE_11__.minimalChatlogsDate}.`\r\n          : `The selected date cannot be earlier than ${_definitions_js__WEBPACK_IMPORTED_MODULE_11__.minimalChatlogsDate}.`;\r\n      const futureDateMsg =\r\n        lang === 'ru'\r\n          ? 'Вы не можете загрузить будущую дату.'\r\n          : 'You cannot load a future date.';\r\n      alert(\r\n        formattedDate < _definitions_js__WEBPACK_IMPORTED_MODULE_11__.minimalChatlogsDate\r\n          ? minDateMsg\r\n          : futureDateMsg\r\n      );\r\n      return; // Exit the function if the date is invalid\r\n    }\r\n\r\n    // Call the updateDateTooltip function with the formattedDate\r\n    updateDateTooltip(formattedDate);\r\n\r\n    // Fetch chat logs and pass the chatLogsContainer as the parent container\r\n    const { chatlogs, url, placeholder } = await (0,_chatlogsLoader_js__WEBPACK_IMPORTED_MODULE_20__.fetchChatLogs)(formattedDate, chatLogsContainer);\r\n\r\n    // Use the placeholder returned from fetchChatLogs (includes cache size info)\r\n    chatlogsSearchInput.placeholder = placeholder;\r\n\r\n    // Assign the fetched URL to the chatLogsUrlForCopy variable\r\n    chatLogsUrlForCopy = `${url}?rand=${_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.randomParam}`\r\n\r\n    // Clear previous counts\r\n    usernameMessageCountMap.clear();\r\n\r\n\r\n    // Ensure username colors/ids are loaded and cached before rendering\r\n    const allUsernames = [...new Set(chatlogs.map(e => e.username).filter(u => u && u !== 'SYSTEM'))];\r\n    await (0,_helpers_colorUtils_js__WEBPACK_IMPORTED_MODULE_18__.cacheUserData)(allUsernames);\r\n\r\n    // Use the renderer to render all messages and get the updated usernameMessageCountMap\r\n    const updatedMap = (0,_chatlogsMessages_js__WEBPACK_IMPORTED_MODULE_16__.renderChatMessages)(chatlogs, chatLogsContainer);\r\n    usernameMessageCountMap.clear();\r\n    for (const [k, v] of updatedMap.entries()) usernameMessageCountMap.set(k, v);\r\n\r\n    // Call renderActiveUsers to update the display of active users based on their message counts\r\n    (0,_chatlogsUserlist_js__WEBPACK_IMPORTED_MODULE_17__.renderActiveUsers)(usernameMessageCountMap, chatLogsPanel);\r\n\r\n    requestAnimationFrame(() => {\r\n      (0,_converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_1__.convertImageLinksToImage)('chatlogsMessages');\r\n      (0,_converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_2__.convertVideoLinksToPlayer)('chatlogsMessages');\r\n      (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__.processEncodedLinks)('chatlogsMessages'); // Decodes links within the chat logs section.\r\n      (0,_helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_10__.highlightMentionWords)('chatlogsMessages');\r\n\r\n      // Update the media and mention counters\r\n      updateMediaAndMentionCounters();\r\n      // Call the function to load the total message count once\r\n      loadTotalMessageCount();\r\n\r\n      // Apply current visibility settings without toggling\r\n      toggleMessagesVisibility(null, false);\r\n\r\n      // Call afterRenderCallback if provided (for post-render actions like filtering)\r\n      if (typeof afterRenderCallback === 'function') {\r\n        afterRenderCallback();\r\n      }\r\n      chatLogsContainer.scrollTop = chatLogsContainer.scrollHeight; // Scroll to the very bottom\r\n    });\r\n  }\r\n\r\n  // Load chat logs based on the provided date or default to today's date\r\n  const dateToLoad = personalMessagesDate || _definitions_js__WEBPACK_IMPORTED_MODULE_11__.today; // Use personalMessagesDate if available\r\n  await loadChatLogs(dateToLoad); // Load chat logs for the determined date\r\n  // Check if personalMessagesDate is given as parameter or null to show the date input field\r\n  if (personalMessagesDate) showDateInput(dateInput); // Show the date input field\r\n\r\n  // Set the max attribute to today's date\r\n  dateInput.max = _definitions_js__WEBPACK_IMPORTED_MODULE_11__.today; // Set the maximum value to today's date\r\n  // Set the min attribute to '2012-02-12'\r\n  dateInput.min = _definitions_js__WEBPACK_IMPORTED_MODULE_11__.minimalChatlogsDate; // Assign the minimum date\r\n  dateInput.value = dateToLoad; // Set the value to the date to load\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(dateInputToggle, {\r\n    en: `Current date: ${dateToLoad}`,\r\n    ru: `Текущая дата: ${dateToLoad}`\r\n  }); // Create a tooltip for the date input toggle\r\n\r\n  // Add an event listener for the date input change\r\n  dateInput.addEventListener('change', async (event) => {\r\n    const selectedDate = event.target.value; // Get the selected date\r\n    await loadChatLogs(selectedDate); // Load chat logs for the selected date\r\n    (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)(dateInputToggle, {\r\n      en: `Current date: ${selectedDate}`,\r\n      ru: `Текущая дата: ${selectedDate}`\r\n    }); // Update the tooltip with the selected date\r\n  });\r\n\r\n  // Define the event handler function for chat logs panel\r\n  panelsEvents.handleChatLogsKeydown = (event) => { // Assign the function to the object\r\n    if (event.key === 'Escape') {\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerTargetElement)(chatLogsPanel, 'hide');\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_7__.triggerDimmingElement)('hide');\r\n      document.removeEventListener('keydown', panelsEvents.handleChatLogsKeydown); // Remove the event listener\r\n    }\r\n  };\r\n\r\n  // Attach the event listener\r\n  document.addEventListener('keydown', panelsEvents.handleChatLogsKeydown);\r\n\r\n  // Delegated event listeners for all message actions in chatLogsContainer\r\n  chatLogsPanel.addEventListener('click', async (event) => {\r\n    if (event.target.closest('a')) return;\r\n    const messageItem = event.target.closest('.message-item');\r\n    const timeElement = event.target.closest('.message-time');\r\n    const usernameElement = event.target.closest('.message-username');\r\n    const messageTextElement = event.target.closest('.message-text');\r\n    if (messageItem || messageTextElement) {\r\n      // --- Ctrl+Click: Add to personal messages ---\r\n      if (event.ctrlKey && messageItem) {\r\n        (0,_chatlogsToMessages_js__WEBPACK_IMPORTED_MODULE_15__.addChatlogsMessageToPersonal)(messageItem, dateInput);\r\n        return;\r\n      }\r\n      resetMessagesVisibility();\r\n      if (timeElement) {\r\n        let date = dateInput.value;\r\n        const time = timeElement.textContent;\r\n        // Always try to find the nearest previous .date-item for the correct date\r\n        let dateItem = timeElement.closest('.chat-logs-container');\r\n        if (dateItem) {\r\n          let prev = timeElement.parentElement;\r\n          while (prev && !prev.classList.contains('date-item')) {\r\n            prev = prev.previousElementSibling;\r\n          }\r\n          if (prev && prev.classList.contains('date-item')) {\r\n            // Use only the text content of the .date-text child, not the whole .date-item\r\n            const dateText = prev.querySelector('.date-text');\r\n            if (dateText) {\r\n              date = dateText.textContent.trim();\r\n            } else {\r\n              date = prev.textContent.trim();\r\n            }\r\n          }\r\n        }\r\n        if (event.shiftKey) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.copyChatlogsUrlToClipboard)(date, time, timeElement);\r\n          return;\r\n        }\r\n        const url = `https://klavogonki.ru/chatlogs/${date}.html#${time}`;\r\n        window.open(url, '_blank', 'noopener,noreferrer');\r\n        return;\r\n      }\r\n      if (usernameElement) {\r\n        const username = usernameElement.textContent;\r\n        const userId = await (0,_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_21__.getUserId)(username);\r\n        if (userId) {\r\n          const url = `https://klavogonki.ru/u/#/${userId}/`;\r\n          window.open(url, '_blank', 'noopener,noreferrer');\r\n        } else {\r\n          (0,_animations_js__WEBPACK_IMPORTED_MODULE_12__.addShakeEffect)(usernameElement);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Default: scroll to middle on message item click\r\n      requestAnimationFrame(async () => {\r\n        await (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_8__.scrollToMiddle)(chatLogsContainer, messageItem);\r\n      });\r\n    }\r\n  });\r\n\r\n  // Create custom tooltips for message time elements\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)('.message-time', chatLogsPanel, (el) => ({\r\n    en: ` \r\n      [Click] Open chatlog at ${el.textContent}\r\n      [Shift + Click] Copy chatlogs URL to clipboard\r\n    `,\r\n    ru: ` \r\n      [Клик] открыть чатлог на ${el.textContent}\r\n      [Shift + Клик] скопировать ссылку на чатлог\r\n   `\r\n  }), true);\r\n\r\n  // Create custom tooltips for username elements\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)('.message-username', chatLogsPanel, (el) => ({\r\n    en: `[Click] Open ${el.textContent} profile`,\r\n    ru: `[Клик] открыть профиль ${el.textContent}`\r\n  }), true);\r\n\r\n  // Create custom tooltips for message text elements\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)('.message-text', chatLogsPanel, (el) => ({\r\n    en: `\r\n      [Click] Scroll message to the middle of the chat logs\r\n      [Ctrl + Click] add message to the messages panel  \r\n    `,\r\n    ru: `\r\n      [Клик] прокрутить сообщение к центру чатлога\r\n      [Ctrl + Клик] добавить сообщение в панель сообщений\r\n    `\r\n  }), true);\r\n\r\n  // Delegated event listeners for active users\r\n  chatLogsPanel.addEventListener('click', (event) => {\r\n    const userElement = event.target.closest('.active-user-item');\r\n    if (userElement) {\r\n      const nicknameElement = userElement.querySelector('.active-user-name');\r\n      const username = nicknameElement?.textContent;\r\n      if (!username) return;\r\n      const currentValue = chatlogsSearchInput.value.trim();\r\n      const usernameEntry = event.ctrlKey ? `, ${username}` : username;\r\n      chatlogsSearchInput.value = (currentValue === username)\r\n        ? ''\r\n        : (event.ctrlKey && !currentValue.includes(username))\r\n          ? currentValue + usernameEntry\r\n          : username;\r\n      (0,_helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_19__.filterMessages)(chatlogsSearchInput.value);\r\n    }\r\n  });\r\n\r\n  // Create custom tooltips for active user names in the active users list\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)('.active-user-name', chatLogsPanel, (el) => ({\r\n    en: `\r\n      [Click] to filter messages by ${el.textContent}\r\n      [Repeat Click] to clear ${el.textContent} from the search input\r\n      [Ctrl + Click] to add additional username to the search input\r\n    `,\r\n    ru: ` \r\n      [Клик] фильтровать сообщения по ${el.textContent}\r\n      [Повторный клик] убрать ${el.textContent} из поиска\r\n      [Ctrl + Клик] добавить пользователя к поиску\r\n    `\r\n  }), true);\r\n\r\n  // Delegation-based custom tooltip for saved chatlog links\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)('.saved-chatlog-url', chatLogsPanel, (el) => ({\r\n    en: `\r\n      [Click] Load chat logs for ${el.textContent}\r\n      [Ctrl + Click] Remove this saved chat log\r\n      [Middle Click]Open in new tab\r\n    `,\r\n    ru: `\r\n      [Клик] загрузить чат - логи за ${el.textContent}\r\n      [Ctrl + Клик] удалить сохранённый чатлог\r\n      [Средний клик] открыть в новой вкладке\r\n    `\r\n  }), true);\r\n\r\n  // Delegation-based custom tooltip for saved chatlog titles\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_13__.createCustomTooltip)('.saved-chatlog-url-title', chatLogsPanel, (el) => ({\r\n    en: `[Click] Edit title for this chat log`,\r\n    ru: `[Клик] изменить заголовок для этого чатлога`\r\n  }), true);\r\n\r\n  // Delegation-based click event for saved chatlog links and titles\r\n  chatLogsPanel.addEventListener('click', async (event) => {\r\n    // Saved chatlog link (date)\r\n    const savedLink = event.target.closest('.saved-chatlog-url');\r\n    if (savedLink) {\r\n      event.preventDefault();\r\n      let savedChatlogs = JSON.parse(localStorage.getItem('savedChatlogs')) || [];\r\n      if (event.ctrlKey) {\r\n        const urlToRemove = savedLink.href;\r\n        // Remove from savedChatlogs\r\n        const updatedChatlogs = savedChatlogs.filter(log => log.url !== urlToRemove);\r\n        if (updatedChatlogs.length !== savedChatlogs.length) {\r\n          savedChatlogs = updatedChatlogs;\r\n          localStorage.setItem('savedChatlogs', JSON.stringify(savedChatlogs));\r\n          const wrapper = savedLink.closest('.saved-chatlog-url-wrapper');\r\n          if (wrapper) wrapper.remove();\r\n        }\r\n      } else if (event.button === 1) {\r\n        // Middle click: open in new tab\r\n        window.open(savedLink.href, '_blank', 'noopener,noreferrer');\r\n      } else {\r\n        // Normal click: load chat logs for this date\r\n        const date = savedLink.textContent;\r\n        await loadChatLogs(date);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Saved chatlog title\r\n    const savedTitle = event.target.closest('.saved-chatlog-url-title');\r\n    if (savedTitle) {\r\n      let savedChatlogs = JSON.parse(localStorage.getItem('savedChatlogs')) || [];\r\n      const wrapper = savedTitle.closest('.saved-chatlog-url-wrapper');\r\n      const link = wrapper && wrapper.querySelector('.saved-chatlog-url');\r\n      if (!link) return;\r\n      const url = link.href;\r\n      const newTitle = prompt('Enter a new title for this chat log:', savedTitle.textContent);\r\n      if (newTitle !== null && newTitle !== savedTitle.textContent) {\r\n        savedTitle.textContent = newTitle;\r\n        const logIndex = savedChatlogs.findIndex(log => log.url === url);\r\n        if (logIndex !== -1) {\r\n          savedChatlogs[logIndex].title = newTitle;\r\n          localStorage.setItem('savedChatlogs', JSON.stringify(savedChatlogs));\r\n        }\r\n      }\r\n      return;\r\n    }\r\n  });\r\n\r\n  // Panel-local state for message visibility\r\n  let visibleMessages = { media: false, mention: false };\r\n\r\n  // Toggle or apply visibility of messages using direct references\r\n  function toggleMessagesVisibility(selector, toggle = true) {\r\n    if (toggle && selector) {\r\n      const isMedia = selector === 'media';\r\n      const isMention = selector === 'mention';\r\n      visibleMessages = {\r\n        media: isMedia ? !visibleMessages.media : false,\r\n        mention: isMention ? !visibleMessages.mention : false\r\n      };\r\n    }\r\n    // Apply visibility based on current visibleMessages state\r\n    chatLogsContainer.querySelectorAll('.message-item').forEach(item => {\r\n      const hasMediaClass = item.querySelector('.media');\r\n      const hasMentionClass = item.querySelector('.mention');\r\n      if (visibleMessages.media) {\r\n        item.classList.toggle('hidden-message', !hasMediaClass);\r\n      } else if (visibleMessages.mention) {\r\n        item.classList.toggle('hidden-message', !hasMentionClass);\r\n      } else {\r\n        item.classList.remove('hidden-message');\r\n      }\r\n    });\r\n    // Update toggle button active states using direct references\r\n    toggleMentionMessages.classList.toggle('active', visibleMessages.mention);\r\n    toggleMediaMessages.classList.toggle('active', visibleMessages.media);\r\n  }\r\n\r\n  // Reset all filters and reveal all messages using direct references\r\n  function resetMessagesVisibility() {\r\n    visibleMessages = { media: false, mention: false };\r\n    toggleMentionMessages.classList.remove('active');\r\n    toggleMediaMessages.classList.remove('active');\r\n    chatlogsSearchInput.value = '';\r\n    (0,_helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_19__.filterMessages)('');\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogs.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogs.scss":
/*!*******************************************!*\
  !*** ./src/panels/chatlogs/chatlogs.scss ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatlogs_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./chatlogs.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/chatlogs/chatlogs.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatlogs_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatlogs_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatlogs_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_chatlogs_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogs.scss?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsHelpers.js":
/*!************************************************!*\
  !*** ./src/panels/chatlogs/chatlogsHelpers.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractDateFromUrl: () => (/* binding */ extractDateFromUrl),\n/* harmony export */   getRandomDateInRange: () => (/* binding */ getRandomDateInRange),\n/* harmony export */   getUserId: () => (/* binding */ getUserId),\n/* harmony export */   randomParam: () => (/* binding */ randomParam)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n// Generate a random 20-digit number\r\nconst randomParam = Math.floor(Math.random() * 10 ** 20);\r\n\r\n// Function to get user ID by username (using unified user data cache)\r\nasync function getUserId(username) {\r\n  const userDataCache = JSON.parse(localStorage.getItem(_definitions_js__WEBPACK_IMPORTED_MODULE_0__.USER_DATA_CACHE_KEY) || '{}');\r\n  if (userDataCache[username]?.id) return userDataCache[username].id;\r\n}\r\n\r\n// Generate random date in range for chat logs\r\nfunction getRandomDateInRange() {\r\n  const startDate = new Date(_definitions_js__WEBPACK_IMPORTED_MODULE_0__.minimalChatlogsDate); // Start date\r\n  const endDate = new Date(); // Current date\r\n  // Calculate the difference in milliseconds\r\n  const dateDifference = endDate - startDate;\r\n  // Generate a random number of milliseconds between 0 and dateDifference\r\n  const randomMilliseconds = Math.floor(Math.random() * dateDifference);\r\n  // Create a random date by adding the random milliseconds to the start date\r\n  const randomDate = new Date(startDate.getTime() + randomMilliseconds);\r\n  // Format the date to 'YYYY-MM-DD' using Intl.DateTimeFormat\r\n  const formattedDate = new Intl.DateTimeFormat('en-CA').format(randomDate);\r\n  return formattedDate;\r\n}\r\n\r\n// Helper function to extract date from the URL\r\nfunction extractDateFromUrl(url) {\r\n  const chatlogsDateRegex = /(\\d{4}-\\d{2}-\\d{2})/;\r\n  const match = url.match(chatlogsDateRegex);\r\n  return match ? match[1] : null; // Return the date if match is found, else return null\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsHelpers.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsLoader.js":
/*!***********************************************!*\
  !*** ./src/panels/chatlogs/chatlogsLoader.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchChatLogs: () => (/* binding */ fetchChatLogs)\n/* harmony export */ });\n/* harmony import */ var _chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chatlogsStorage.js */ \"./src/panels/chatlogs/chatlogsStorage.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _settings_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../settings/settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chatlogsHelpers.js */ \"./src/panels/chatlogs/chatlogsHelpers.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { ignored } = _settings_settings_js__WEBPACK_IMPORTED_MODULE_2__.settingsState;\r\n\r\n// --- Chatlog HTML size limit (shared constant) ---\r\nconst CHATLOG_SIZE_LIMIT_KB = 1000;\r\nconst CHATLOG_SIZE_LIMIT_BYTES = CHATLOG_SIZE_LIMIT_KB * 1024;\r\n\r\nconst lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentLanguage)();\r\n\r\n// Function to fetch chat logs from the specified URL for a given date\r\nconst fetchChatLogs = async (date, messagesContainer) => {\r\n  // Clear the messagesContainer if it exists\r\n  messagesContainer && (messagesContainer.innerHTML = '');\r\n\r\n  const url = `https://klavogonki.ru/chatlogs/${date}.html`;\r\n\r\n  const skippedResult = {\r\n    chatlogs: [],\r\n    url: url,\r\n    size: 0,\r\n    error: null,\r\n    info: lang === 'ru' ? 'Пропущено: слишком большой лог.' : 'Skipped: chatlog too large.',\r\n    placeholder: lang === 'ru' ? 'Пропущено: слишком большой лог.' : 'Skipped: chatlog too large.'\r\n  };\r\n\r\n  const fetchUrl = `${url}?rand=${_chatlogsHelpers_js__WEBPACK_IMPORTED_MODULE_3__.randomParam}`;\r\n\r\n  // Try to use IndexedDB if available\r\n  let html;\r\n  let loadedFromIndexedDB = false;\r\n  const entry = await (0,_chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_0__.readChatlogFromIndexedDB)(date);\r\n  if (entry) {\r\n    if (entry.skipped) {\r\n      return skippedResult;\r\n    } else if (entry.html) {\r\n      html = entry.html;\r\n      loadedFromIndexedDB = true;\r\n    }\r\n  }\r\n\r\n  if (!html) {\r\n    try {\r\n      const response = await fetch(fetchUrl);\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n      const reader = response.body.getReader();\r\n      let receivedLength = 0;\r\n      let chunks = [];\r\n      let done = false;\r\n      while (!done) {\r\n        const { value, done: streamDone } = await reader.read();\r\n        if (value) {\r\n          receivedLength += value.length;\r\n          if (receivedLength > CHATLOG_SIZE_LIMIT_BYTES) {\r\n            reader.cancel();\r\n            if (date !== _definitions_js__WEBPACK_IMPORTED_MODULE_4__.today) {\r\n              await (0,_chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_0__.saveChatlogToIndexedDB)({ date, skipped: true, reason: 'too large' });\r\n            }\r\n            return skippedResult;\r\n          }\r\n          chunks.push(value);\r\n        }\r\n        done = streamDone;\r\n      }\r\n      let htmlUint8 = new Uint8Array(receivedLength);\r\n      let position = 0;\r\n      for (let chunk of chunks) {\r\n        htmlUint8.set(chunk, position);\r\n        position += chunk.length;\r\n      }\r\n      html = new TextDecoder('utf-8').decode(htmlUint8);\r\n      if (date !== _definitions_js__WEBPACK_IMPORTED_MODULE_4__.today) {\r\n        await (0,_chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_0__.saveChatlogToIndexedDB)({ date, html });\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        chatlogs: [],\r\n        url: fetchUrl,\r\n        size: 0,\r\n        error: error.message,\r\n        info: null,\r\n        placeholder: lang === 'ru' ? 'Ошибка при обработке логов.' : 'Error processing logs.'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Function to parse the HTML and extract chat log entries\r\n  const parseChatLog = (html) => {\r\n    const doc = new DOMParser().parseFromString(html, 'text/html');\r\n\r\n    return [...doc.querySelectorAll('.ts')].map((timeElement) => {\r\n      const usernameElement = timeElement.nextElementSibling;\r\n      const messageNode = usernameElement?.nextSibling;\r\n\r\n      const extractMessageText = (node) => {\r\n        if (!node) return '';\r\n        return [...node.childNodes].reduce((acc, child) => {\r\n          if (child.nodeType === Node.TEXT_NODE) {\r\n            acc += child.textContent;\r\n          } else if (child.nodeType === Node.ELEMENT_NODE) {\r\n            if (child.tagName === 'A') {\r\n              acc += child.getAttribute('href');\r\n            } else if (child.tagName === 'BR') {\r\n              return acc;\r\n            }\r\n          }\r\n          return acc;\r\n        }, '').trim();\r\n      };\r\n\r\n      if (usernameElement?.classList.contains('mn') && messageNode) {\r\n        let messageText = '';\r\n\r\n        if (messageNode.nodeType === Node.ELEMENT_NODE) {\r\n          messageText = extractMessageText(messageNode);\r\n        } else if (messageNode.nodeType === Node.TEXT_NODE) {\r\n          const nextSibling = usernameElement.nextElementSibling;\r\n          if (nextSibling && nextSibling.tagName === 'A') {\r\n            messageText = `${messageNode.textContent.trim()} ${nextSibling.getAttribute('href')}`;\r\n          } else {\r\n            messageText = messageNode.textContent.trim();\r\n          }\r\n        }\r\n\r\n        if (!messageText) {\r\n          const combinedText = extractMessageText(usernameElement.nextSibling);\r\n          messageText = combinedText;\r\n        }\r\n\r\n        return {\r\n          time: timeElement.textContent.trim().replace(/[\\[\\]]/g, ''),\r\n          username: usernameElement.textContent.trim().replace(/<|>/g, ''),\r\n          message: messageText || null,\r\n        };\r\n      }\r\n\r\n      const systemMessageElement = timeElement.nextElementSibling;\r\n      if (systemMessageElement && systemMessageElement.classList.contains('mne')) {\r\n        const messageText = systemMessageElement.textContent.trim();\r\n        return {\r\n          time: timeElement.textContent.trim().replace(/[\\[\\]]/g, ''),\r\n          username: 'SYSTEM',\r\n          message: messageText || null,\r\n        };\r\n      }\r\n\r\n      return null;\r\n    }).filter(Boolean);\r\n  };\r\n\r\n  const htmlContent = html.length > CHATLOG_SIZE_LIMIT_BYTES ? html.slice(0, CHATLOG_SIZE_LIMIT_BYTES) : html;\r\n  const chatlogs = parseChatLog(htmlContent);\r\n  const limitReached = html.length > CHATLOG_SIZE_LIMIT_BYTES;\r\n\r\n  // Step 1: Remove consecutive duplicate messages\r\n  const noSpamMessages = [];\r\n  let lastMessage = null;\r\n  for (const log of chatlogs) {\r\n    const isDifferentMessage = log.message !== lastMessage?.message;\r\n    const isDifferentUser = log.username !== lastMessage?.username;\r\n    if (isDifferentMessage || isDifferentUser) {\r\n      noSpamMessages.push(log);\r\n      lastMessage = log;\r\n    }\r\n  }\r\n  // Step 2: Filter out messages from ignored users\r\n  const finalChatlogs = noSpamMessages.filter((log) => !ignored.includes(log.username));\r\n\r\n  // Return the filtered chat logs, size of HTML, URL, and info\r\n  const sizeInKB = (htmlContent.length / 1024).toFixed(2);\r\n\r\n  // --- Calculate total size of all chatlogs in IndexedDB ---\r\n  const totalIndexedDBSizeKB = (0,_chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_0__.getTotalChatlogsSizeCached)();\r\n\r\n  // Format cache size for display (GB if >= 1024 MB, MB if >= 1024 KB, else KB)\r\n  function formatCacheSize(sizeKB) {\r\n    const num = parseFloat(sizeKB);\r\n    if (isNaN(num)) return sizeKB;\r\n    if (num >= 1024 * 1024) return (num / (1024 * 1024)).toFixed(2) + (lang === 'ru' ? ' ГБ' : ' GB');\r\n    if (num >= 1024) return (num / 1024).toFixed(2) + (lang === 'ru' ? ' МБ' : ' MB');\r\n    return num.toFixed(2) + (lang === 'ru' ? ' КБ' : ' KB');\r\n  }\r\n\r\n  let placeholder = lang === 'ru' ? `Размер: ${sizeInKB} КБ` : `Size: ${sizeInKB} KB`;\r\n  if (limitReached) {\r\n    placeholder += lang === 'ru' ? ' (Достигнут лимит файла)' : ' (File limit reached)';\r\n  } else {\r\n    placeholder += loadedFromIndexedDB ? (lang === 'ru' ? ' (Кэш)' : ' (Cache)') : '';\r\n  }\r\n  if (totalIndexedDBSizeKB !== null && !isNaN(totalIndexedDBSizeKB)) {\r\n    const formattedCacheSize = formatCacheSize(totalIndexedDBSizeKB);\r\n    placeholder += lang === 'ru' ? ` | Кэш: ${formattedCacheSize}` : ` | Cache: ${formattedCacheSize}`;\r\n  }\r\n\r\n  return {\r\n    chatlogs: finalChatlogs,\r\n    url: url,\r\n    size: htmlContent.length,\r\n    info: limitReached\r\n      ? (lang === 'ru' ? 'Достигнут лимит размера файла.' : 'File size limit reached.')\r\n      : (loadedFromIndexedDB ? (lang === 'ru' ? 'Загружено из кэша.' : 'Loaded from cache.') : null),\r\n    error: null,\r\n    placeholder\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsLoader.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsMessages.js":
/*!*************************************************!*\
  !*** ./src/panels/chatlogs/chatlogsMessages.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderChatMessages: () => (/* binding */ renderChatMessages)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n/**\r\n * Render chat messages into a container.\r\n * @param {Array} chatlogs - Array of { time, username, message }\r\n * @param {HTMLElement} messagesContainer - The container to append messages to\r\n * @param {boolean} [preserveMessages] - If true, do not clear container (for incremental rendering)\r\n * @param {string} [addDateHeader] - Optional date header to display before messages\r\n * @param {Array<string>} [searchTerms] - Array of search terms to highlight (optional)\r\n * @param {boolean} [highlightSearch] - Whether to highlight search terms (default: false)\r\n * @returns {Map} usernameMessageCountMap - Map of username to message count\r\n */\r\nfunction renderChatMessages(chatlogs, messagesContainer, preserveMessages, addDateHeader, searchTerms = [], highlightSearch = false) {\r\n  // Parse color cache once per render\r\n  const userData = JSON.parse(localStorage.getItem(_definitions_js__WEBPACK_IMPORTED_MODULE_0__.USER_DATA_CACHE_KEY) || '{}');\r\n  let lastDisplayedUsername = null;\r\n  const usernameMessageCountMap = new Map();\r\n  if (!preserveMessages) messagesContainer.innerHTML = '';\r\n\r\n  // Optionally render a date header\r\n  if (addDateHeader) {\r\n    const header = document.createElement('div');\r\n    header.className = 'date-item';\r\n\r\n    // Create text span for copy operations\r\n    const dateTextSpan = document.createElement('span');\r\n    dateTextSpan.className = 'date-text';\r\n    dateTextSpan.textContent = addDateHeader;\r\n\r\n    // Create emoji span for visual decoration only\r\n    const emojiSpan = document.createElement('span');\r\n    emojiSpan.className = 'date-emoji';\r\n    emojiSpan.textContent = ' 📅';  // Note: space before emoji for proper spacing\r\n\r\n    header.appendChild(dateTextSpan);\r\n    header.appendChild(emojiSpan);\r\n    messagesContainer.appendChild(header);\r\n  }\r\n\r\n  // Helper to highlight search terms in a message\r\n  function highlightTerms(message, terms) {\r\n    if (!highlightSearch || !terms || !terms.length || !message) return message;\r\n    // Escape regex special chars in each term\r\n    const escapedTerms = terms.map(term => term.replace(/[.*+?^${}()|[\\\\]\\\\]/g, '\\\\$&'));\r\n    const regex = new RegExp(`(${escapedTerms.join('|')})`, 'gi');\r\n    return message.replace(regex, '<span class=\"parse-match-message\">$1</span>');\r\n  }\r\n\r\n  // Batch DOM updates using a DocumentFragment\r\n  const fragment = document.createDocumentFragment();\r\n  chatlogs.forEach(({ time, username, message }) => {\r\n    usernameMessageCountMap.set(username, (usernameMessageCountMap.get(username) || 0) + 1);\r\n\r\n    const messageContainer = document.createElement('div');\r\n    messageContainer.classList.add('message-item');\r\n\r\n    const timeElement = document.createElement('span');\r\n    timeElement.className = 'message-time';\r\n    timeElement.textContent = time;\r\n\r\n    const usernameElement = document.createElement('span');\r\n    usernameElement.className = 'message-username';\r\n    usernameElement.textContent = username;\r\n    usernameElement.style.color = userData[username]?.color || '#808080';\r\n\r\n    const messageTextElement = document.createElement('span');\r\n    messageTextElement.className = 'message-text';\r\n    let html = '';\r\n    if (typeof message === 'string' && message.length > 0) {\r\n      html = message\r\n        .replace(/:(?=\\w*[a-zA-Z])(\\w+):/g,\r\n          (_, word) => `<img src=\"/img/smilies/${word}.gif\" alt=\":${word}:\" title=\":${word}:\" class=\"smile\">`\r\n        )\r\n        .replace(/(https?:\\/\\/[^\\s]+)/gi,\r\n          (url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`\r\n        );\r\n      if (highlightSearch && searchTerms && searchTerms.length > 0) {\r\n        html = highlightTerms(html, searchTerms);\r\n      }\r\n    }\r\n    messageTextElement.innerHTML = html;\r\n\r\n    messageContainer.style.marginTop = lastDisplayedUsername !== username ? '0.6em' : '';\r\n    lastDisplayedUsername = username;\r\n\r\n    messageContainer.appendChild(timeElement);\r\n    messageContainer.appendChild(usernameElement);\r\n    messageContainer.appendChild(messageTextElement);\r\n\r\n    fragment.appendChild(messageContainer);\r\n  });\r\n  messagesContainer.appendChild(fragment);\r\n\r\n  return usernameMessageCountMap;\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsMessages.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsParser.js":
/*!***********************************************!*\
  !*** ./src/panels/chatlogs/chatlogsParser.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupChatLogsParser: () => (/* binding */ setupChatLogsParser)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _chatlogsLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chatlogsLoader.js */ \"./src/panels/chatlogs/chatlogsLoader.js\");\n/* harmony import */ var _chatlogsMessages_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chatlogsMessages.js */ \"./src/panels/chatlogs/chatlogsMessages.js\");\n/* harmony import */ var _chatlogsUserlist_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chatlogsUserlist.js */ \"./src/panels/chatlogs/chatlogsUserlist.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_apiData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/apiData.js */ \"./src/helpers/apiData.js\");\n/* harmony import */ var _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chatlogsParserMessages.js */ \"./src/panels/chatlogs/chatlogsParserMessages.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./chatlogsStorage.js */ \"./src/panels/chatlogs/chatlogsStorage.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Helper function to calculate date range for latest N days\r\n * @param {number} days - Number of days to go back from today\r\n * @returns {object} - Object with 'from' and 'to' dates in YYYY-MM-DD format\r\n */\r\nfunction getLatestNDaysRange(days) {\r\n  const today = new Date();\r\n  const fromDate = new Date(today);\r\n  fromDate.setDate(today.getDate() - days + 1); // +1 to include today\r\n\r\n  return {\r\n    from: fromDate.toISOString().slice(0, 10),\r\n    to: today.toISOString().slice(0, 10)\r\n  };\r\n}\r\n\r\n/**\r\n * Helper function to get all mention terms including myNickname, its history, and mention keywords from localStorage\r\n * Order: myNickname first, then usernamesHistory, then mentionKeywords\r\n * @returns {Promise<Array>} - Array of unique mention terms in proper order\r\n */\r\nasync function getAllMentionTerms() {\r\n  let allMentionTerms = [];\r\n\r\n  // 1. Add myNickname first (if it exists)\r\n  if (_definitions_js__WEBPACK_IMPORTED_MODULE_1__.myNickname) {\r\n    allMentionTerms.push(_definitions_js__WEBPACK_IMPORTED_MODULE_1__.myNickname);\r\n  }\r\n\r\n  // 2. Add username history (excluding myNickname to avoid duplicates)\r\n  if (_definitions_js__WEBPACK_IMPORTED_MODULE_1__.myNickname) {\r\n    try {\r\n      const usernamesHistory = await (0,_helpers_apiData_js__WEBPACK_IMPORTED_MODULE_6__.getDataByName)(_definitions_js__WEBPACK_IMPORTED_MODULE_1__.myNickname, 'usernamesHistory');\r\n      if (Array.isArray(usernamesHistory) && usernamesHistory.length > 0) {\r\n        usernamesHistory.forEach(username => {\r\n          if (username && !allMentionTerms.includes(username)) {\r\n            allMentionTerms.push(username);\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.warn('Could not fetch username history for', _definitions_js__WEBPACK_IMPORTED_MODULE_1__.myNickname, ':', error);\r\n    }\r\n  }\r\n\r\n  // 3. Get mention keywords from localStorage and add them last (excluding any that are already in the list)\r\n  let mentionKeywords = [];\r\n  try {\r\n    const storedKeywords = localStorage.getItem('mentionKeywords');\r\n    if (storedKeywords) {\r\n      mentionKeywords = JSON.parse(storedKeywords);\r\n    }\r\n  } catch (error) {\r\n    console.warn('Could not parse mention keywords from localStorage:', error);\r\n  }\r\n  if (!Array.isArray(mentionKeywords)) mentionKeywords = [];\r\n\r\n  mentionKeywords.forEach(keyword => {\r\n    if (keyword && !allMentionTerms.includes(keyword)) {\r\n      allMentionTerms.push(keyword);\r\n    }\r\n  });\r\n\r\n  return allMentionTerms;\r\n}\r\n\r\n/**\r\n * Attach parse logic to the parse button in the chat logs panel header.\r\n * @param {HTMLElement} parseButton - The parse button element.\r\n * @param {HTMLElement} chatLogsContainer - The container with chat log messages.\r\n */\r\nfunction setupChatLogsParser(parseButton, chatLogsPanelOrContainer) {\r\n  let isParsing = false;\r\n  let stopRequested = false;\r\n  let abortController = null;\r\n  const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.getCurrentLanguage)();\r\n\r\n  // Helper to get the messages container\r\n  function getMessagesContainer(panelOrContainer) {\r\n    if (!panelOrContainer) return null;\r\n    if (panelOrContainer.classList.contains('chat-logs-container')) return panelOrContainer;\r\n    return panelOrContainer.querySelector('.chat-logs-container');\r\n  }\r\n\r\n  // Helper to prompt for options\r\n  async function promptOptions() {\r\n    let modeInput;\r\n    while (true) {\r\n      modeInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.selectParseMode[lang], '1');\r\n      if (modeInput === null) return null;\r\n      if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"].includes(modeInput)) break;\r\n      alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidSelection[lang]);\r\n    }\r\n    const opts = {};\r\n\r\n    // Helper for date range prompts (to avoid code repetition)\r\n    async function promptDateRange(mode) {\r\n      if (mode === '4') {\r\n        opts.from = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.minimalChatlogsDate;\r\n        opts.to = new Date().toISOString().slice(0, 10);\r\n      } else if (mode === '3') {\r\n        let rangeInput, fromDate, toDate;\r\n        while (true) {\r\n          rangeInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterDateRange[lang], '');\r\n          if (rangeInput === null) return null;\r\n          if (!rangeInput.trim()) continue;\r\n          const match = rangeInput.match(/([\\d:\\-]{6,10})\\s*-\\s*([\\d:\\-]{6,10})/);\r\n          if (match) {\r\n            fromDate = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.normalizeDate)(match[1]);\r\n            toDate = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.normalizeDate)(match[2]);\r\n            if (fromDate && toDate) {\r\n              opts.from = fromDate;\r\n              opts.to = toDate;\r\n              break;\r\n            }\r\n          }\r\n          alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidRange[lang]);\r\n        }\r\n      } else if (mode === '2') {\r\n        let fromInput, fromDate;\r\n        while (true) {\r\n          fromInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterFromDate[lang], '');\r\n          if (fromInput === null) return null;\r\n          if (!fromInput.trim()) continue;\r\n          fromDate = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.normalizeDate)(fromInput.trim());\r\n          if (fromDate) {\r\n            opts.from = fromDate;\r\n            opts.to = new Date().toISOString().slice(0, 10);\r\n            break;\r\n          }\r\n          alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidFromDate[lang]);\r\n        }\r\n      } else if (mode === '1') {\r\n        let dateInput, dateVal;\r\n        while (true) {\r\n          dateInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterSingleDate[lang], '');\r\n          if (dateInput === null) return null;\r\n          if (!dateInput.trim()) continue;\r\n          dateVal = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.normalizeDate)(dateInput.trim());\r\n          if (dateVal) {\r\n            opts.from = dateVal;\r\n            opts.to = dateVal;\r\n            break;\r\n          }\r\n          alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidDate[lang]);\r\n        }\r\n      }\r\n    } // promptDateRange END\r\n\r\n    if (modeInput === '6') {\r\n      // Personal mentions mode: prompt for date mode, then handle latest N days option\r\n      let dateMode;\r\n      while (true) {\r\n        dateMode = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.selectPersonalMentionsDateMode[lang], '1');\r\n        if (dateMode === null) return null;\r\n        if ([\"1\", \"2\", \"3\", \"4\", \"5\"].includes(dateMode)) break;\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidSelection[lang]);\r\n      }\r\n\r\n      // Handle the new option 5 (Latest N days)\r\n      if (dateMode === '5') {\r\n        let daysInput;\r\n        while (true) {\r\n          daysInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterLatestDays[lang], '7');\r\n          if (daysInput === null) return null;\r\n\r\n          const days = parseInt(daysInput.trim());\r\n          if (isNaN(days) || days <= 0 || days > 365) {\r\n            alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidDaysNumber[lang]);\r\n            continue;\r\n          }\r\n\r\n          const dateRange = getLatestNDaysRange(days);\r\n          opts.from = dateRange.from;\r\n          opts.to = dateRange.to;\r\n          break;\r\n        }\r\n      } else {\r\n        // Use existing date range logic for modes 1-4\r\n        const dateResult = await promptDateRange(dateMode);\r\n        if (dateResult === null) return null;\r\n      }\r\n\r\n      // Get all mention terms including myNickname, usernamesHistory, and mentionKeywords\r\n      const allMentionTerms = await getAllMentionTerms();\r\n\r\n      // Prompt user to edit the combined list\r\n      let mentionInput = prompt(\r\n        _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterMentionKeywords[lang],\r\n        allMentionTerms.join(', ')\r\n      );\r\n      if (mentionInput === null) return null;\r\n\r\n      // Parse and clean the input - Fixed the undefined array issue\r\n      let finalMentionKeywords = [];\r\n      if (mentionInput && mentionInput.trim()) {\r\n        const splitKeywords = mentionInput.split(',');\r\n        if (Array.isArray(splitKeywords)) {\r\n          finalMentionKeywords = splitKeywords\r\n            .map(s => s ? s.trim() : '')\r\n            .filter(Boolean);\r\n\r\n          // Remove duplicates safely\r\n          const uniqueKeywords = [];\r\n          finalMentionKeywords.forEach(keyword => {\r\n            if (keyword && !uniqueKeywords.includes(keyword)) {\r\n              uniqueKeywords.push(keyword);\r\n            }\r\n          });\r\n          finalMentionKeywords = uniqueKeywords;\r\n        }\r\n      }\r\n\r\n      if (finalMentionKeywords.length === 0) {\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.noMentionKeywords[lang]);\r\n        return null;\r\n      }\r\n\r\n      opts.mode = 'personalmentions';\r\n      opts.mentionKeywords = finalMentionKeywords;\r\n      return opts;\r\n    } else if (modeInput === '5') {\r\n      opts.mode = 'fromregistered';\r\n      // We'll fetch the date after prompting for usernames in startParsing\r\n      return opts;\r\n    } else if ([\"4\", \"3\", \"2\", \"1\"].includes(modeInput)) {\r\n      const dateResult = await promptDateRange(modeInput);\r\n      if (dateResult === null) return null;\r\n      opts.mode =\r\n        modeInput === '1' ? 'single' :\r\n          modeInput === '2' ? 'fromdate' :\r\n            modeInput === '3' ? 'range' :\r\n              'fromstart';\r\n      return opts;\r\n    }\r\n  }\r\n\r\n  // Helper to prompt for usernames and validate them using getExactUserIdByName\r\n  async function promptUsernames() {\r\n    let usernamesInput = \"\";\r\n    while (true) {\r\n      usernamesInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterUsernames[lang], usernamesInput || \"\");\r\n      if (usernamesInput === null) return null;\r\n      if (!usernamesInput || !usernamesInput.trim()) return [];\r\n\r\n      let usernames = [];\r\n      if (usernamesInput && usernamesInput.trim()) {\r\n        const splitUsernames = usernamesInput.split(',');\r\n        if (Array.isArray(splitUsernames)) {\r\n          usernames = splitUsernames\r\n            .map(u => u ? u.trim() : '')\r\n            .filter(Boolean);\r\n        }\r\n      }\r\n\r\n      if (usernames.length === 0) return [];\r\n\r\n      const validUsernames = [];\r\n      for (const username of usernames) {\r\n        const userId = await (0,_helpers_apiData_js__WEBPACK_IMPORTED_MODULE_6__.getExactUserIdByName)(username);\r\n        if (!userId) {\r\n          // Ask user if they want to proceed (possibly banned)\r\n          if (confirm(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.userPossiblyBanned[lang](username))) {\r\n            validUsernames.push(username);\r\n          }\r\n        } else {\r\n          validUsernames.push(username);\r\n        }\r\n      }\r\n      if (validUsernames.length === 0) {\r\n        // If all were skipped or not found, just continue the prompt loop (no alert)\r\n        continue;\r\n      }\r\n      if (validUsernames.length === 1) {\r\n        const answer = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.retrieveHistoryPrompt[lang], '2');\r\n        if (answer === '1') {\r\n          if (typeof _helpers_apiData_js__WEBPACK_IMPORTED_MODULE_6__.getDataByName === 'function') {\r\n            const historyUsernames = await (0,_helpers_apiData_js__WEBPACK_IMPORTED_MODULE_6__.getDataByName)(validUsernames[0], 'usernamesHistory');\r\n            if (Array.isArray(historyUsernames) && historyUsernames.length > 0) {\r\n              const allUsernames = [validUsernames[0], ...historyUsernames.filter(u => u !== validUsernames[0])];\r\n              const confirmed = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.confirmUsernames[lang], allUsernames.join(', '));\r\n              if (!confirmed) return null;\r\n\r\n              let confirmedUsernames = [];\r\n              if (confirmed && confirmed.trim()) {\r\n                const splitConfirmed = confirmed.split(',');\r\n                if (Array.isArray(splitConfirmed)) {\r\n                  confirmedUsernames = splitConfirmed\r\n                    .map(u => u ? u.trim() : '')\r\n                    .filter(Boolean);\r\n                }\r\n              }\r\n              return confirmedUsernames;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return validUsernames;\r\n    }\r\n  }\r\n\r\n  // Helper to prompt for search terms\r\n  function promptSearchTerms(searchAllUsers = false) {\r\n    let searchInput;\r\n    while (true) {\r\n      searchInput = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.enterSearchTerms[lang](searchAllUsers), '');\r\n      if (searchInput === null) return null;\r\n      if (!searchInput || !searchInput.trim()) {\r\n        if (searchAllUsers) {\r\n          alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.searchAllUsersRequired[lang]);\r\n          continue;\r\n        }\r\n        return [];\r\n      }\r\n\r\n      let searchTerms = [];\r\n      if (searchInput && searchInput.trim()) {\r\n        const splitTerms = searchInput.split(',');\r\n        if (Array.isArray(splitTerms)) {\r\n          searchTerms = splitTerms\r\n            .map(term => term ? term.trim().toLowerCase() : '')\r\n            .filter(Boolean);\r\n        }\r\n      }\r\n      return searchTerms;\r\n    }\r\n  }\r\n\r\n  // Helper to check if message contains any of the search terms\r\n  function messageContainsSearchTerms(message, searchTerms) {\r\n    if (!searchTerms || searchTerms.length === 0) return true; // No search terms means show all\r\n    if (!message) return false;\r\n\r\n    const lowerMessage = message.toLowerCase();\r\n    return searchTerms.some(term => lowerMessage.includes(term));\r\n  }\r\n\r\n  // Helper to set the random button to 'today' mode\r\n  function setRandomButtonToTodayMode() {\r\n    const randomButton = chatLogsPanelOrContainer.querySelector('.panel-header-shuffle-button');\r\n    if (randomButton) {\r\n      randomButton.dataset.mode = 'loadToday';\r\n      randomButton.classList.add('today');\r\n      randomButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.sunSVG;\r\n      (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(randomButton, {\r\n        en: 'Load Today\\'s Chat Logs',\r\n        ru: 'Загрузить сегодняшние логи чата'\r\n      });\r\n    }\r\n  }\r\n\r\n  // Helper to set the random button to default (random) mode\r\n  function setRandomButtonToDefault() {\r\n    const randomButton = chatLogsPanelOrContainer.querySelector('.panel-header-shuffle-button');\r\n    if (randomButton) {\r\n      randomButton.dataset.mode = '';\r\n      randomButton.classList.remove('today');\r\n      randomButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.shuffleSVG;\r\n      (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_8__.createCustomTooltip)(randomButton, {\r\n        en: 'Random Date',\r\n        ru: 'Случайная дата'\r\n      });\r\n    }\r\n  }\r\n\r\n  // Helper to calculate percent complete\r\n  function getPercentComplete(currentDate, startDate, endDate) {\r\n    const total = endDate - startDate;\r\n    const done = currentDate - startDate;\r\n    if (total <= 0) return 100;\r\n    return Math.min(100, Math.max(0, Math.round((done / total) * 100)));\r\n  }\r\n\r\n  // Main parse logic\r\n  async function startParsing() {\r\n    // Expose parser state and stop function globally only when parsing starts, and only if not already set\r\n    if (!window.chatlogsParserState) {\r\n      window.chatlogsParserState = {\r\n        isRunning: () => isParsing,\r\n        stop: stopParsing\r\n      };\r\n    }\r\n    if (!window.stopChatlogsParser) {\r\n      window.stopChatlogsParser = stopParsing;\r\n    }\r\n\r\n    isParsing = true;\r\n    stopRequested = false;\r\n    abortController = new AbortController();\r\n    parseButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.pauseSVG;\r\n    setRandomButtonToDefault();\r\n\r\n    const opts = await promptOptions();\r\n    if (!opts) {\r\n      resetButton();\r\n      return;\r\n    }\r\n\r\n    let usernames;\r\n    let searchTerms;\r\n    if (opts.mode === 'personalmentions') {\r\n      // Use mention keywords from opts (do not update localStorage)\r\n      let mentionKeywords = opts.mentionKeywords || [];\r\n      if (!Array.isArray(mentionKeywords) || mentionKeywords.length === 0) {\r\n        alert('No mention keywords provided. Please enter at least one keyword.');\r\n        resetButton();\r\n        return;\r\n      }\r\n      searchTerms = mentionKeywords.map(s => s ? s.toLowerCase() : '').filter(Boolean);\r\n      usernames = [];\r\n    } else if (opts.mode === 'fromregistered') {\r\n      // Prompt for usernames and fetch registration dates\r\n      let usernamesInput = await promptUsernames();\r\n      if (usernamesInput === null || usernamesInput.length === 0) {\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.noUsersSelected[lang]);\r\n        resetButton();\r\n        return;\r\n      }\r\n      // Fetch registration dates for all usernames\r\n      let regDates = [];\r\n      for (const username of usernamesInput) {\r\n        let reg = await (0,_helpers_apiData_js__WEBPACK_IMPORTED_MODULE_6__.getDataByName)(username, 'registered');\r\n        let regDate = null;\r\n        if (typeof reg === 'string') {\r\n          regDate = reg;\r\n        } else if (typeof reg === 'number') {\r\n          regDate = new Date(reg * 1000).toISOString().slice(0, 10);\r\n        }\r\n        if (regDate) regDates.push(regDate);\r\n      }\r\n      if (!regDates.length) {\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.unableToGetRegDate[lang]);\r\n        resetButton();\r\n        return;\r\n      }\r\n      // Use the earliest registration date\r\n      let minDate = regDates.sort()[0];\r\n      // Prompt user to edit or confirm the start date\r\n      let editedDate = prompt(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.editStartDate[lang](minDate), minDate);\r\n      if (!editedDate) {\r\n        resetButton();\r\n        return;\r\n      }\r\n      // Normalize and validate the edited date using normalizeDate and isValidDateParts\r\n      editedDate = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_5__.normalizeDate)(editedDate.trim());\r\n      if (!editedDate) {\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.invalidEditedDate[lang]);\r\n        resetButton();\r\n        return;\r\n      }\r\n      // Clamp to minimalChatlogsDate if needed\r\n      let minAllowed = _definitions_js__WEBPACK_IMPORTED_MODULE_1__.minimalChatlogsDate;\r\n      if (editedDate < minAllowed) {\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.dateBeforeMinimal[lang](minAllowed));\r\n        editedDate = minAllowed;\r\n      }\r\n      opts.from = editedDate;\r\n      opts.to = new Date().toISOString().slice(0, 10);\r\n      usernames = usernamesInput;\r\n    } else {\r\n      usernames = await promptUsernames();\r\n      if (usernames === null) {\r\n        resetButton();\r\n        return;\r\n      }\r\n    }\r\n    const searchAllUsers = usernames.length === 0;\r\n    if (opts.mode !== 'personalmentions') {\r\n      // Prompt for message search terms\r\n      searchTerms = promptSearchTerms(searchAllUsers);\r\n      if (searchTerms === null) {\r\n        resetButton();\r\n        return;\r\n      }\r\n      // If searching all users, search terms are required\r\n      if (searchAllUsers && searchTerms.length === 0) {\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.searchAllUsersRequired[lang]);\r\n        resetButton();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Use opts.from and opts.to directly for all modes\r\n    let from = opts.from;\r\n    let to = opts.to;\r\n\r\n    // Prepare for rendering\r\n    let allFiltered = [];\r\n    const usernameMessageCountMap = new Map();\r\n    // Clear the messages container before starting\r\n    const messagesContainer = getMessagesContainer(chatLogsPanelOrContainer);\r\n    if (messagesContainer) messagesContainer.innerHTML = '';\r\n\r\n    // Show search info\r\n    let searchDateInfo = null;\r\n    if (messagesContainer) {\r\n      const searchInfo = document.createElement('div');\r\n      searchInfo.className = 'search-messages-info';\r\n      if (searchAllUsers) {\r\n        searchInfo.textContent = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.searchInfoAllUsers[lang](searchTerms);\r\n      } else if (searchTerms.length > 0) {\r\n        searchInfo.textContent = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.searchInfoSomeUsers[lang](usernames, searchTerms);\r\n      } else {\r\n        searchInfo.textContent = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.searchInfoAllFromUsers[lang](usernames);\r\n      }\r\n      messagesContainer.appendChild(searchInfo);\r\n\r\n      // Add date info element next to search info\r\n      searchDateInfo = document.createElement('div');\r\n      searchDateInfo.className = 'search-messages-date';\r\n      searchDateInfo.textContent = '';\r\n      searchInfo.insertAdjacentElement('afterend', searchDateInfo);\r\n    }\r\n\r\n    // Fetch and filter chat logs for each date in the range, render in real time\r\n    const startDate = new Date(from);\r\n    const endDate = new Date(to);\r\n    let currentDate = new Date(startDate);\r\n    while (currentDate <= endDate && !stopRequested) {\r\n      const dateStr = currentDate.toISOString().slice(0, 10);\r\n      if (searchDateInfo) {\r\n        const percent = getPercentComplete(currentDate, startDate, endDate);\r\n        searchDateInfo.textContent = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.dateProgressInfo[lang](from, dateStr, percent);\r\n      }\r\n      try {\r\n        const { chatlogs } = await (0,_chatlogsLoader_js__WEBPACK_IMPORTED_MODULE_2__.fetchChatLogs)(dateStr, null, abortController.signal);\r\n        if (stopRequested) break;\r\n\r\n        // Filter messages based on whether we're searching all users or specific users\r\n        let filtered;\r\n        if (searchAllUsers) {\r\n          // Search all users, but only keep messages with valid content that match search terms\r\n          filtered = chatlogs.filter(log =>\r\n            log &&\r\n            log.message &&\r\n            messageContainsSearchTerms(log.message, searchTerms)\r\n          );\r\n        } else {\r\n          // Filter by username(s) first, then apply search terms if provided\r\n          filtered = chatlogs.filter(log =>\r\n            log &&\r\n            log.message &&\r\n            usernames.includes(log.username)\r\n          );\r\n\r\n          // Apply search term filtering if search terms are provided\r\n          if (searchTerms.length > 0) {\r\n            filtered = filtered.filter(log => messageContainsSearchTerms(log.message, searchTerms));\r\n          }\r\n        }\r\n\r\n        if (stopRequested) break;\r\n        allFiltered = allFiltered.concat(filtered);\r\n        // Update message count map\r\n        filtered.forEach(({ username }) => {\r\n          usernameMessageCountMap.set(username, (usernameMessageCountMap.get(username) || 0) + 1);\r\n        });\r\n        if (stopRequested) break;\r\n        // Render incrementally\r\n        if (messagesContainer && filtered.length > 0) {\r\n          (0,_chatlogsMessages_js__WEBPACK_IMPORTED_MODULE_3__.renderChatMessages)(\r\n            filtered,\r\n            messagesContainer,\r\n            true,\r\n            dateStr,\r\n            searchTerms,\r\n            searchTerms && searchTerms.length > 0 // highlightSearch true if search terms present\r\n          );\r\n          if (stopRequested) break;\r\n          (0,_chatlogsUserlist_js__WEBPACK_IMPORTED_MODULE_4__.renderActiveUsers)(usernameMessageCountMap, messagesContainer.closest('.chat-logs-panel'));\r\n        }\r\n        if (stopRequested) break;\r\n        // Optional: add a small delay for smoother UI\r\n        await new Promise(res => setTimeout(res, 60));\r\n        if (stopRequested) break;\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      } catch (error) {\r\n        if (error.name === 'AbortError') {\r\n          console.log('Parsing was aborted');\r\n          break;\r\n        } else {\r\n          console.error('Error during parsing:', error);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // If nothing was found, show placeholder\r\n    if (messagesContainer && allFiltered.length === 0) {\r\n      let noMessagesText;\r\n      if (searchAllUsers) {\r\n        noMessagesText = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.noMessagesFoundAll[lang](searchTerms);\r\n      } else if (searchTerms.length > 0) {\r\n        noMessagesText = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.noMessagesFoundSome[lang](searchTerms);\r\n      } else {\r\n        noMessagesText = _chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.noMessagesFound[lang];\r\n      }\r\n      messagesContainer.innerHTML = `<div class=\"no-messages-info\">${noMessagesText}</div>`;\r\n      // Also clear userlist\r\n      const panel = messagesContainer.closest('.chat-logs-panel');\r\n      if (panel) {\r\n        const activeUsers = panel.querySelector('.active-users');\r\n        if (activeUsers) activeUsers.innerHTML = '';\r\n      }\r\n    }\r\n    resetButton();\r\n    // Always update userlist after parsing (even if stopped early)\r\n    if (messagesContainer) {\r\n      (0,_chatlogsUserlist_js__WEBPACK_IMPORTED_MODULE_4__.renderActiveUsers)(usernameMessageCountMap, messagesContainer.closest('.chat-logs-panel'));\r\n    }\r\n    // If parsing stopped automatically, update random button to today mode\r\n    setRandomButtonToTodayMode();\r\n  }\r\n\r\n  function stopParsing() {\r\n    stopRequested = true;\r\n    if (abortController) {\r\n      abortController.abort();\r\n    }\r\n    isParsing = false;\r\n    resetButton();\r\n    setRandomButtonToTodayMode();\r\n  }\r\n\r\n  function resetButton() {\r\n    parseButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.playSVG;\r\n    isParsing = false;\r\n    stopRequested = false;\r\n    abortController = null;\r\n  }\r\n\r\n  parseButton.addEventListener('click', async (event) => {\r\n    if (event.ctrlKey) {\r\n      if (confirm(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.deleteConfirm[lang])) {\r\n        await (0,_chatlogsStorage_js__WEBPACK_IMPORTED_MODULE_9__.deleteAllChatlogsFromIndexedDB)();\r\n        alert(_chatlogsParserMessages_js__WEBPACK_IMPORTED_MODULE_7__.chatlogsParserMessages.deleteSuccess[lang]);\r\n      }\r\n      return;\r\n    } else {\r\n      if (!isParsing) {\r\n        await startParsing();\r\n      } else {\r\n        stopParsing();\r\n      }\r\n    }\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsParser.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsParserMessages.js":
/*!*******************************************************!*\
  !*** ./src/panels/chatlogs/chatlogsParserMessages.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chatlogsParserMessages: () => (/* binding */ chatlogsParserMessages)\n/* harmony export */ });\n// Emoji icon constants\r\nconst INFO = '📌️';\r\nconst EDIT = '✏️';\r\nconst WARN = '⚠️';\r\nconst SEARCH = '🔍';\r\nconst USER = '👤';\r\nconst CONTENT = '📄';\r\nconst CHATLOGS = '📜';\r\nconst EXAMPLE = '📋';\r\nconst DATE = '📅';\r\n\r\nconst chatlogsParserMessages = {\r\n  // Mode selection messages\r\n  selectParseMode: { // Prompt\r\n    en: [\r\n      `${INFO} Select parse mode`,\r\n      '1. Single date',\r\n      '2. From date',\r\n      '3. Date range',\r\n      '4. From start',\r\n      '5. From registered date',\r\n      '6. Personal mentions'\r\n    ].join('\\n'),\r\n    ru: [\r\n      `${INFO} Выберите режим парсинга`,\r\n      '1. Одна дата',\r\n      '2. С даты',\r\n      '3. Диапазон дат',\r\n      '4. С самого начала',\r\n      '5. С даты регистрации',\r\n      '6. Личные упоминания'\r\n    ].join('\\n')\r\n  },\r\n  invalidSelection: { // Alert\r\n    en: `${WARN} Invalid selection.`,\r\n    ru: `${WARN} Неверный выбор.`\r\n  },\r\n\r\n  // Date input messages\r\n  enterDateRange: { // Prompt\r\n    en: [\r\n      `${EDIT} Enter ${DATE} date range`,\r\n      `${EXAMPLE} Examples:`,\r\n      '2024-01-01 - 2024-01-07',\r\n      '20240101 - 20240107',\r\n      '2024:01:01 - 2024:01:07',\r\n      '240101 - 240107',\r\n      '24-02-02 - 24-03-03'\r\n    ].join('\\n'),\r\n    ru: [\r\n      `${EDIT} Введите диапазон ${DATE} дат`,\r\n      `${EXAMPLE} Примеры:`,\r\n      '2024-01-01 - 2024-01-07',\r\n      '20240101 - 20240107',\r\n      '2024:01:01 - 2024:01:07',\r\n      '240101 - 240107',\r\n      '24-02-02 - 24-03-03'\r\n    ].join('\\n')\r\n  },\r\n  invalidRange: { // Alert\r\n    en: `${WARN} Invalid range format or one/both ${DATE} dates out of bounds. Please try again.`,\r\n    ru: `${WARN} Неверный формат диапазона или одна/обе ${DATE} даты вне допустимого диапазона. Пожалуйста, попробуйте снова.`\r\n  },\r\n  enterFromDate: { // Prompt\r\n    en: [\r\n      `${EDIT} Enter FROM ${DATE} date`,\r\n      `${EXAMPLE} Examples:`,\r\n      '2024-01-01',\r\n      '20240101',\r\n      '2024:01:01',\r\n      '240101',\r\n      `${INFO} Range will be FROM this ${DATE} date to today.`\r\n    ].join('\\n'),\r\n    ru: [\r\n      `${EDIT} Введите начальную ${DATE} дату`,\r\n      `${EXAMPLE} Примеры:`,\r\n      '2024-01-01',\r\n      '20240101',\r\n      '2024:01:01',\r\n      '240101',\r\n      `${INFO} Диапазон будет с этой ${DATE} даты до сегодня.`\r\n    ].join('\\n')\r\n  },\r\n  invalidFromDate: { // Alert\r\n    en: `${WARN} Invalid FROM ${DATE} date format or date out of bounds. Please try again.`,\r\n    ru: `${WARN} Неверный формат начальной ${DATE} даты или дата вне допустимого диапазона. Пожалуйста, попробуйте снова.`\r\n  },\r\n  enterSingleDate: { // Prompt\r\n    en: [\r\n      `${EDIT} Enter a ${DATE} date`,\r\n      `${EXAMPLE} Examples:`,\r\n      '2024-01-01',\r\n      '20240101',\r\n      '2024:01:01',\r\n      '240101'\r\n    ].join('\\n'),\r\n    ru: [\r\n      `${EDIT} Введите ${DATE} дату`,\r\n      `${EXAMPLE} Примеры:`,\r\n      '2024-01-01',\r\n      '20240101',\r\n      '2024:01:01',\r\n      '240101'\r\n    ].join('\\n')\r\n  },\r\n  invalidDate: { // Alert\r\n    en: `${WARN} Invalid ${DATE} date format or date out of bounds. Please try again.`,\r\n    ru: `${WARN} Неверный формат ${DATE} даты или дата вне допустимого диапазона. Пожалуйста, попробуйте снова.`\r\n  },\r\n\r\n  // Username input messages\r\n  enterUsernames: { // Prompt\r\n    en: [\r\n      `${USER} Enter ${USER} username(s) to parse (comma-separated):`,\r\n      `${INFO} Leave empty to search ${CONTENT} messages from all ${USER} users.`\r\n    ].join('\\n'),\r\n    ru: [\r\n      `${USER} Введите имя или имена пользователей для парсинга (через запятую):`,\r\n      `${INFO} Оставьте пустым, чтобы искать ${CONTENT} сообщения всех ${USER} пользователей.`\r\n    ].join('\\n')\r\n  },\r\n  userPossiblyBanned: { // Confirm\r\n    en: username => `${WARN} User ${USER} ${username} not found. The user may be banned or deleted. Continue anyway?`,\r\n    ru: username => `${WARN} Пользователь ${USER} ${username} не найден. Возможно, пользователь забанен или удалён. Продолжить в любом случае?`\r\n  },\r\n  retrieveHistoryPrompt: { // Prompt\r\n    en: `${INFO} Do you want to retrieve all previous ${USER} history usernames for this user? (1 - yes, 2 - no)`,\r\n    ru: `${INFO} Хотите получить все предыдущие ${USER} имена пользователей для этого пользователя? (1 - да, 2 - нет)`\r\n  },\r\n  confirmUsernames: { // Prompt\r\n    en: `${EDIT} Confirm or edit the list of ${USER} usernames to parse (comma-separated):`,\r\n    ru: `${EDIT} Подтвердите или отредактируйте список ${USER} имён для парсинга (через запятую):`\r\n  },\r\n\r\n  // Mode 5 specific messages (fromregistered)\r\n  noUsersSelected: { // Alert\r\n    en: `${WARN} No ${USER} users selected.`,\r\n    ru: `${WARN} Не выбраны ${USER} пользователи.`\r\n  },\r\n  unableToGetRegDate: { // Alert\r\n    en: `${WARN} Could not get registration ${DATE} date.`,\r\n    ru: `${WARN} Не удалось получить ${DATE} дату регистрации.`\r\n  },\r\n  editStartDate: { // Prompt\r\n    en: minDate => `${EDIT} From which ${DATE} to start parsing? (registration date: ${minDate})`,\r\n    ru: minDate => `${EDIT} С какой ${DATE} начать парсинг? (дата регистрации: ${minDate})`\r\n  },\r\n  invalidEditedDate: { // Alert\r\n    en: `${WARN} Invalid ${DATE} date format.`,\r\n    ru: `${WARN} Неверный формат ${DATE} даты.`\r\n  },\r\n  dateBeforeMinimal: { // Alert\r\n    en: minAllowed => `${WARN} ${CHATLOGS} Chat logs are only available from ${minAllowed}. Using this ${DATE} date.`,\r\n    ru: minAllowed => `${WARN} ${CHATLOGS} Логи чата доступны только с ${minAllowed}. Используется эта ${DATE} дата.`\r\n  },\r\n\r\n  // Search terms messages\r\n  enterSearchTerms: { // Prompt\r\n    en: searchAllUsers => [\r\n      `${SEARCH} Enter search terms to filter ${CONTENT} messages (comma-separated):`,\r\n      searchAllUsers\r\n        ? `${INFO} This will search through all ${USER} users' ${CONTENT} messages for the specified terms.`\r\n        : `${INFO} Leave empty to show all ${CONTENT} messages from selected ${USER} users.`,\r\n      `${EXAMPLE} Examples:`,\r\n      'hello, dude',\r\n      'creature, spammer, troll',\r\n      `${INFO} Note: Search is case-insensitive and will find ${CONTENT} messages containing ANY of the terms.`\r\n    ].join('\\n'),\r\n    ru: searchAllUsers => [\r\n      `${SEARCH} Введите поисковое слово или слова для фильтрации ${CONTENT} сообщений (через запятую):`,\r\n      searchAllUsers\r\n        ? `${INFO} Будет производиться поиск по всем ${CONTENT} сообщениям ${USER} пользователей для указанных слов.`\r\n        : `${INFO} Оставьте пустым, для поиска всех ${CONTENT} сообщений выбранных ${USER} пользователей.`,\r\n      `${EXAMPLE} Примеры:`,\r\n      'привет, чувак',\r\n      'чучело, спамер, тролль',\r\n      `${INFO} Примечание: поиск не чувствителен к регистру и найдёт ${CONTENT} сообщения, содержащие ЛЮБОЕ из слов.`\r\n    ].join('\\n')\r\n  },\r\n  searchAllUsersRequired: { // Alert\r\n    en: `${WARN} When searching all ${USER} users, you must provide search terms to filter ${CONTENT} messages.`,\r\n    ru: `${WARN} При поиске по всем ${USER} пользователям необходимо указать поисковые слова для фильтрации ${CONTENT} сообщений.`\r\n  },\r\n\r\n  // Search info messages (UI Messages)\r\n  searchInfoAllUsers: {\r\n    en: searchTerms => `${SEARCH} Searching all ${USER} users for ${CONTENT} messages containing: ${searchTerms.join(', ')}`,\r\n    ru: searchTerms => `${SEARCH} Поиск по всем ${USER} пользователям сообщений ${CONTENT}, содержащих: ${searchTerms.join(', ')}`\r\n  },\r\n  searchInfoSomeUsers: {\r\n    en: (usernames, searchTerms) => `${SEARCH} Searching for ${CONTENT} messages from: ${USER} ${usernames.join(', ')}, containing: ${searchTerms.join(', ')}`,\r\n    ru: (usernames, searchTerms) => `${SEARCH} Поиск ${CONTENT} сообщений от: ${USER} ${usernames.join(', ')}, содержащих: ${searchTerms.join(', ')}`\r\n  },\r\n  searchInfoAllFromUsers: {\r\n    en: usernames => `${SEARCH} Showing all ${CONTENT} messages from: ${USER} ${usernames.join(', ')}`,\r\n    ru: usernames => `${SEARCH} Показаны все ${CONTENT} сообщения от: ${USER} ${usernames.join(', ')}`\r\n  },\r\n\r\n  // Date progress info message (UI Message)\r\n  dateProgressInfo: { // UI Message\r\n    en: (initialDate, currentDate, percent) => `${DATE} Start: ${initialDate} | Current: ${currentDate} | Progress: ${percent}%`,\r\n    ru: (initialDate, currentDate, percent) => `${DATE} Начало: ${initialDate} | Текущая: ${currentDate} | Прогресс: ${percent}%`\r\n  },\r\n\r\n  // No messages found messages (UI Messages)\r\n  noMessagesFoundAll: { // UI Message\r\n    en: searchTerms => `${WARN} No ${CONTENT} messages found containing the search terms: ${searchTerms.join(', ')}`,\r\n    ru: searchTerms => `${WARN} ${CONTENT} Сообщения, содержащие слова: ${searchTerms.join(', ')}, не найдены.`\r\n  },\r\n  noMessagesFoundSome: { // UI Message\r\n    en: searchTerms => `${WARN} No ${CONTENT} messages found for the selected ${USER} user(s) containing the search terms: ${searchTerms.join(', ')}`,\r\n    ru: searchTerms => `${WARN} ${CONTENT} Сообщения выбранных ${USER} пользователей, содержащие слова: ${searchTerms.join(', ')}, не найдены.`\r\n  },\r\n  noMessagesFound: { // UI Message\r\n    en: `${WARN} No ${CONTENT} messages found for the selected ${USER} user(s).`,\r\n    ru: `${WARN} ${CONTENT} Сообщения для выбранных ${USER} пользователей не найдены.`\r\n  },\r\n\r\n  // Deletion messages\r\n  deleteConfirm: { // Confirm\r\n    en: `${WARN} Are you sure you want to delete all saved ${CHATLOGS} chatlogs?`,\r\n    ru: `${WARN} Вы уверены, что хотите удалить все сохранённые ${CHATLOGS} чатлоги?`\r\n  },\r\n  deleteSuccess: { // Alert\r\n    en: `${INFO} All ${CHATLOGS} chatlogs deleted and cache size reset.`,\r\n    ru: `${INFO} Все ${CHATLOGS} чатлоги удалены, размер кэша сброшен.`\r\n  },\r\n\r\n  // Personal mentions mode messages\r\n  selectPersonalMentionsDateMode: {\r\n    en: [\r\n      `${INFO} Select date mode for personal mentions`,\r\n      '1. Single date',\r\n      '2. From date',\r\n      '3. Date range',\r\n      '4. From start',\r\n      '5. Last (N) days'\r\n    ].join('\\n'),\r\n    ru: [\r\n      `${INFO} Выберите режим дат для личных упоминаний`,\r\n      '1. Одна дата',\r\n      '2. С даты',\r\n      '3. Диапазон дат',\r\n      '4. С самого начала',\r\n      '5. За последние (N) дней'\r\n    ].join('\\n')\r\n  },\r\n  enterMentionKeywords: {\r\n    en: `${EDIT} Enter mention keywords to search (comma-separated):`,\r\n    ru: `${EDIT} Введите ключевые слова для поиска упоминаний (через запятую):`\r\n  },\r\n  noMentionKeywords: {\r\n    en: `${WARN} No mention keywords provided. Please enter at least one keyword.`,\r\n    ru: `${WARN} Не указаны ключевые слова для поиска упоминаний. Введите хотя бы одно слово.`\r\n  },\r\n  enterLatestDays: {\r\n    en: `${EDIT} Enter the number of latest days:`,\r\n    ru: `${EDIT} Введите количество последних дней:`\r\n  },\r\n  invalidDaysNumber: {\r\n    en: `${WARN} Please enter a valid number of days.`,\r\n    ru: `${WARN} Введите корректное число дней.`\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsParserMessages.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsStorage.js":
/*!************************************************!*\
  !*** ./src/panels/chatlogs/chatlogsStorage.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteAllChatlogsFromIndexedDB: () => (/* binding */ deleteAllChatlogsFromIndexedDB),\n/* harmony export */   getTotalChatlogsSizeCached: () => (/* binding */ getTotalChatlogsSizeCached),\n/* harmony export */   initChatlogsDB: () => (/* binding */ initChatlogsDB),\n/* harmony export */   listAllChatlogDates: () => (/* binding */ listAllChatlogDates),\n/* harmony export */   readChatlogFromIndexedDB: () => (/* binding */ readChatlogFromIndexedDB),\n/* harmony export */   recalculateTotalChatlogsSize: () => (/* binding */ recalculateTotalChatlogsSize),\n/* harmony export */   saveChatlogToIndexedDB: () => (/* binding */ saveChatlogToIndexedDB)\n/* harmony export */ });\n\r\nconst DB_NAME = 'chatlogsDB';\r\nconst STORE_NAME = 'chatlogs';\r\nconst DB_VERSION = 1;\r\n\r\nfunction initChatlogsDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n    request.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      if (!db.objectStoreNames.contains(STORE_NAME)) {\r\n        db.createObjectStore(STORE_NAME, { keyPath: 'date' });\r\n      }\r\n    };\r\n    request.onsuccess = () => resolve(request.result);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nasync function saveChatlogToIndexedDB(entry) {\r\n  const db = await initChatlogsDB();\r\n  return new Promise((resolve, reject) => {\r\n    const tx = db.transaction(STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const req = store.get(entry.date);\r\n    req.onsuccess = () => {\r\n      const prevEntry = req.result;\r\n      const prevSize = prevEntry && prevEntry.html ? new Blob([prevEntry.html]).size : 0;\r\n      const newSize = entry.html ? new Blob([entry.html]).size : 0;\r\n      store.put(entry);\r\n      tx.oncomplete = () => {\r\n        let totalKB = getCachedTotalSize();\r\n        totalKB = totalKB + (newSize - prevSize) / 1024;\r\n        setCachedTotalSize(totalKB);\r\n        resolve();\r\n      };\r\n      tx.onerror = () => reject(tx.error);\r\n    };\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\nasync function readChatlogFromIndexedDB(date) {\r\n  const db = await initChatlogsDB();\r\n  return new Promise((resolve, reject) => {\r\n    const tx = db.transaction(STORE_NAME, 'readonly');\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const req = store.get(date);\r\n    req.onsuccess = () => resolve(req.result); // Return the entire entry object\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\n\r\n// Remove all chatlogs from IndexedDB and reset cache size\r\nasync function deleteAllChatlogsFromIndexedDB() {\r\n  const db = await initChatlogsDB();\r\n  return new Promise((resolve, reject) => {\r\n    const tx = db.transaction(STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const req = store.clear();\r\n    req.onsuccess = () => {\r\n      setCachedTotalSize(0);\r\n      resolve();\r\n    };\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\nasync function listAllChatlogDates() {\r\n  const db = await initChatlogsDB();\r\n  return new Promise((resolve, reject) => {\r\n    const tx = db.transaction(STORE_NAME, 'readonly');\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const req = store.getAllKeys();\r\n    req.onsuccess = () => resolve(req.result);\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\n// --- Caching logic for total chatlogs size ---\r\nconst TOTAL_SIZE_CACHE_KEY = 'chatlogsTotalSizeKB';\r\n\r\nfunction getCachedTotalSize() {\r\n  return parseFloat(localStorage.getItem(TOTAL_SIZE_CACHE_KEY) || '0');\r\n}\r\nfunction setCachedTotalSize(sizeKB) {\r\n  localStorage.setItem(TOTAL_SIZE_CACHE_KEY, Number(sizeKB).toFixed(2));\r\n}\r\n\r\n// Use this for fast UI display\r\nfunction getTotalChatlogsSizeCached() {\r\n  return getCachedTotalSize();\r\n}\r\n\r\n// Optionally, provide a way to recalculate (e.g. on a button click)\r\nasync function recalculateTotalChatlogsSize() {\r\n  const db = await initChatlogsDB();\r\n  return new Promise((resolve, reject) => {\r\n    const tx = db.transaction(STORE_NAME, 'readonly');\r\n    const store = tx.objectStore(STORE_NAME);\r\n    const req = store.getAll();\r\n    req.onsuccess = () => {\r\n      let totalBytes = 0;\r\n      if (Array.isArray(req.result)) {\r\n        for (const entry of req.result) {\r\n          if (entry && entry.html) {\r\n            totalBytes += new Blob([entry.html]).size;\r\n          }\r\n        }\r\n      }\r\n      const totalKB = totalBytes / 1024;\r\n      setCachedTotalSize(totalKB);\r\n      resolve(totalKB);\r\n    };\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsStorage.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsToMessages.js":
/*!***************************************************!*\
  !*** ./src/panels/chatlogs/chatlogsToMessages.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addChatlogsMessageToPersonal: () => (/* binding */ addChatlogsMessageToPersonal)\n/* harmony export */ });\n/* harmony import */ var _messages_messages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messages/messages.js */ \"./src/panels/messages/messages.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Adds a message from chatlogs to personal messages localStorage and triggers UI effect.\r\n * @param {HTMLElement} messageItem - The .message-item element from chatlogs\r\n * @param {HTMLInputElement} dateInput - The date input element (for fallback date)\r\n */\r\nfunction addChatlogsMessageToPersonal(messageItem, dateInput) {\r\n  const username = messageItem.querySelector('.message-username')?.textContent?.trim();\r\n  const messageTextElement = messageItem.querySelector('.message-text');\r\n  const message = messageTextElement ? (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_3__.getFullMessageContent)(messageTextElement) : '';\r\n  const time = messageItem.querySelector('.message-time')?.textContent?.trim();\r\n  // Find the date for this message\r\n  let date = dateInput.value;\r\n  let prev = messageItem.previousElementSibling;\r\n  while (prev && !prev.classList.contains('date-item')) {\r\n    prev = prev.previousElementSibling;\r\n  }\r\n  if (prev && prev.classList.contains('date-item')) {\r\n    const dateText = prev.querySelector('.date-text');\r\n    if (dateText) {\r\n      date = dateText.textContent.trim();\r\n    } else {\r\n      date = prev.textContent.trim();\r\n    }\r\n  }\r\n  // Add to personal messages localStorage\r\n  const personalMessages = JSON.parse(localStorage.getItem(_messages_messages_js__WEBPACK_IMPORTED_MODULE_0__.PERSONAL_MESSAGES_KEY)) || {};\r\n  const userData = JSON.parse(localStorage.getItem(_definitions_js__WEBPACK_IMPORTED_MODULE_1__.USER_DATA_CACHE_KEY) || '{}');\r\n  const key = `[${time}]_${username}_${date}`;\r\n  personalMessages[key] = {\r\n    time: `[${time}]`,\r\n    date: date || _definitions_js__WEBPACK_IMPORTED_MODULE_1__.today,\r\n    username,\r\n    usernameColor: userData[username]?.color || '#808080',\r\n    message,\r\n    type: 'mention',\r\n    userId: userData[username]?.id || ''\r\n  };\r\n  // Save the updated personal messages back to localStorage\r\n  const keys = Object.keys(personalMessages);\r\n  keys.sort((a, b) => {\r\n    const getDateTime = (key) => {\r\n      const obj = personalMessages[key];\r\n      const dateStr = obj.date || '';\r\n      const timeStr = (obj.time || '').replace(/\\[|\\]/g, '');\r\n      // Fallback to 00:00:00 if time missing\r\n      return new Date(`${dateStr}T${timeStr || '00:00:00'}`);\r\n    };\r\n    return getDateTime(a) - getDateTime(b);\r\n  });\r\n  const orderedPersonalMessages = {};\r\n  for (const k of keys) {\r\n    orderedPersonalMessages[k] = personalMessages[k];\r\n  }\r\n  localStorage.setItem(_messages_messages_js__WEBPACK_IMPORTED_MODULE_0__.PERSONAL_MESSAGES_KEY, JSON.stringify(orderedPersonalMessages));\r\n  (0,_animations_js__WEBPACK_IMPORTED_MODULE_2__.addJumpEffect)(messageItem, 0, 0);\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsToMessages.js?");

/***/ }),

/***/ "./src/panels/chatlogs/chatlogsUserlist.js":
/*!*************************************************!*\
  !*** ./src/panels/chatlogs/chatlogsUserlist.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderActiveUsers: () => (/* binding */ renderActiveUsers)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n/**\r\n * Render the active users list based on their message counts.\r\n * @param {Map} usernameMessageCountMap - Map of username to message count\r\n * @param {HTMLElement} parentContainer - The panel or container to render the userlist into\r\n */\r\nfunction renderActiveUsers(usernameMessageCountMap, parentContainer) {\r\n  if (localStorage.getItem('shouldShowActiveUsers') === 'shown') {\r\n\r\n    let activeUsers = parentContainer.querySelector('.active-users');\r\n    if (!activeUsers) {\r\n      activeUsers = document.createElement('div');\r\n      activeUsers.className = 'active-users';\r\n      parentContainer.appendChild(activeUsers);\r\n    }\r\n\r\n    // Sort usernames by message count in descending order\r\n    const sortedUsernames = Array.from(usernameMessageCountMap.entries())\r\n      .sort(([, countA], [, countB]) => countB - countA);\r\n    activeUsers.innerHTML = '';\r\n\r\n    // Parse user data cache once per render\r\n    const userData = JSON.parse(localStorage.getItem(_definitions_js__WEBPACK_IMPORTED_MODULE_0__.USER_DATA_CACHE_KEY) || '{}');\r\n    const fragment = document.createDocumentFragment();\r\n    sortedUsernames.forEach(([username, count]) => {\r\n      const userElement = document.createElement('div');\r\n      userElement.className = 'active-user-item';\r\n\r\n      const nicknameElement = document.createElement('span');\r\n      nicknameElement.className = 'active-user-name';\r\n      nicknameElement.textContent = username;\r\n\r\n      // Use cached color for username\r\n      const color = userData[username]?.color || '#808080';\r\n      nicknameElement.style.color = color;\r\n\r\n      const messageCountElement = document.createElement('span');\r\n      messageCountElement.className = 'active-user-messages-count';\r\n      messageCountElement.textContent = count;\r\n      messageCountElement.style.color = color;\r\n      messageCountElement.style.backgroundColor = color + '20'; // add alpha for background\r\n\r\n      userElement.appendChild(messageCountElement);\r\n      userElement.appendChild(nicknameElement);\r\n      fragment.appendChild(userElement);\r\n    });\r\n    activeUsers.appendChild(fragment);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/chatlogs/chatlogsUserlist.js?");

/***/ }),

/***/ "./src/panels/messages/messages.js":
/*!*****************************************!*\
  !*** ./src/panels/messages/messages.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ABSENT_MENTIONS_CACHE_KEY: () => (/* binding */ ABSENT_MENTIONS_CACHE_KEY),\n/* harmony export */   PERSONAL_MESSAGES_KEY: () => (/* binding */ PERSONAL_MESSAGES_KEY),\n/* harmony export */   createMessagesButton: () => (/* binding */ createMessagesButton),\n/* harmony export */   showMessagesPanel: () => (/* binding */ showMessagesPanel)\n/* harmony export */ });\n/* harmony import */ var _messages_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./messages.scss */ \"./src/panels/messages/messages.scss\");\n/* harmony import */ var _converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../converters/imageConverter.js */ \"./src/converters/imageConverter.js\");\n/* harmony import */ var _converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../converters/videoConverter.js */ \"./src/converters/videoConverter.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/messagesSearch.js */ \"./src/helpers/messagesSearch.js\");\n/* harmony import */ var _messagesHelpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./messagesHelpers.js */ \"./src/panels/messages/messagesHelpers.js\");\n/* harmony import */ var _helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/urlUtils.js */ \"./src/helpers/urlUtils.js\");\n/* harmony import */ var _helpers_messagesFormatter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/messagesFormatter.js */ \"./src/helpers/messagesFormatter.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/scrollButtons.js */ \"./src/helpers/scrollButtons.js\");\n/* harmony import */ var _helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/getLatestMessageData.js */ \"./src/helpers/getLatestMessageData.js\");\n/* harmony import */ var _messagesDelegatedTooltips_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./messagesDelegatedTooltips.js */ \"./src/panels/messages/messagesDelegatedTooltips.js\");\n/* harmony import */ var _messagesDelegatedEvents_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./messagesDelegatedEvents.js */ \"./src/panels/messages/messagesDelegatedEvents.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n\r\n\r\n\r\n// icons\r\n\r\n\r\n// helpers && helpers definitions\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// definitions\r\n\r\n\r\n// Define dynamic variables\r\nlet {\r\n  panelsEvents\r\n} = _definitions_js__WEBPACK_IMPORTED_MODULE_16__.state;\r\n\r\n// Define the localStorage keys in one place\r\nconst PERSONAL_MESSAGES_KEY = 'personalMessages';\r\nconst NEW_MESSAGES_COUNT_KEY = 'newMessagesCount';\r\nconst PERSONAL_MESSAGES_BACKUP_KEY = 'personalMessagesBackup';\r\nconst ABSENT_MENTIONS_CACHE_KEY = 'absentMentionsLastFetch';\r\n\r\n// Function to create the button for opening personal messages\r\nfunction createMessagesButton(panel) {\r\n  const showPersonalMessagesButton = document.createElement('div');\r\n  showPersonalMessagesButton.classList.add(\"empowerment-button\", \"personal-messages-button\");\r\n  showPersonalMessagesButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.personalMessagesSVG;\r\n\r\n  // Create the small indicator for all message count\r\n  const allMessageIndicator = document.createElement('div');\r\n  allMessageIndicator.classList.add(\"message-count\", \"total-message-count\");\r\n  const personalMessages = JSON.parse(localStorage.getItem(PERSONAL_MESSAGES_KEY)) || {};\r\n  allMessageIndicator.textContent = Object.keys(personalMessages).length;\r\n  showPersonalMessagesButton.appendChild(allMessageIndicator);\r\n\r\n  // Create the small indicator for new message count\r\n  const newMessageIndicator = document.createElement('div');\r\n  newMessageIndicator.classList.add(\"message-count\", \"new-message-count\");\r\n\r\n  // Get the new messages count from localStorage or set to 0 if not present\r\n  let newMessagesCount = Number(localStorage.getItem(NEW_MESSAGES_COUNT_KEY)) || (localStorage.setItem(NEW_MESSAGES_COUNT_KEY, '0'), 0);\r\n\r\n  newMessageIndicator.textContent = newMessagesCount;\r\n  newMessageIndicator.style.visibility = newMessagesCount > 0 ? 'visible' : 'hidden';\r\n  showPersonalMessagesButton.appendChild(newMessageIndicator);\r\n\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(showPersonalMessagesButton, {\r\n    en: 'Open Messages',\r\n    ru: 'Открыть сообщения'\r\n  });\r\n\r\n  showPersonalMessagesButton.addEventListener('click', function () {\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_10__.addPulseEffect)(showPersonalMessagesButton);\r\n    showMessagesPanel();\r\n    const personalMessagesCount = Object.keys(JSON.parse(localStorage.getItem(PERSONAL_MESSAGES_KEY)) || {}).length;\r\n    if (personalMessagesCount > 0) {\r\n      localStorage.setItem(NEW_MESSAGES_COUNT_KEY, '0');\r\n      newMessagesCount = 0;\r\n      newMessageIndicator.textContent = newMessagesCount;\r\n    }\r\n  });\r\n\r\n  panel.appendChild(showPersonalMessagesButton);\r\n} // createMessagesButton END\r\n\r\n// Function to display the personal messages panel\r\nasync function showMessagesPanel() {\r\n  const existingPanel = document.querySelector('.cached-messages-panel');\r\n  if (existingPanel) {\r\n    existingPanel.remove();\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerDimmingElement)('hide');\r\n    return;\r\n  }\r\n\r\n  // Flag to track if this is the first time the panel is being run\r\n  let isFirstPanelRun = true;\r\n  // Flag to track if messages are being imported\r\n  let isMessagesImport = false;\r\n  let isConvertingContent = false;\r\n\r\n  // Update the message count after panel load to reset the value if messages were not saved\r\n  (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_6__.updateMessageCount)();\r\n  // Remove 'personalMessagesBackup' from localStorage if it exists\r\n  if (localStorage.getItem(PERSONAL_MESSAGES_BACKUP_KEY)) localStorage.removeItem(PERSONAL_MESSAGES_BACKUP_KEY);\r\n  // Remove any previous panel before creating a new one\r\n  (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.removePreviousPanel)();\r\n\r\n  // Reset the new messages indicator to 0\r\n  const newMessagesCountElement = document.querySelector('.personal-messages-button .new-message-count');\r\n  if (newMessagesCountElement) newMessagesCountElement.textContent = '0';\r\n  newMessagesCountElement.style.visibility = 'hidden';\r\n  // Remove the localStorage key for new personal messages after opening the messages panel (always)\r\n  localStorage.removeItem(NEW_MESSAGES_COUNT_KEY);\r\n\r\n  let messages = (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_6__.getMessages)();\r\n\r\n  // Create a container div with class 'cached-messages-panel'\r\n  const cachedMessagesPanel = document.createElement('div');\r\n  cachedMessagesPanel.className = 'cached-messages-panel popup-panel';\r\n\r\n  // Create a container div for the panel header\r\n  const panelHeaderContainer = document.createElement('div');\r\n  panelHeaderContainer.className = 'panel-header';\r\n\r\n  // Create the search input container and append it to the panel header\r\n  const messagesSearchContainer = document.createElement('div');\r\n  messagesSearchContainer.className = 'search-for-personal-messages';\r\n\r\n  // Create the input field for searching personal messages\r\n  const messagesSearchInput = document.createElement('input');\r\n  messagesSearchInput.className = 'personal-messages-search-input';\r\n  messagesSearchInput.type = 'search';\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(messagesSearchInput, {\r\n    en: `\r\n      [Ctrl + Click] to clear search input and display all personal messages\r\n      [Search by name]: name(, name2…); prefix: name (partial) or prefix:: name (exact), e.g. name: iv / name:: Ivan. Prefixes: user, username, nick, name, nickname.\r\n      [Search by word]: word(, or(\\\\/|) word2…); prefix: word (partial) or prefix:: word (exact), e.g. word: priv / word:: privet. Prefixes: msg, message, text, word, content.\r\n    `,\r\n    ru: `\r\n      [Ctrl + Click] чтобы очистить поиск и показать все личные сообщения\r\n      [Поиск по имени]: имя(, имя2…); приставка: имя (неполное) или приставка:: имя (точное), напр. имя: ив / имя:: Иван. Приставки: пользователь, ник, имя, никнейм.\r\n      [Поиск по слову]: слово(. или(\\\\/|) слово2…); приставка: слово (неполное) или приставка:: слово (точное), напр. слово: прив / слово:: привет. Приставки: сообщение, текст, слово, контент. \r\n    `\r\n  });\r\n\r\n  messagesSearchContainer.appendChild(messagesSearchInput);\r\n\r\n  const panelControlButtons = document.createElement('div');\r\n  panelControlButtons.className = 'panel-control-buttons';\r\n\r\n  const saveMessagesButton = document.createElement('div');\r\n  saveMessagesButton.className = 'large-button panel-header-save-button';\r\n  saveMessagesButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.saveSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(saveMessagesButton, {\r\n    en: 'Save messages',\r\n    ru: 'Сохранить сообщения'\r\n  });\r\n  saveMessagesButton.style.opacity = \"0\";\r\n\r\n  saveMessagesButton.addEventListener('click', () => {\r\n    const backupData = localStorage.getItem(PERSONAL_MESSAGES_BACKUP_KEY);\r\n    const originalData = localStorage.getItem(PERSONAL_MESSAGES_KEY);\r\n\r\n    const bothDataExist = backupData && originalData;\r\n    const hasDataChanged = bothDataExist && originalData !== backupData;\r\n\r\n    if (!bothDataExist) return;\r\n\r\n    if (hasDataChanged && !isFirstPanelRun) {\r\n      const userConfirmed = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.localizedMessage)({\r\n        en: \"Do you want to apply changes?\",\r\n        ru: \"Вы хотите применить изменения?\"\r\n      }, 'confirm');\r\n      if (userConfirmed) {\r\n        localStorage.setItem(PERSONAL_MESSAGES_KEY, backupData);\r\n        localStorage.removeItem(PERSONAL_MESSAGES_BACKUP_KEY);\r\n        saveMessagesButton.style.setProperty('display', 'none', 'important');\r\n        saveMessagesButton.style.opacity = '0'; // Hide the save button after saving\r\n        // Wait for the opacity transition to finish before hiding the element\r\n        saveMessagesButton.addEventListener('transitionend', function () {\r\n          saveMessagesButton.style.display = 'none';\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  const importMessagesButton = document.createElement('div');\r\n  importMessagesButton.className = \"large-button panel-header-import-button\";\r\n  importMessagesButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.importSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(importMessagesButton, {\r\n    en: 'Import messages',\r\n    ru: 'Импортировать сообщения'\r\n  });\r\n\r\n  importMessagesButton.addEventListener('click', () => {\r\n    isMessagesImport = true;\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = '.json';\r\n\r\n    input.addEventListener('change', (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async () => {\r\n          try {\r\n            const importedMessages = JSON.parse(reader.result);\r\n            const existingMessages = JSON.parse(localStorage.getItem(PERSONAL_MESSAGES_KEY) || '{}');\r\n\r\n            const mergedMessages = { ...existingMessages, ...importedMessages };\r\n            const cleanedMergedMessages = Object.fromEntries(\r\n              Object.entries(mergedMessages)\r\n                .sort(([, valueA], [, valueB]) => {\r\n                  // Temporarily clean the time for sorting purposes (no change to original time)\r\n                  const cleanedTimeA = valueA.time.replace(/[[\\]]/g, '');\r\n                  const cleanedTimeB = valueB.time.replace(/[[\\]]/g, '');\r\n\r\n                  // Combine date and cleaned time for comparison\r\n                  const dateTimeA = `${valueA.date} ${cleanedTimeA}`;\r\n                  const dateTimeB = `${valueB.date} ${cleanedTimeB}`;\r\n\r\n                  // Convert to Date objects for sorting\r\n                  return new Date(dateTimeA) - new Date(dateTimeB);\r\n                })\r\n            );\r\n\r\n            // Store the merged messages back in localStorage (time remains unchanged with square brackets)\r\n            localStorage.setItem(PERSONAL_MESSAGES_KEY, JSON.stringify(cleanedMergedMessages));\r\n\r\n            (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_6__.updateMessageCount)(); // Update the message count after import\r\n\r\n            // Load imported messages\r\n            const messages = (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_6__.getMessages)();\r\n            await loadMessages(messages);\r\n          } catch (error) {\r\n            (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.localizedMessage)({\r\n              en: 'Failed to import messages. The file may be corrupted.',\r\n              ru: 'Не удалось импортировать сообщения. Возможно, файл поврежден.'\r\n            }, 'alert');\r\n          }\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    });\r\n\r\n    input.click();\r\n  });\r\n\r\n  const exportMessagesButton = document.createElement('div');\r\n  exportMessagesButton.className = \"large-button panel-header-export-button\";\r\n  exportMessagesButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.exportSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(exportMessagesButton, {\r\n    en: 'Export messages',\r\n    ru: 'Экспортировать сообщения'\r\n  });\r\n\r\n  exportMessagesButton.addEventListener('click', () => {\r\n    const messages = localStorage.getItem(PERSONAL_MESSAGES_KEY);\r\n    if (messages && messages !== '{}') {\r\n      const currentDate = new Intl.DateTimeFormat('en-CA').format(new Date());\r\n      const messagesObject = JSON.parse(messages);\r\n      const formattedMessages = JSON.stringify(messagesObject, null, 2);\r\n      const blob = new Blob([formattedMessages], { type: 'application/json' });\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = `Personal_Messages_${currentDate}.json`;\r\n      link.click();\r\n    } else {\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.localizedMessage)({\r\n        en: 'No messages to export.',\r\n        ru: 'Нет сообщений для экспорта.'\r\n      }, 'alert');\r\n    }\r\n  });\r\n\r\n  const copyPersonalMessagesButton = document.createElement('div');\r\n  copyPersonalMessagesButton.className = \"large-button panel-header-copy-button\";\r\n  copyPersonalMessagesButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.clipboardSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(copyPersonalMessagesButton, {\r\n    en: `\r\n      [Click] copy messages in BBCode, Markdown, or Plain format\r\n      [Shift + Click] save messages in BBCode, Markdown, or Plain format\r\n    `,\r\n    ru: `\r\n      [Клик] скопировать сообщения в BBCode, Markdown или Plain формате\r\n      [Shift + Клик] сохранить сообщения в BBCode, Markdown или Plain формате\r\n    `\r\n  });\r\n\r\n  // Event listener to handle copy actions\r\n  copyPersonalMessagesButton.addEventListener('click', (event) => {\r\n    // Prevent copy/save if there are no messages\r\n    const messagesData = localStorage.getItem(PERSONAL_MESSAGES_KEY);\r\n    if (!messagesData || messagesData === '{}' || Object.keys(JSON.parse(messagesData)).length === 0) {\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.localizedMessage)({\r\n        en: 'No messages to copy or save.',\r\n        ru: 'Нет сообщений для копирования или сохранения.'\r\n      }, 'alert');\r\n      return;\r\n    }\r\n    // Create a new event object to simulate the desired behavior\r\n    const modifiedEvent = new MouseEvent('click', {\r\n      altKey: true, // Always set altKey to true to trigger format prompt\r\n      shiftKey: event.shiftKey, // Preserve Shift key state (true for Shift+Click, false otherwise)\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n\r\n    // Handle export with the modified event\r\n    (0,_helpers_messagesFormatter_js__WEBPACK_IMPORTED_MODULE_8__.handleExportClick)(modifiedEvent, messagesContainer, {\r\n      date: _definitions_js__WEBPACK_IMPORTED_MODULE_16__.today,\r\n      isMessagesPanel: true,\r\n      includeDateHeaders: true,\r\n      includeMessageLinks: true,\r\n      prefix: 'messages',\r\n      messages\r\n    });\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_10__.addJumpEffect)(copyPersonalMessagesButton);\r\n  });\r\n\r\n  const clearCacheButton = document.createElement('div');\r\n  clearCacheButton.className = \"large-button panel-header-clear-button\";\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(clearCacheButton, {\r\n    en: 'Clear personal messages',\r\n    ru: 'Очистить личные сообщения'\r\n  });\r\n  clearCacheButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.trashSVG;\r\n\r\n  clearCacheButton.addEventListener('click', () => {\r\n    // Set the flag to true when clear messages is initiated\r\n    isMessagesImport = true;\r\n    // Check if there are any messages before attempting to clear\r\n    const messages = JSON.parse(localStorage.getItem(PERSONAL_MESSAGES_KEY) || '{}');\r\n    if (Object.keys(messages).length === 0) {\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.localizedMessage)({\r\n        en: 'No messages to delete.',\r\n        ru: 'Нет сообщений для удаления.'\r\n      }, 'alert');\r\n      return;\r\n    }\r\n    // Clear the messages container\r\n    messagesContainer.innerHTML = null;\r\n\r\n    // Set the 'personalMessages' key in localStorage to an empty object\r\n    localStorage.setItem(PERSONAL_MESSAGES_KEY, JSON.stringify({}));\r\n\r\n    // Fade out the cached messages panel when the clear cache button is clicked\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerTargetElement)(cachedMessagesPanel, 'hide');\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerDimmingElement)('hide');\r\n\r\n    // Update the message count displayed in the personal messages button\r\n    const messagesCountElement = document.querySelector('.personal-messages-button .total-message-count');\r\n    if (messagesCountElement) messagesCountElement.textContent = '0';\r\n  });\r\n\r\n  const closePanelButton = document.createElement('div');\r\n  closePanelButton.className = \"large-button panel-header-close-button\";\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_11__.createCustomTooltip)(closePanelButton, {\r\n    en: 'Close panel',\r\n    ru: 'Закрыть панель'\r\n  });\r\n  closePanelButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_3__.closeSVG;\r\n\r\n  closePanelButton.addEventListener('click', () => {\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerTargetElement)(cachedMessagesPanel, 'hide');\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerDimmingElement)('hide');\r\n  });\r\n\r\n  panelHeaderContainer.appendChild(messagesSearchContainer);\r\n\r\n  panelControlButtons.appendChild(saveMessagesButton);\r\n  panelControlButtons.appendChild(importMessagesButton);\r\n  panelControlButtons.appendChild(exportMessagesButton);\r\n  panelControlButtons.appendChild(copyPersonalMessagesButton);\r\n  panelControlButtons.appendChild(clearCacheButton);\r\n  panelControlButtons.appendChild(closePanelButton);\r\n\r\n  panelHeaderContainer.appendChild(panelControlButtons);\r\n\r\n  cachedMessagesPanel.appendChild(panelHeaderContainer);\r\n\r\n  const messagesContainer = document.createElement('div');\r\n  messagesContainer.className = 'messages-container messages-search-container';\r\n\r\n  // Add scroll event listener to save scroll position only if mouse is over the container\r\n\r\n  cachedMessagesPanel.appendChild(messagesContainer);\r\n\r\n  function attachMutationObserver() {\r\n    // Set up MutationObserver to monitor removal of child elements\r\n    const observer = new MutationObserver(mutationsList => {\r\n      // Skip the observer actions if messages are being imported\r\n      if (isMessagesImport) return;\r\n\r\n      // Check if any node was removed from the messages container\r\n      const removedNode = mutationsList.find(mutation => mutation.type === 'childList' && mutation.removedNodes.length > 0);\r\n\r\n      if (removedNode && saveMessagesButton.style.opacity === '0') {\r\n        isFirstPanelRun = false;\r\n\r\n        // Ensure button is visible and part of the layout before applying opacity\r\n        saveMessagesButton.style.visibility = 'visible'; // Make the button interactable\r\n        saveMessagesButton.style.display = 'flex'; // Set display to flex to reveal it\r\n        saveMessagesButton.offsetHeight; // Ensure styles are applied before transition starts\r\n\r\n        // Apply opacity to fade the button in\r\n        saveMessagesButton.style.opacity = '1';\r\n        saveMessagesButton.style.transition = 'opacity 0.5s ease';\r\n      }\r\n    });\r\n    observer.observe(messagesContainer, { childList: true, subtree: true });\r\n  }\r\n\r\n  let lastDate = null; // Store the last processed date\r\n  let lastUsername = null; // Store the last username processed\r\n  let pingCheckCounter = 0; // Initialize a counter\r\n  let maxPingChecks = 100; // Set the limit to 100\r\n\r\n  // Create an array to store message elements for later appending\r\n  const messageElements = [];\r\n\r\n  // Load messages on initial panel open\r\n  async function loadMessages(messages) {\r\n    messagesContainer.children.length && messagesContainer.replaceChildren();\r\n\r\n    // Use a DocumentFragment to batch DOM updates\r\n    const fragment = document.createDocumentFragment();\r\n    let lastDate = null;\r\n    let lastUsername = null;\r\n\r\n    Object.entries(messages).forEach(([, { time, date, username, usernameColor, message, type, userId }]) => {\r\n      // If the current date is different from the last processed one, create a new date-item\r\n      if (lastDate !== date) {\r\n        const dateItem = document.createElement('div');\r\n        dateItem.className = 'date-item';\r\n\r\n        // Create main date text\r\n        const dateTextSpan = document.createElement('span');\r\n        dateTextSpan.className = 'date-text';\r\n        dateTextSpan.textContent = date === _definitions_js__WEBPACK_IMPORTED_MODULE_16__.today ? 'Today' : date;\r\n\r\n        // Create emoji icon separately\r\n        const emojiSpan = document.createElement('span');\r\n        emojiSpan.className = 'date-emoji';\r\n        emojiSpan.textContent = date === _definitions_js__WEBPACK_IMPORTED_MODULE_16__.today ? ' ⏳' : ' 📅';\r\n\r\n        // Append both to date item\r\n        dateItem.appendChild(dateTextSpan);\r\n        dateItem.appendChild(emojiSpan);\r\n\r\n        dateItem.dataset.date = date;\r\n        fragment.appendChild(dateItem);\r\n        lastDate = date;\r\n      }\r\n\r\n      const messageElement = document.createElement('div');\r\n      messageElement.className = 'message-item';\r\n      messageElement.dataset.type = type;\r\n\r\n      // Use a simple key for last clicked message\r\n      const messageKey = `${date}|${time}|${username}`;\r\n      messageElement.setAttribute('data-message-key', messageKey);\r\n\r\n      // Add margin-top if this is the first message of a new username group\r\n      if (username !== lastUsername) {\r\n        messageElement.style.marginTop = '0.6em';\r\n        lastUsername = username;\r\n      }\r\n\r\n      // Remove square brackets from the time string\r\n      const formattedTime = time.replace(/[\\[\\]]/g, '').trim();\r\n\r\n      const timeElement = document.createElement('span');\r\n      timeElement.className = 'message-time';\r\n      timeElement.textContent = formattedTime;\r\n      timeElement.style.color = _definitions_js__WEBPACK_IMPORTED_MODULE_16__.timeColors[type] || 'slategray';\r\n\r\n      const usernameElement = document.createElement('span');\r\n      usernameElement.className = 'message-username';\r\n      usernameElement.textContent = username;\r\n      usernameElement.style.color = usernameColor;\r\n      usernameElement.dataset.userId = userId;\r\n\r\n      const messageTextElement = document.createElement('span');\r\n      messageTextElement.className = 'message-text';\r\n\r\n      // Replace smiley codes with <img> tags, and then wrap links with <a> tags\r\n      messageTextElement.innerHTML = message\r\n        // Replace smiley codes like :word: with <img> tags\r\n        .replace(/:(?=\\w*[a-zA-Z])(\\w+):/g,\r\n          (_, word) => `<img src=\"/img/smilies/${word}.gif\" alt=\":${word}:\" title=\":${word}:\" class=\"smile\">`\r\n        )\r\n        // Wrap http and https links with <a> tags\r\n        .replace(/(https?:\\/\\/[^\\s]+)/gi,\r\n          (url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`\r\n        );\r\n\r\n      // Store elements for (pingable messages) colorization after all processing\r\n      const messageData = {\r\n        messageTextElement,\r\n        time,\r\n        username,\r\n        type\r\n      };\r\n\r\n      // Add messageData to the array for later processing\r\n      messageElements.push(messageData);\r\n\r\n      // Append time, username, and message to the message element\r\n      messageElement.appendChild(timeElement);\r\n      messageElement.appendChild(usernameElement);\r\n      messageElement.appendChild(messageTextElement);\r\n\r\n      // Append the message element to the fragment\r\n\r\n      // Add click handler to save last clicked message\r\n      messageElement.addEventListener('click', function (e) {\r\n        localStorage.setItem('lastClickedMessage', messageKey);\r\n      });\r\n\r\n      fragment.appendChild(messageElement);\r\n    });\r\n\r\n    // After all elements are created, append the fragment to the container\r\n    messagesContainer.appendChild(fragment);\r\n\r\n    requestAnimationFrame(() => {\r\n      // Set flag before conversions\r\n      isConvertingContent = true;\r\n\r\n      (0,_converters_imageConverter_js__WEBPACK_IMPORTED_MODULE_1__.convertImageLinksToImage)('personalMessages');\r\n      (0,_converters_videoConverter_js__WEBPACK_IMPORTED_MODULE_2__.convertVideoLinksToPlayer)('personalMessages');\r\n      (0,_helpers_urlUtils_js__WEBPACK_IMPORTED_MODULE_7__.processEncodedLinks)('personalMessages');\r\n      (0,_helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_13__.highlightMentionWords)('personalMessages');\r\n\r\n      // Reset flags and attach observer after a reasonable delay\r\n      setTimeout(() => {\r\n        isConvertingContent = false;\r\n        isMessagesImport = false;\r\n        attachMutationObserver();\r\n\r\n        // Highlight the last clicked message if present in localStorage\r\n        const lastClickedKey = localStorage.getItem('lastClickedMessage');\r\n        if (lastClickedKey) {\r\n          const lastMessage = messagesContainer.querySelector(`[data-message-key=\"${lastClickedKey}\"]`);\r\n          if (lastMessage) {\r\n            lastMessage.classList.add('previous-message');\r\n            lastMessage.scrollIntoView({ block: 'center', behavior: 'smooth' });\r\n          }\r\n        }\r\n      }, 500);\r\n    });\r\n\r\n    // Process the colorization logic in reverse order\r\n    messageElements.reverse().forEach(async ({ messageTextElement, username, type }) => {\r\n      let isPingableMessage = false;\r\n\r\n      // Only check for pingable messages if we haven't exceeded the limit\r\n      if (pingCheckCounter < maxPingChecks) {\r\n        // Use the actual message text content for searching\r\n        const messageText = messageTextElement.textContent;\r\n\r\n        try {\r\n          // Check if this message exists in general chat\r\n          const foundMessage = await (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_6__.findGeneralChatMessage)(messageText, username, false);\r\n          isPingableMessage = Boolean(foundMessage);\r\n          pingCheckCounter++;\r\n          if (pingCheckCounter >= maxPingChecks) {\r\n            console.log(\"Reached maximum ping checks limit.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error checking for pingable message:\", error);\r\n          isPingableMessage = false;\r\n        }\r\n      }\r\n\r\n      // Colorize the messageTextElement accordingly (Pingable messages)\r\n      messageTextElement.style.color =\r\n        isPingableMessage && type === 'mention' ? 'lightgreen' :\r\n          isPingableMessage && type === 'private' ? 'lemonchiffon' :\r\n            _definitions_js__WEBPACK_IMPORTED_MODULE_16__.messageColors[type] || _definitions_js__WEBPACK_IMPORTED_MODULE_16__.messageColors.default;\r\n    });\r\n  }\r\n\r\n  await loadMessages(messages);\r\n\r\n  document.body.appendChild(cachedMessagesPanel);\r\n\r\n  // Create and append scroll buttons\r\n  const { scrollButtonsContainer } = (0,_helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_12__.createScrollButtons)(messagesContainer);\r\n  cachedMessagesPanel.appendChild(scrollButtonsContainer);\r\n\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerTargetElement)(cachedMessagesPanel, 'show');\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerDimmingElement)('show');\r\n\r\n  // Add click event listener to clear the search input by LMB click with Ctrl key pressed\r\n  messagesSearchInput.addEventListener('click', (event) => {\r\n    if (event.ctrlKey) {\r\n      messagesSearchInput.value = '';\r\n      messagesSearchInput.dispatchEvent(new Event('input', { bubbles: true }));\r\n    }\r\n  });\r\n\r\n  // Event listener to handle input search for matching personal messages\r\n  // It searches through messages grouped by date and displays the corresponding date\r\n  // Only if there are matching messages in that group.\r\n  messagesSearchInput.addEventListener('input', () => {\r\n    // Use the unified filterMessages for personal messages\r\n    (0,_helpers_messagesSearch_js__WEBPACK_IMPORTED_MODULE_5__.filterMessages)(messagesSearchInput.value);\r\n  });\r\n\r\n  // Focus on the search input using requestAnimationFrame\r\n  function focusOnSearchField() { requestAnimationFrame(function () { messagesSearchInput.focus(); }); } focusOnSearchField();\r\n\r\n  panelsEvents.handlePersonalMessagesKeydown = (event) => {\r\n    if (event.key === 'Escape') {\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerTargetElement)(cachedMessagesPanel, 'hide');\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_9__.triggerDimmingElement)('hide');\r\n      document.removeEventListener('keydown', panelsEvents.handlePersonalMessagesKeydown);\r\n    }\r\n  };\r\n  document.addEventListener('keydown', panelsEvents.handlePersonalMessagesKeydown);\r\n\r\n  // Setup delegated tooltips and events\r\n  (0,_messagesDelegatedTooltips_js__WEBPACK_IMPORTED_MODULE_14__.setupMessagesTooltips)(cachedMessagesPanel);\r\n  (0,_messagesDelegatedEvents_js__WEBPACK_IMPORTED_MODULE_15__.setupMessagesEvents)(messagesContainer, showMessagesPanel);\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messages.js?");

/***/ }),

/***/ "./src/panels/messages/messages.scss":
/*!*******************************************!*\
  !*** ./src/panels/messages/messages.scss ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messages_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./messages.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/messages/messages.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messages_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messages_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messages_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messages_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messages.scss?");

/***/ }),

/***/ "./src/panels/messages/messagesDelegatedEvents.js":
/*!********************************************************!*\
  !*** ./src/panels/messages/messagesDelegatedEvents.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupMessagesEvents: () => (/* binding */ setupMessagesEvents)\n/* harmony export */ });\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messagesHelpers.js */ \"./src/panels/messages/messagesHelpers.js\");\n/* harmony import */ var _chatlogs_chatlogs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chatlogs/chatlogs.js */ \"./src/panels/chatlogs/chatlogs.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction setupMessagesEvents(messagesContainer, showMessagesPanel) {\r\n  // Helper function to hide panels - extracted to avoid duplication\r\n  function hidePanelsAfterMessageFound() {\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__.triggerTargetElement)(messagesContainer.closest('.cached-messages-panel'), 'hide');\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__.triggerDimmingElement)('hide');\r\n  }\r\n\r\n  messagesContainer.addEventListener('mouseover', function (event) {\r\n    const timeEl = event.target.closest('.message-time');\r\n    if (timeEl && messagesContainer.contains(timeEl)) {\r\n      const messageItem = timeEl.closest('.message-item');\r\n      if (!messageItem) return;\r\n      const type = messageItem.dataset.type;\r\n      if (type === 'mention' || type === 'private') {\r\n        timeEl.style.color = type === 'mention' ? 'lightgreen' : 'peachpuff';\r\n      }\r\n    }\r\n  });\r\n\r\n  messagesContainer.addEventListener('mouseout', function (event) {\r\n    const timeEl = event.target.closest('.message-time');\r\n    if (timeEl && messagesContainer.contains(timeEl)) {\r\n      const messageItem = timeEl.closest('.message-item');\r\n      if (!messageItem) return;\r\n      const type = messageItem.dataset.type;\r\n      if (type === 'mention' || type === 'private') {\r\n        timeEl.style.color = _definitions_js__WEBPACK_IMPORTED_MODULE_4__.timeColors[type] || 'slategray';\r\n      }\r\n    }\r\n  });\r\n\r\n  messagesContainer.addEventListener('click', async function (event) {\r\n    const timeEl = event.target.closest('.message-time');\r\n    const usernameEl = event.target.closest('.message-username');\r\n    const messageTextEl = event.target.closest('.message-text');\r\n    const messageItem = event.target.closest('.message-item');\r\n    if (!messageItem) return;\r\n\r\n    if (timeEl && messageItem.contains(timeEl)) {\r\n      const type = messageItem.dataset.type;\r\n      let date;\r\n      let prev = messageItem.previousElementSibling;\r\n      while (prev && !prev.classList.contains('date-item')) {\r\n        prev = prev.previousElementSibling;\r\n      }\r\n      if (prev) date = prev.dataset.date;\r\n      if (type === 'mention' || type === 'private') {\r\n        if (event.shiftKey) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          if (type === 'mention') {\r\n            (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_0__.copyChatlogsUrlToClipboard)(date, (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.calibrateToMoscowTime)(timeEl.textContent), timeEl);\r\n          }\r\n          // For private messages, do nothing (no chatlogs URL)\r\n          return;\r\n        }\r\n        if (event.ctrlKey) {\r\n          (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.removeMessage)(messageItem, 'from');\r\n          return;\r\n        }\r\n        if (type === 'mention') {\r\n          const url = `https://klavogonki.ru/chatlogs/${date}.html#${(0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.calibrateToMoscowTime)(timeEl.textContent)}`;\r\n          window.open(url, '_blank', 'noopener,noreferrer');\r\n        }\r\n      }\r\n    }\r\n\r\n    if (usernameEl && messageItem.contains(usernameEl)) {\r\n      if (event.ctrlKey) {\r\n        (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.removeMessage)(messageItem, 'all');\r\n        return;\r\n      }\r\n      const userId = usernameEl.dataset.userId;\r\n      if (userId) {\r\n        const url = `https://klavogonki.ru/u/#/${userId}/`;\r\n        window.open(url, '_blank', 'noopener,noreferrer');\r\n      } else {\r\n        (0,_animations_js__WEBPACK_IMPORTED_MODULE_5__.addShakeEffect)(usernameEl);\r\n      }\r\n    }\r\n\r\n    if (messageTextEl && messageItem.contains(messageTextEl)) {\r\n      if (event.ctrlKey) {\r\n        // Prevent link navigation on ctrl+click for message links\r\n        if (event.target.closest('a')) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n        (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.removeMessage)(messageItem, 'single');\r\n        return;\r\n      }\r\n      const username = messageItem.querySelector('.message-username')?.textContent;\r\n      const time = messageItem.querySelector('.message-time')?.textContent;\r\n      const type = messageItem.dataset.type;\r\n\r\n      if (type === 'private') {\r\n        requestAnimationFrame(async () => {\r\n          const foundGeneralChatMessage = await (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.findGeneralChatMessage)(messageTextEl.textContent, username, true);\r\n          if (foundGeneralChatMessage) {\r\n            hidePanelsAfterMessageFound();\r\n          } else {\r\n            (0,_animations_js__WEBPACK_IMPORTED_MODULE_5__.addShakeEffect)(messageItem);\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      // For mention messages: search in general chat first, then chat logs if not found\r\n      const foundGeneralChatMessage = await (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.findGeneralChatMessage)(messageTextEl.textContent, username, true);\r\n      if (foundGeneralChatMessage) {\r\n        hidePanelsAfterMessageFound();\r\n      } else {\r\n        (0,_animations_js__WEBPACK_IMPORTED_MODULE_5__.addShakeEffect)(messageItem);\r\n        // If message not found in general chat, try chat logs (only for mention messages)\r\n        let previousElement = messageTextEl.parentElement.previousElementSibling;\r\n        while (previousElement && !previousElement.classList.contains('date-item')) {\r\n          previousElement = previousElement.previousElementSibling;\r\n        }\r\n        if (previousElement) {\r\n          await (0,_chatlogs_chatlogs_js__WEBPACK_IMPORTED_MODULE_2__.showChatLogsPanel)(previousElement.dataset.date);\r\n          const messageTextForSearch = messageTextEl.textContent;\r\n          requestAnimationFrame(() => {\r\n            let tries = 0;\r\n            const maxTries = 10;\r\n            const interval = setInterval(async () => {\r\n              const foundChatLogsMessage = await (0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.findChatLogsMessage)(messageTextForSearch, username, true);\r\n              if (foundChatLogsMessage) {\r\n                clearInterval(interval);\r\n              } else if (++tries >= maxTries) {\r\n                clearInterval(interval);\r\n                const chatLogsPanel = document.querySelector('.chat-logs-panel');\r\n                (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_3__.triggerTargetElement)(chatLogsPanel, 'hide');\r\n                showMessagesPanel();\r\n              }\r\n            }, 200);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messagesDelegatedEvents.js?");

/***/ }),

/***/ "./src/panels/messages/messagesDelegatedTooltips.js":
/*!**********************************************************!*\
  !*** ./src/panels/messages/messagesDelegatedTooltips.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupMessagesTooltips: () => (/* binding */ setupMessagesTooltips)\n/* harmony export */ });\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messagesHelpers.js */ \"./src/panels/messages/messagesHelpers.js\");\n\r\n\r\n\r\n// Create custom tooltips for various message elements (time, username, text)\r\nfunction setupMessagesTooltips(cachedMessagesPanel) {\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)('.message-time', cachedMessagesPanel, (el) => {\r\n    const type = el.closest('.message-item')?.dataset.type;\r\n    const ctrlRemoveEn = `[Ctrl + Click] Remove all messages starting from ${(0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.calibrateToMoscowTime)(el.textContent)}`;\r\n    const ctrlRemoveRu = `[Ctrl + Клик] Удалить все сообщения начиная с ${(0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.calibrateToMoscowTime)(el.textContent)}`;\r\n    if (type === 'private') {\r\n      return {\r\n        en: ctrlRemoveEn,\r\n        ru: ctrlRemoveRu\r\n      };\r\n    }\r\n    // For mention and all others, show all lines\r\n    return {\r\n      en: `\r\n        [Click] Open chatlog at ${(0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.calibrateToMoscowTime)(el.textContent)}\r\n        [Shift + Click] Copy chatlogs URL to clipboard\r\n        ${ctrlRemoveEn}\r\n      `,\r\n      ru: `\r\n        [Клик] Открыть чатлог в ${(0,_messagesHelpers_js__WEBPACK_IMPORTED_MODULE_1__.calibrateToMoscowTime)(el.textContent)}\r\n        [Shift + Клик] Скопировать ссылку на чатлог\r\n        ${ctrlRemoveRu}\r\n      `\r\n    };\r\n  }, true);\r\n\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)('.message-username', cachedMessagesPanel, (el) => ({\r\n    en: `\r\n      [Click] Open ${el.textContent} profile\r\n      [Ctrl + Click] Remove all messages from ${el.textContent} user\r\n    `,\r\n    ru: `\r\n      [Клик] Открыть профиль ${el.textContent}\r\n      [Ctrl + Клик] Удалить все сообщения пользователя ${el.textContent}\r\n    `\r\n  }), true);\r\n\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_0__.createCustomTooltip)('.message-text', cachedMessagesPanel, (el) => {\r\n    const type = el.closest('.message-item')?.dataset.type;\r\n    const firstLine = {\r\n      private: {\r\n        en: '[Click] Find this message in general chat',\r\n        ru: '[Клик] Найти это сообщение в общем чате'\r\n      },\r\n      mention: {\r\n        en: '[Click] Find this message in general chat or chatlog',\r\n        ru: '[Клик] Найти это сообщение в общем чате или чатлоге'\r\n      }\r\n    };\r\n    if (type === 'private' || type === 'mention') {\r\n      return {\r\n        en: `${firstLine[type].en} [Ctrl + Click] Remove only this message`,\r\n        ru: `${firstLine[type].ru} [Ctrl + Клик] Удалить только это сообщение`\r\n      };\r\n    }\r\n    return;\r\n  }, true);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messagesDelegatedTooltips.js?");

/***/ }),

/***/ "./src/panels/messages/messagesHelpers.js":
/*!************************************************!*\
  !*** ./src/panels/messages/messagesHelpers.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calibrateToMoscowTime: () => (/* binding */ calibrateToMoscowTime),\n/* harmony export */   extractMessageText: () => (/* binding */ extractMessageText),\n/* harmony export */   findChatLogsMessage: () => (/* binding */ findChatLogsMessage),\n/* harmony export */   findGeneralChatMessage: () => (/* binding */ findGeneralChatMessage),\n/* harmony export */   getMessages: () => (/* binding */ getMessages),\n/* harmony export */   removeMessage: () => (/* binding */ removeMessage),\n/* harmony export */   updateMessageCount: () => (/* binding */ updateMessageCount)\n/* harmony export */ });\n/* harmony import */ var _helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/scrollTo.js */ \"./src/helpers/scrollTo.js\");\n\r\n\r\n// Extracts the text content from a <p> element, excluding .time and .username elements\r\nfunction extractMessageText(pElem) {\r\n  // Clone the element to safely remove unwanted nodes\r\n  const clone = pElem.cloneNode(true);\r\n  // Remove .time, .username, and .room.private elements\r\n  clone.querySelectorAll('.time, .username, .room.private').forEach(el => el.remove());\r\n  // Now get all text, including .private\r\n  return clone.textContent.trim();\r\n}\r\n\r\n// Helper to get the date from the closest previous .date-item element\r\nfunction getDateForMessageElement(element) {\r\n  let prev = element.previousElementSibling;\r\n  while (prev && !prev.classList.contains('date-item')) {\r\n    prev = prev.previousElementSibling;\r\n  }\r\n  if (prev && prev.classList.contains('date-item')) {\r\n    return prev.dataset.date;\r\n  }\r\n  return null;\r\n}\r\n\r\n// Find chat message by username and message text (backup)\r\nasync function findGeneralChatMessage(targetMessageText, targetUsername, allowScroll) {\r\n  const parent = document.querySelector('.messages-content'); // Chat container\r\n  if (!parent) return null;\r\n\r\n  // Normalize function for comparison\r\n  const normalize = str => String(str || '').replace(/\\s+/g, '').trim().toLowerCase();\r\n  const normalizedTargetUsername = normalize(targetUsername);\r\n  const normalizedTargetText = normalize(targetMessageText);\r\n\r\n  // Helper to find <p> elements by matching username and exact message text\r\n  const findMatchingElement = () =>\r\n    Array.from(parent.querySelectorAll('p')).find((p) => {\r\n      const usernameElement = p.querySelector('.username span[data-user]');\r\n      if (usernameElement) {\r\n        const usernameText = normalize(usernameElement.textContent);\r\n        const messageText = normalize(extractMessageText(p));\r\n        // Match by normalized username and message\r\n        if (usernameText === normalizedTargetUsername && messageText === normalizedTargetText) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n  const foundElement = findMatchingElement();\r\n\r\n  if (foundElement && allowScroll) {\r\n    await (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_0__.scrollToMiddle)(parent, foundElement);\r\n  }\r\n\r\n  return foundElement || false;\r\n}\r\n\r\n// Find chat logs message by message text and matching username\r\nasync function findChatLogsMessage(targetMessageText, targetUsername, allowScroll) {\r\n  const parent = document.querySelector('.chat-logs-container'); // Logs container\r\n  if (!parent) return null; // Return null if the container isn't found\r\n\r\n  // Normalize function for comparison\r\n  const normalize = str => String(str || '').replace(/\\s+/g, '').trim().toLowerCase();\r\n  const normalizedTargetUsername = normalize(targetUsername);\r\n  const normalizedTargetText = normalize(targetMessageText);\r\n\r\n  // Helper to find .message-item elements by matching username and exact message text\r\n  const findMatchingElement = () =>\r\n    Array.from(parent.querySelectorAll('.message-item')).find((messageItem) => {\r\n      const usernameElement = messageItem.querySelector('.message-username');\r\n      const messageTextElement = messageItem.querySelector('.message-text');\r\n      if (usernameElement && messageTextElement) {\r\n        const usernameText = normalize(usernameElement.textContent);\r\n        const messageText = normalize(messageTextElement.textContent);\r\n\r\n        if (usernameText === normalizedTargetUsername && messageText === normalizedTargetText) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n  const foundElement = findMatchingElement();\r\n\r\n  if (foundElement && allowScroll) {\r\n    await (0,_helpers_scrollTo_js__WEBPACK_IMPORTED_MODULE_0__.scrollToMiddle)(parent, foundElement);\r\n  }\r\n\r\n  return foundElement || false;\r\n}\r\n\r\n/**\r\n * Converts a given local time to Moscow time (UTC+3) based on the system's timezone.\r\n *\r\n * How it works:\r\n * 1. Gets the system's local timezone offset in minutes (positive if behind UTC).\r\n * 2. Converts the local offset to total minutes from UTC.\r\n * 3. Defines Moscow's fixed offset as UTC+3 (180 minutes).\r\n * 4. Calculates the difference between Moscow's offset and the local offset.\r\n * 5. Parses the input time and converts it into total minutes since midnight.\r\n * 6. Adjusts the time by the calculated difference.\r\n * 7. Ensures the result stays within the 24-hour format (wrap-around handling).\r\n * 8. Converts the result back to HH:MM:SS format and returns it.\r\n *\r\n * @param {string} time - The local time in \"HH:MM:SS\" format.\r\n * @returns {string} - The converted time in Moscow time (HH:MM:SS).\r\n */\r\nfunction calibrateToMoscowTime(time) {\r\n  // Get local timezone offset in minutes (positive if local is behind UTC)\r\n  const localOffsetMinutes = new Date().getTimezoneOffset();\r\n\r\n  // Convert local offset to total minutes from UTC (local time = UTC + localTotalOffset)\r\n  const localTotalOffset = -localOffsetMinutes;\r\n\r\n  // Moscow is UTC+3 (180 minutes)\r\n  const moscowOffset = 3 * 60; // 180 minutes\r\n\r\n  // Calculate the adjustment needed: Moscow offset - local offset\r\n  const diffMinutes = moscowOffset - localTotalOffset;\r\n\r\n  // Parse input time\r\n  const [hours, minutes, seconds] = time.split(':').map(Number);\r\n\r\n  // Convert input time to total minutes since 00:00\r\n  const totalInputMinutes = hours * 60 + minutes;\r\n\r\n  // Adjust by diff and wrap within a single day (1440 minutes)\r\n  let adjustedMinutes = totalInputMinutes + diffMinutes;\r\n  adjustedMinutes = ((adjustedMinutes % 1440) + 1440) % 1440; // Ensure positive\r\n\r\n  // Convert back to hours and minutes\r\n  const adjustedHours = Math.floor(adjustedMinutes / 60);\r\n  const adjustedMins = adjustedMinutes % 60;\r\n\r\n  // Format the result with original seconds\r\n  return `${adjustedHours.toString().padStart(2, '0')}:` +\r\n    `${adjustedMins.toString().padStart(2, '0')}:` +\r\n    `${seconds.toString().padStart(2, '0')}`;\r\n}\r\n\r\n/**\r\n * Removes messages from the DOM and updates localStorage based on the removal type.\r\n * @param {HTMLElement} messageElement - The message element to remove.\r\n * @param {string} removalType - The type of removal: 'single', 'all', or 'from'.\r\n */\r\nfunction removeMessage(messageElement, removalType = 'single') {\r\n  // Extract time, username, and date from the message element\r\n  const time = messageElement.querySelector('.message-time').textContent;\r\n  const username = messageElement.querySelector('.message-username').textContent;\r\n  // Get the date for this message element\r\n  const date = getDateForMessageElement(messageElement);\r\n\r\n  // Retrieve localStorage personalMessagesBackup data\r\n  let backupData = JSON.parse(localStorage.getItem('personalMessagesBackup')) || {};\r\n\r\n  // If backup data does not exist, create it by copying original data from personalMessages\r\n  if (Object.keys(backupData).length === 0) {\r\n    const originalData = JSON.parse(localStorage.getItem('personalMessages')) || {};\r\n    backupData = { ...originalData }; // Make a copy of the original data\r\n    localStorage.setItem('personalMessagesBackup', JSON.stringify(backupData)); // Save backupData to localStorage\r\n  }\r\n\r\n  // Work with backupData (make a copy to modify)\r\n  let modifiedBackupData = { ...backupData };\r\n\r\n  if (removalType === 'all') {\r\n    // Remove all messages from the same user\r\n    document.querySelectorAll('.message-item').forEach((element) => {\r\n      const elementUsername = element.querySelector('.message-username').textContent;\r\n      const elementDate = getDateForMessageElement(element);\r\n      if (elementUsername === username && elementDate) {\r\n        element.remove(); // Remove the DOM element\r\n        // Remove the corresponding entry from backupData\r\n        const elementTime = element.querySelector('.message-time').textContent;\r\n        const messageKey = `[${elementTime}]_${elementUsername}_${elementDate}`;\r\n        delete modifiedBackupData[messageKey];\r\n      }\r\n    });\r\n  } else if (removalType === 'from') {\r\n    // Get all message elements\r\n    const messageElements = Array.from(document.querySelectorAll('.message-item'));\r\n\r\n    // Find the index of the current message element\r\n    const currentIndex = messageElements.indexOf(messageElement);\r\n\r\n    // Iterate through messages starting from the current message till the end\r\n    for (let i = currentIndex; i < messageElements.length; i++) {\r\n      const element = messageElements[i];\r\n      const elementUsername = element.querySelector('.message-username').textContent;\r\n      const elementDate = getDateForMessageElement(element);\r\n      if (elementUsername === username && elementDate) {\r\n        element.remove();\r\n        // Remove the corresponding entry from backupData\r\n        const elementTime = element.querySelector('.message-time').textContent;\r\n        const messageKey = `[${elementTime}]_${elementUsername}_${elementDate}`;\r\n        delete modifiedBackupData[messageKey];\r\n      }\r\n    }\r\n  } else {\r\n    // Default: Remove only the specific message (single)\r\n    if (date) {\r\n      const messageKey = `[${time}]_${username}_${date}`;\r\n      if (modifiedBackupData[messageKey]) {\r\n        delete modifiedBackupData[messageKey];\r\n        // Remove the message and its date header if it's the last for that date\r\n        let dateHeader = messageElement.previousElementSibling;\r\n        while (dateHeader && !dateHeader.classList.contains('date-item')) dateHeader = dateHeader.previousElementSibling;\r\n        messageElement.remove();\r\n        if (dateHeader && dateHeader.classList.contains('date-item') &&\r\n          (!dateHeader.nextElementSibling || dateHeader.nextElementSibling.classList.contains('date-item'))) {\r\n          dateHeader.remove();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update localStorage with the modified backupData\r\n  localStorage.setItem('personalMessagesBackup', JSON.stringify(modifiedBackupData));\r\n\r\n  // Update the total message count displayed in the personal messages button\r\n  const messagesCountElement = document.querySelector('.personal-messages-button .total-message-count');\r\n  if (messagesCountElement) {\r\n    messagesCountElement.textContent = Object.keys(modifiedBackupData).length;\r\n  }\r\n}\r\n\r\n// Update the message count displayed in the personal messages button\r\nfunction updateMessageCount() {\r\n  const personalMessagesCount = Object.keys(JSON.parse(localStorage.getItem('personalMessages') || '{}')).length;\r\n  const messagesCountElement = document.querySelector('.personal-messages-button .total-message-count');\r\n  messagesCountElement.textContent = personalMessagesCount;\r\n}\r\n\r\n// Function to get messages from localStorage\r\nfunction getMessages() {\r\n  const cachedMessagesData = localStorage.getItem('personalMessages');\r\n  // Initialize messages by parsing fetched data or setting as empty object\r\n  return JSON.parse(cachedMessagesData) || {};\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messagesHelpers.js?");

/***/ }),

/***/ "./src/panels/messages/messagesParser.js":
/*!***********************************************!*\
  !*** ./src/panels/messages/messagesParser.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePersonalMessages: () => (/* binding */ parsePersonalMessages)\n/* harmony export */ });\n/* harmony import */ var _messagesParser_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./messagesParser.scss */ \"./src/panels/messages/messagesParser.scss\");\n/* harmony import */ var _chatlogs_chatlogsLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chatlogs/chatlogsLoader.js */ \"./src/panels/chatlogs/chatlogsLoader.js\");\n/* harmony import */ var _helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/getLatestMessageData.js */ \"./src/helpers/getLatestMessageData.js\");\n/* harmony import */ var _helpers_colorUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/colorUtils.js */ \"./src/helpers/colorUtils.js\");\n/* harmony import */ var _messages_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./messages.js */ \"./src/panels/messages/messages.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// New cache key to track the last successful parse date\r\nconst LAST_PARSE_DATE_KEY = 'lastParseDate';\r\n\r\n// Simple helper for safe JSON parsing from localStorage\r\nfunction safeParseJSON(item, fallback = {}) {\r\n  try {\r\n    return item ? JSON.parse(item) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n}\r\n\r\n// Improved user data assignment function\r\nfunction assignUserDataFromCache(usernames, userDataCache) {\r\n  const usernameColorCache = {};\r\n  const usernameIdCache = {};\r\n  \r\n  for (const username of usernames) {\r\n    const userData = userDataCache[username];\r\n    \r\n    // Assign with fallbacks\r\n    usernameColorCache[username] = userData?.color || '#808080';\r\n    usernameIdCache[username] = userData?.id || '';\r\n    \r\n    // Optional: Log missing data for debugging\r\n    if (!userData) {\r\n      console.debug(`No cached data found for username: ${username}`);\r\n    }\r\n  }\r\n  \r\n  return { usernameColorCache, usernameIdCache };\r\n}\r\n\r\n// Helper function to format date as YYYY-MM-DD\r\nfunction formatDate(date) {\r\n  return date.toISOString().split('T')[0];\r\n}\r\n\r\n// Helper function to get dates between two dates (inclusive)\r\nfunction getDatesBetween(startDate, endDate) {\r\n  const dates = [];\r\n  const currentDate = new Date(startDate);\r\n  const end = new Date(endDate);\r\n\r\n  while (currentDate <= end) {\r\n    dates.push(formatDate(currentDate));\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n\r\n  return dates;\r\n}\r\n\r\n// Function to parse personal messages from chat logs and update localStorage\r\nasync function parsePersonalMessages(currentDate = _definitions_js__WEBPACK_IMPORTED_MODULE_5__.today) {\r\n  // Caching logic: only fetch if last fetch was more than 1 minute ago\r\n  const now = Date.now();\r\n  const lastFetch = Number(localStorage.getItem(_messages_js__WEBPACK_IMPORTED_MODULE_4__.ABSENT_MENTIONS_CACHE_KEY)) || 0;\r\n  if (now - lastFetch < 60 * 1000) {\r\n    // Less than 1 minute since last fetch, update timestamp and skip\r\n    localStorage.setItem(_messages_js__WEBPACK_IMPORTED_MODULE_4__.ABSENT_MENTIONS_CACHE_KEY, String(now));\r\n    return;\r\n  }\r\n  localStorage.setItem(_messages_js__WEBPACK_IMPORTED_MODULE_4__.ABSENT_MENTIONS_CACHE_KEY, String(now));\r\n\r\n  const personalMessages = safeParseJSON(localStorage.getItem(_messages_js__WEBPACK_IMPORTED_MODULE_4__.PERSONAL_MESSAGES_KEY));\r\n\r\n  // Get the last parse date, default to today if never parsed before\r\n  const lastParseDate = localStorage.getItem(LAST_PARSE_DATE_KEY) || currentDate;\r\n\r\n  // Determine which dates need to be parsed\r\n  const datesToParse = [];\r\n\r\n  if (lastParseDate === currentDate) {\r\n    // Same day, only parse today\r\n    datesToParse.push(currentDate);\r\n  } else {\r\n    // Different dates, parse from last parse date to current date\r\n    const startDate = new Date(lastParseDate);\r\n    const endDate = new Date(currentDate);\r\n\r\n    // If last parse date is in the future (shouldn't happen but safety check)\r\n    if (startDate > endDate) {\r\n      datesToParse.push(currentDate);\r\n    } else {\r\n      datesToParse.push(...getDatesBetween(lastParseDate, currentDate));\r\n    }\r\n\r\n    if (datesToParse.length > 1) {\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_7__.localizedMessage)({\r\n        en: `Loading personal mentions for ${datesToParse.length} days. This may take a while. Please do not reload the page...`,\r\n        ru: `Загрузка личных упоминаний за ${datesToParse.length} дней. Это может занять некоторое время. Пожалуйста, не перезагружайте страницу...`\r\n      }, 'alert');\r\n    }\r\n  }\r\n\r\n  console.log(`Parsing messages for dates: ${datesToParse.join(', ')}`);\r\n\r\n  // Build a set of keys for messages already stored, using date and message for uniqueness\r\n  const existingKeys = new Set(Object.values(personalMessages).map(m => `${m.date}|${m.message}`));\r\n\r\n  // Load user data cache once at the beginning\r\n  const userDataCache = safeParseJSON(localStorage.getItem(_definitions_js__WEBPACK_IMPORTED_MODULE_5__.USER_DATA_CACHE_KEY));\r\n  \r\n  // Initialize caches\r\n  let usernameColorCache = {};\r\n  let usernameIdCache = {};\r\n\r\n  let totalNewMentions = 0;\r\n\r\n  // Progress UI for multi-day parsing\r\n  let progressContainer, dateIndicator, progressBar, progressBarInner, progressLabel;\r\n\r\n  if (datesToParse.length > 1) {\r\n    progressContainer = document.createElement('div');\r\n    progressContainer.className = 'messages-parser-progress-container';\r\n\r\n    dateIndicator = document.createElement('div');\r\n    dateIndicator.className = 'messages-parser-date-indicator';\r\n\r\n    progressBar = document.createElement('div');\r\n    progressBar.className = 'messages-parser-progress-bar';\r\n\r\n    progressBarInner = document.createElement('div');\r\n    progressBarInner.className = 'messages-parser-progress-bar-inner';\r\n    progressBarInner.style.width = '0%';\r\n\r\n    progressBar.appendChild(progressBarInner);\r\n\r\n    progressLabel = document.createElement('div');\r\n    progressLabel.className = 'messages-parser-progress-label';\r\n    progressLabel.textContent = '';\r\n\r\n    progressContainer.append(dateIndicator, progressBar, progressLabel);\r\n    document.body.appendChild(progressContainer);\r\n  }\r\n\r\n  // Process each date\r\n  let dateIndex = 0;\r\n\r\n  for (const date of datesToParse) {\r\n    let newMentionsForDate = 0;\r\n    \r\n    try {\r\n      if (progressContainer) {\r\n        dateIndicator.textContent = date;\r\n        const percent = Math.round((dateIndex / datesToParse.length) * 100);\r\n        progressBarInner.style.width = percent + '%';\r\n        progressLabel.textContent = `${dateIndex + 1} / ${datesToParse.length}`;\r\n      }\r\n      \r\n      const result = await (0,_chatlogs_chatlogsLoader_js__WEBPACK_IMPORTED_MODULE_1__.fetchChatLogs)(date);\r\n      if (!result?.chatlogs?.length) continue;\r\n\r\n      const chatlogEntries = result.chatlogs;\r\n\r\n      // Get all unique, non-SYSTEM usernames from this date's chatlog\r\n      const allUsernames = [...new Set(\r\n        chatlogEntries\r\n          .filter(e => e.username && e.username.trim() !== 'SYSTEM')\r\n          .map(e => e.username)\r\n      )];\r\n\r\n      // Check if we need to fetch new user data\r\n      const uncachedUsernames = allUsernames.filter(username => !userDataCache[username]);\r\n      \r\n      if (uncachedUsernames.length > 0) {\r\n        console.log(`Fetching data for ${uncachedUsernames.length} uncached users for date ${date}`);\r\n        \r\n        try {\r\n          // Fetch and cache new user data\r\n          const newUserData = await (0,_helpers_colorUtils_js__WEBPACK_IMPORTED_MODULE_3__.cacheUserData)(uncachedUsernames);\r\n          \r\n          // Merge new data with existing cache\r\n          Object.assign(userDataCache, newUserData);\r\n          \r\n          // Update localStorage with new data\r\n          localStorage.setItem(_definitions_js__WEBPACK_IMPORTED_MODULE_5__.USER_DATA_CACHE_KEY, JSON.stringify(userDataCache));\r\n        } catch (error) {\r\n          console.error(`Failed to fetch user data for uncached users:`, error);\r\n          // Continue with existing cache data\r\n        }\r\n      }\r\n\r\n      // Assign user data from cache using the improved method\r\n      const { usernameColorCache: dateColorCache, usernameIdCache: dateIdCache } = \r\n        assignUserDataFromCache(allUsernames, userDataCache);\r\n      \r\n      // Merge with existing caches (if processing multiple dates)\r\n      Object.assign(usernameColorCache, dateColorCache);\r\n      Object.assign(usernameIdCache, dateIdCache);\r\n\r\n      // Process chatlog entries and add new mentions\r\n      for (const entry of chatlogEntries) {\r\n        if (\r\n          entry.username &&\r\n          entry.username !== 'SYSTEM' &&\r\n          entry.message &&\r\n          (0,_helpers_getLatestMessageData_js__WEBPACK_IMPORTED_MODULE_2__.isMentionForMe)(entry.message)\r\n        ) {\r\n          // Check uniqueness based on date and message only\r\n          const uniqueKey = `${date}|${entry.message}`;\r\n          if (!existingKeys.has(uniqueKey)) {\r\n            const newId = `[${entry.time}]_${entry.username}_${date}`;\r\n            \r\n            // Use the cached data with proper fallbacks\r\n            personalMessages[newId] = {\r\n              time: `[${entry.time}]`,\r\n              date: date,\r\n              username: entry.username,\r\n              usernameColor: usernameColorCache[entry.username] || '#808080',\r\n              message: entry.message,\r\n              type: 'mention',\r\n              userId: usernameIdCache[entry.username] || ''\r\n            };\r\n            \r\n            // Add to existing keys set to prevent duplicates within the same batch\r\n            existingKeys.add(uniqueKey);\r\n            newMentionsForDate++;\r\n            totalNewMentions++;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(`Found ${newMentionsForDate} new mentions for ${date}`);\r\n\r\n      // Small delay between API calls to be respectful\r\n      if (datesToParse.indexOf(date) < datesToParse.length - 1) {\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(`Error parsing messages for date ${date}:`, error);\r\n      // Continue with other dates even if one fails\r\n    }\r\n    dateIndex++;\r\n  }\r\n\r\n  // Remove progress UI after parsing\r\n  if (progressContainer) {\r\n    progressBarInner.style.width = '100%';\r\n    progressContainer.remove();\r\n  }\r\n\r\n  // Update localStorage and UI if new mentions were added\r\n  if (totalNewMentions > 0) {\r\n    localStorage.setItem(_messages_js__WEBPACK_IMPORTED_MODULE_4__.PERSONAL_MESSAGES_KEY, JSON.stringify(personalMessages));\r\n    \r\n    let newMessagesCount = Number(localStorage.getItem('newMessagesCount')) || 0;\r\n    newMessagesCount += totalNewMentions;\r\n    localStorage.setItem('newMessagesCount', String(newMessagesCount));\r\n\r\n    const newMessageIndicator = document.querySelector('.personal-messages-button .new-message-count');\r\n    if (newMessageIndicator) {\r\n      newMessageIndicator.textContent = newMessagesCount;\r\n      newMessageIndicator.style.visibility = newMessagesCount > 0 ? 'visible' : 'hidden';\r\n      (0,_animations_js__WEBPACK_IMPORTED_MODULE_6__.addJumpEffect)(newMessageIndicator, 50, 50);\r\n    }\r\n\r\n    if (datesToParse.length > 1) {\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_7__.localizedMessage)({\r\n        en: `Added ${totalNewMentions} new personal mentions across ${datesToParse.length} days!`,\r\n        ru: `Добавлено ${totalNewMentions} новых личных упоминаний за ${datesToParse.length} дней!`\r\n      }, 'alert');\r\n    }\r\n\r\n    console.log(`Added ${totalNewMentions} total new mentions across ${datesToParse.length} days`);\r\n  }\r\n\r\n  // Update the last parse date to current date after successful parsing\r\n  localStorage.setItem(LAST_PARSE_DATE_KEY, currentDate);\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messagesParser.js?");

/***/ }),

/***/ "./src/panels/messages/messagesParser.scss":
/*!*************************************************!*\
  !*** ./src/panels/messages/messagesParser.scss ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messagesParser_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./messagesParser.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/messages/messagesParser.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messagesParser_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messagesParser_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messagesParser_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_messagesParser_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/messages/messagesParser.scss?");

/***/ }),

/***/ "./src/panels/settings/settings.js":
/*!*****************************************!*\
  !*** ./src/panels/settings/settings.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KG_Chat_Empowerment: () => (/* binding */ KG_Chat_Empowerment),\n/* harmony export */   createSettingsButton: () => (/* binding */ createSettingsButton),\n/* harmony export */   settingsState: () => (/* binding */ settingsState)\n/* harmony export */ });\n/* harmony import */ var _settings_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings.scss */ \"./src/panels/settings/settings.scss\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/hotkeyState.js */ \"./src/helpers/hotkeyState.js\");\n/* harmony import */ var _helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/elementVisibility.js */ \"./src/helpers/elementVisibility.js\");\n/* harmony import */ var _helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/scrollButtons.js */ \"./src/helpers/scrollButtons.js\");\n/* harmony import */ var _settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./settingsFileHandlers.js */ \"./src/panels/settings/settingsFileHandlers.js\");\n/* harmony import */ var _settingsConfig_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settingsConfig.js */ \"./src/panels/settings/settingsConfig.js\");\n/* harmony import */ var _settingsSaveButton_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./settingsSaveButton.js */ \"./src/panels/settings/settingsSaveButton.js\");\n/* harmony import */ var _settingsPopulator_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./settingsPopulator.js */ \"./src/panels/settings/settingsPopulator.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n\r\n\r\n// icons\r\n\r\n\r\n\r\n\r\n\r\n// helpers && helpers definitions\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// definitions\r\n\r\n\r\n// Define dynamic variables\r\nlet {\r\n  panelsEvents\r\n} = _definitions_js__WEBPACK_IMPORTED_MODULE_12__.state;\r\n\r\nconst stored = localStorage.getItem('KG_Chat_Empowerment');\r\nconst KG_Chat_Empowerment = stored\r\n  ? JSON.parse(stored)\r\n  : {\r\n    voiceSettings: { voiceSpeed: _definitions_js__WEBPACK_IMPORTED_MODULE_12__.defaultVoiceSpeed, voicePitch: _definitions_js__WEBPACK_IMPORTED_MODULE_12__.defaultVoicePitch },\r\n    messageSettings: {},\r\n  };\r\n\r\nif (!stored) {\r\n  localStorage.setItem('KG_Chat_Empowerment', JSON.stringify(KG_Chat_Empowerment));\r\n}\r\n\r\n// Declare and initialize all arrays dynamically\r\nconst settingsState = Object.fromEntries(\r\n  _settingsConfig_js__WEBPACK_IMPORTED_MODULE_9__.settingsConfig.map(config => [config.key, []])\r\n);\r\n\r\n// Load data from localStorage and populate arrays\r\n_settingsConfig_js__WEBPACK_IMPORTED_MODULE_9__.settingsConfig.forEach(config => {\r\n  const key = config.key;\r\n  const stored = JSON.parse(localStorage.getItem(key)) || [];\r\n  if (stored.length) {\r\n    settingsState[key].splice(0, settingsState[key].length, ...stored);\r\n  }\r\n});\r\n\r\n// Add myNickname to mentionKeywords after loading stored data\r\nconst mentionConfig = _settingsConfig_js__WEBPACK_IMPORTED_MODULE_9__.settingsConfig.find(config => config.type === 'mention');\r\nif (typeof _definitions_js__WEBPACK_IMPORTED_MODULE_12__.myNickname !== 'undefined' && _definitions_js__WEBPACK_IMPORTED_MODULE_12__.myNickname && mentionConfig) {\r\n  settingsState[mentionConfig.key].push(_definitions_js__WEBPACK_IMPORTED_MODULE_12__.myNickname);\r\n}\r\n\r\n\r\n// Create a button to upload and apply new settings,\r\n// receiving the parent panel as a parameter.\r\nfunction createSettingsButton(panel) {\r\n  const showSettingsButton = document.createElement('div');\r\n  showSettingsButton.classList.add(\"empowerment-button\", \"settings-button\");\r\n\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__.createCustomTooltip)(showSettingsButton, {\r\n    en: 'Open Settings',\r\n    ru: 'Открыть настройки'\r\n  });\r\n  showSettingsButton.style.position = 'relative';\r\n\r\n  // Use the settings SVG from icons.js\r\n  showSettingsButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_1__.settingsSVG;\r\n\r\n  const importFileInput = document.createElement('input');\r\n  importFileInput.type = 'file';\r\n  importFileInput.accept = '.json';\r\n  importFileInput.style.display = 'none';\r\n\r\n  importFileInput.addEventListener('change', _settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__.handleUploadSettings);\r\n\r\n  showSettingsButton.addEventListener('click', event => {\r\n    (0,_animations_js__WEBPACK_IMPORTED_MODULE_2__.addPulseEffect)(showSettingsButton);\r\n    if (_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_5__.isAltKeyPressed) (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__.handleDownloadSettings)((0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__.getSettingsData)());\r\n    if (_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_5__.isCtrlKeyPressed) importFileInput.click();\r\n    if (_helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_5__.isAltKeyPressed || _helpers_hotkeyState_js__WEBPACK_IMPORTED_MODULE_5__.isCtrlKeyPressed) return;\r\n    showSettingsPanel();\r\n  });\r\n\r\n  showSettingsButton.appendChild(importFileInput);\r\n\r\n  // Append the settings button to the passed panel\r\n  panel.appendChild(showSettingsButton);\r\n}\r\n\r\n// Function to display the settings panel\r\nfunction showSettingsPanel() {\r\n  // Check if the panel already exists\r\n  const existingPanel = document.querySelector('.settings-panel');\r\n  if (existingPanel) {\r\n    existingPanel.remove(); // Remove the settings panel\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerDimmingElement)('hide');\r\n    return; // Return immediately to prevent further execution\r\n  }\r\n\r\n  // Remove any previous panel before creating a new one\r\n  (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.removePreviousPanel)();\r\n\r\n  // Create the settings panel container\r\n  const settingsPanel = document.createElement('div');\r\n  settingsPanel.className = 'settings-panel popup-panel';\r\n\r\n  // Define the event handler function for settings panel\r\n  panelsEvents.handleSettingsKeydown = (event) => { // Assign the function to the object\r\n    if (event.key === 'Escape') {\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerTargetElement)(settingsPanel, 'hide');\r\n      (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerDimmingElement)('hide');\r\n      document.removeEventListener('keydown', panelsEvents.handleSettingsKeydown); // Remove the event listener\r\n    }\r\n  };\r\n\r\n  // Attach the event listener\r\n  document.addEventListener('keydown', panelsEvents.handleSettingsKeydown);\r\n\r\n  // Create a container div for the panel header\r\n  const panelHeaderContainer = document.createElement('div');\r\n  panelHeaderContainer.className = 'panel-header';\r\n\r\n  const panelControlButtons = document.createElement('div');\r\n  panelControlButtons.classList.add(\"panel-control-buttons\");\r\n\r\n  // Create a close button with the provided SVG icon\r\n  const closePanelButton = document.createElement('div');\r\n  closePanelButton.className = 'large-button panel-header-close-button';\r\n  closePanelButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_1__.closeSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__.createCustomTooltip)(closePanelButton, {\r\n    en: 'Close panel',\r\n    ru: 'Закрыть панель'\r\n  });\r\n\r\n  // Add a click event listener to the close panel button\r\n  closePanelButton.addEventListener('click', () => {\r\n    // Fade out the settings panel when the close button is clicked\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerTargetElement)(settingsPanel, 'hide');\r\n    (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerDimmingElement)('hide');\r\n  });\r\n\r\n  // Create a clear cache button with the provided SVG icon\r\n  const clearCacheButton = document.createElement('div');\r\n  clearCacheButton.className = \"large-button panel-header-clear-button\";\r\n  clearCacheButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_1__.trashSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__.createCustomTooltip)(clearCacheButton, {\r\n    en: 'Clear settings',\r\n    ru: 'Очистить настройки'\r\n  });\r\n\r\n  // Add a click event listener to the clear cache button\r\n  clearCacheButton.addEventListener('click', () => {\r\n    (0,_settingsPopulator_js__WEBPACK_IMPORTED_MODULE_11__.clearSettingsContainers)();\r\n  })\r\n\r\n  // Create an import button with the provided SVG icon\r\n  const importSettingsButton = document.createElement('div');\r\n  importSettingsButton.className = \"large-button panel-header-import-button\";\r\n  importSettingsButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_1__.importSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__.createCustomTooltip)(importSettingsButton, {\r\n    en: 'Import settings',\r\n    ru: 'Импортировать настройки'\r\n  });\r\n\r\n  // Create a save button with the provided SVG icon\r\n  const saveSettingsButton = document.createElement('div');\r\n  saveSettingsButton.className = \"large-button panel-header-save-button\";\r\n  saveSettingsButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_1__.saveSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__.createCustomTooltip)(saveSettingsButton, {\r\n    en: 'Save settings',\r\n    ru: 'Сохранить настройки'\r\n  });\r\n\r\n  // Create a hidden file input for importing settings\r\n  const importFileInput = document.createElement('input');\r\n  importFileInput.type = 'file';\r\n  importFileInput.accept = '.json'; // Specify the file type\r\n  importFileInput.style.display = 'none'; // Hide the file input\r\n\r\n  // Add an event listener for the import file input\r\n  importFileInput.addEventListener('change', async (event) => {\r\n    await (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__.handleUploadSettings)(event);\r\n    (0,_settingsPopulator_js__WEBPACK_IMPORTED_MODULE_11__.clearSettingsContainers)();\r\n    (0,_settingsPopulator_js__WEBPACK_IMPORTED_MODULE_11__.populateSettings)();\r\n  });\r\n\r\n\r\n  // Add a click event listener to the import button\r\n  importSettingsButton.addEventListener('click', () => {\r\n    importFileInput.click(); // Trigger file input click\r\n  });\r\n\r\n  // Append the file input to the import button\r\n  importSettingsButton.appendChild(importFileInput);\r\n\r\n  // Create an export button with the provided SVG icon\r\n  const exportSettingsButton = document.createElement('div');\r\n  exportSettingsButton.className = \"large-button panel-header-export-button\";\r\n  exportSettingsButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_1__.exportSVG;\r\n  (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_3__.createCustomTooltip)(exportSettingsButton, {\r\n    en: 'Export settings',\r\n    ru: 'Экспортировать настройки'\r\n  });\r\n\r\n  // Example of how to use the getSettingsData function in the export event\r\n  exportSettingsButton.addEventListener('click', function () {\r\n    const settingsData = (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__.getSettingsData)(); // Retrieve the settings data\r\n    (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_8__.handleDownloadSettings)(settingsData); // Pass the retrieved settings data to the download function\r\n  });\r\n\r\n  // Append the buttons to the panel header container\r\n  panelControlButtons.append(\r\n    saveSettingsButton,\r\n    importSettingsButton,\r\n    exportSettingsButton,\r\n    clearCacheButton,\r\n    closePanelButton\r\n  );\r\n\r\n  panelHeaderContainer.appendChild(panelControlButtons);\r\n\r\n  settingsPanel.appendChild(panelHeaderContainer);\r\n\r\n  // Create a container for the settings content\r\n  const settingsContainer = document.createElement('div');\r\n  settingsContainer.className = 'settings-content-container';\r\n\r\n  _settingsConfig_js__WEBPACK_IMPORTED_MODULE_9__.settingsConfig.forEach(({ type }) => {\r\n    // Create the description container directly\r\n    const container = document.createElement('div');\r\n    container.className = `settings-${type}-container`;\r\n    settingsContainer.appendChild(container);\r\n  });\r\n\r\n  // Append the settings content container to the settings panel\r\n  settingsPanel.appendChild(settingsContainer);\r\n\r\n  // Create and append scroll buttons\r\n  const { scrollButtonsContainer } = (0,_helpers_scrollButtons_js__WEBPACK_IMPORTED_MODULE_7__.createScrollButtons)(settingsContainer);\r\n  settingsPanel.appendChild(scrollButtonsContainer);\r\n\r\n  // Append the settings panel to the body\r\n  document.body.appendChild(settingsPanel);\r\n\r\n  // Call the function to populate settings on page load\r\n  (0,_settingsPopulator_js__WEBPACK_IMPORTED_MODULE_11__.populateSettings)();\r\n\r\n  // Make save button work as expected\r\n  (0,_settingsSaveButton_js__WEBPACK_IMPORTED_MODULE_10__.initializeSaveButtonLogic)(saveSettingsButton);\r\n\r\n  // Fade in the settings panel and dimming background element\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerTargetElement)(settingsPanel, 'show');\r\n  (0,_helpers_elementVisibility_js__WEBPACK_IMPORTED_MODULE_6__.triggerDimmingElement)('show');\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settings.js?");

/***/ }),

/***/ "./src/panels/settings/settings.scss":
/*!*******************************************!*\
  !*** ./src/panels/settings/settings.scss ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_settings_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./settings.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/panels/settings/settings.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_settings_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_settings_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_settings_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_settings_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settings.scss?");

/***/ }),

/***/ "./src/panels/settings/settingsConfig.js":
/*!***********************************************!*\
  !*** ./src/panels/settings/settingsConfig.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   settingsConfig: () => (/* binding */ settingsConfig),\n/* harmony export */   toggleSettingsConfig: () => (/* binding */ toggleSettingsConfig)\n/* harmony export */ });\n/* harmony import */ var _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settingsCreators.js */ \"./src/panels/settings/settingsCreators.js\");\n\r\n\r\n// Process toggle settings separately with categorization and defaults\r\nconst toggleSettingsConfig = [\r\n  {\r\n    emoji: '👀',\r\n    description: 'Show chat static notifications',\r\n    image: 'https://i.imgur.com/oUPSi9I.jpeg',\r\n    category: 'notifications',\r\n    type: 'static'\r\n  },\r\n  {\r\n    emoji: '👀',\r\n    description: 'Show global dynamic notifications',\r\n    image: 'https://i.imgur.com/8ffCdUG.jpeg',\r\n    category: 'notifications',\r\n    type: 'dynamic'\r\n  },\r\n  {\r\n    emoji: '🔊',\r\n    description: 'Play a beep sound and speak feedback when the user enters or leaves the chat',\r\n    image: 'https://i.imgur.com/6PXFIES.jpeg',\r\n    category: 'sound',\r\n    type: 'presence'\r\n  },\r\n  {\r\n    emoji: '🔊',\r\n    description: 'Switch to google TTS engine if available',\r\n    image: 'https://i.imgur.com/0H94LII.jpeg',\r\n    category: 'sound',\r\n    type: 'gTTS'\r\n  },\r\n  {\r\n    emoji: '📦️',\r\n    description: 'Create participants counter',\r\n    image: 'https://i.imgur.com/rqIVAgH.jpeg',\r\n    category: 'elements',\r\n    type: 'counter'\r\n  },\r\n  {\r\n    emoji: '🌐',\r\n    description: 'Interface language',\r\n    image: '',\r\n    category: 'ui',\r\n    type: 'language',\r\n    languages: [\r\n      { value: 'en', label: '🇬🇧 English' },\r\n      { value: 'ru', label: '🇷🇺 Русский' }\r\n    ]\r\n  }\r\n];\r\n\r\n// Define all settings keys in camelCase format\r\nconst settingsConfig = [\r\n  {\r\n    type: 'tracked',\r\n    emoji: '👀',\r\n    key: 'usersToTrack',\r\n    selector: '.settings-tracked-container',\r\n    creator: _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__.createTrackedItem\r\n  },\r\n  {\r\n    type: 'mention',\r\n    emoji: '📢',\r\n    key: 'mentionKeywords',\r\n    selector: '.settings-mention-container',\r\n    creator: _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__.createMentionItem\r\n  },\r\n  {\r\n    type: 'replacement',\r\n    emoji: '♻️',\r\n    key: 'usernameReplacements',\r\n    selector: '.settings-replacement-container',\r\n    creator: _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__.createReplacementItem\r\n  },\r\n  {\r\n    type: 'moderator',\r\n    emoji: '⚔️',\r\n    key: 'moderator',\r\n    selector: '.settings-moderator-container',\r\n    creator: _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__.createModeratorItem\r\n  },\r\n  {\r\n    type: 'ignored',\r\n    emoji: '🛑',\r\n    key: 'ignored',\r\n    selector: '.settings-ignored-container',\r\n    creator: _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__.createIgnoredItem\r\n  },\r\n  {\r\n    type: 'toggle',\r\n    emoji: '🔘',\r\n    key: 'toggle',\r\n    selector: '.settings-toggle-container',\r\n    creator: _settingsCreators_js__WEBPACK_IMPORTED_MODULE_0__.createToggleItem\r\n  }\r\n];\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settingsConfig.js?");

/***/ }),

/***/ "./src/panels/settings/settingsCreators.js":
/*!*************************************************!*\
  !*** ./src/panels/settings/settingsCreators.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachRemoveListener: () => (/* binding */ attachRemoveListener),\n/* harmony export */   attachSnowflakeListener: () => (/* binding */ attachSnowflakeListener),\n/* harmony export */   createAddButton: () => (/* binding */ createAddButton),\n/* harmony export */   createContainer: () => (/* binding */ createContainer),\n/* harmony export */   createIgnoredItem: () => (/* binding */ createIgnoredItem),\n/* harmony export */   createInput: () => (/* binding */ createInput),\n/* harmony export */   createMentionItem: () => (/* binding */ createMentionItem),\n/* harmony export */   createModeratorItem: () => (/* binding */ createModeratorItem),\n/* harmony export */   createRemoveButton: () => (/* binding */ createRemoveButton),\n/* harmony export */   createReplacementItem: () => (/* binding */ createReplacementItem),\n/* harmony export */   createSnowflakeButton: () => (/* binding */ createSnowflakeButton),\n/* harmony export */   createSpoilerContainer: () => (/* binding */ createSpoilerContainer),\n/* harmony export */   createToggleItem: () => (/* binding */ createToggleItem),\n/* harmony export */   createTrackedItem: () => (/* binding */ createTrackedItem),\n/* harmony export */   updateUserState: () => (/* binding */ updateUserState)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../icons.js */ \"./src/icons.js\");\n/* harmony import */ var _settingsTitles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settingsTitles.js */ \"./src/panels/settings/settingsTitles.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _settingsConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settingsConfig.js */ \"./src/panels/settings/settingsConfig.js\");\n\r\n\r\n\r\n\r\n\r\n// Helper function to get localized placeholder text\r\nfunction getPlaceholder(type, field = null) {\r\n  const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentLanguage)();\r\n  const placeholders = _settingsTitles_js__WEBPACK_IMPORTED_MODULE_1__.settingsTitles.placeholderTitles[type];\r\n\r\n  if (!placeholders) return '';\r\n\r\n  if (field && typeof placeholders === 'object' && placeholders[field]) {\r\n    return placeholders[field][lang] || placeholders[field]['en'] || '';\r\n  }\r\n\r\n  if (typeof placeholders === 'object' && !field) {\r\n    return placeholders[lang] || placeholders['en'] || '';\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\n// Helper function to attach click event for removing an item\r\nfunction attachRemoveListener(removeButton, item) {\r\n  removeButton.addEventListener('click', () => {\r\n    item.remove();\r\n  });\r\n}\r\n\r\n// Function to attach click event for toggling snowflake states\r\nfunction attachSnowflakeListener(snowflakeButton, username) {\r\n  snowflakeButton.addEventListener('click', () => {\r\n    const isFrozen = snowflakeButton.classList.toggle('assigned-frozen-config');\r\n    snowflakeButton.classList.toggle('assigned-thawed-config');\r\n    snowflakeButton.style.opacity = isFrozen ? '1' : '0.3';\r\n    updateUserState(username, isFrozen ? 'frozen' : 'thawed');\r\n  });\r\n}\r\n\r\n// Function to update user state in localStorage\r\nfunction updateUserState(username, state) {\r\n  const usersData = localStorage.getItem(\"usersToTrack\");\r\n  if (usersData) {\r\n    const updatedUsers = JSON.parse(usersData).map(user =>\r\n      user.name === username ? { ...user, state } : user\r\n    );\r\n    localStorage.setItem(\"usersToTrack\", JSON.stringify(updatedUsers));\r\n  }\r\n}\r\n\r\n// Helper function to create a container element\r\nfunction createContainer(type) {\r\n  const item = document.createElement('div');\r\n  item.className = `${type}-item`;\r\n  return item;\r\n}\r\n\r\n// Helper function to create a spoiler container\r\nfunction createSpoilerContainer(contentElement, options = {}) {\r\n  const container = document.createElement('div');\r\n  container.classList.add(\"settings-spoiler\");\r\n  const toggleButton = document.createElement('button');\r\n  // Use localized spoiler button text with emoji\r\n  const type = options.type;\r\n  const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentLanguage)();\r\n  // Find emoji for this type from settingsConfig\r\n  const config = _settingsConfig_js__WEBPACK_IMPORTED_MODULE_3__.settingsConfig.find(cfg => cfg.type === type);\r\n  const emoji = config && config.emoji ? config.emoji + ' ' : '';\r\n  const spoilerMsg = _settingsTitles_js__WEBPACK_IMPORTED_MODULE_1__.settingsTitles.spoilerTitles[type] || _settingsTitles_js__WEBPACK_IMPORTED_MODULE_1__.settingsTitles.spoilerTitles.toggle;\r\n  toggleButton.textContent = (options.showText || (emoji + spoilerMsg[lang].show));\r\n  contentElement.style.display = 'none';\r\n\r\n  toggleButton.addEventListener('click', () => {\r\n    const isHidden = contentElement.style.display === 'none';\r\n    toggleButton.textContent = isHidden\r\n      ? (options.hideText || (emoji + spoilerMsg[lang].hide))\r\n      : (options.showText || (emoji + spoilerMsg[lang].show));\r\n    contentElement.style.display = isHidden ? 'flex' : 'none';\r\n  });\r\n\r\n  container.appendChild(toggleButton);\r\n  container.appendChild(contentElement);\r\n  return container;\r\n}\r\n\r\n// Helper function to create an input element\r\nfunction createInput(type, value = '', placeholder = '') {\r\n  const input = document.createElement('input');\r\n  input.className = `settings-field ${type}-field`;\r\n  input.value = value;\r\n  input.placeholder = placeholder;\r\n  return input;\r\n}\r\n\r\n// Helper function to create a remove button\r\nfunction createRemoveButton(type, item) {\r\n  const removeButton = document.createElement('div');\r\n  removeButton.className = `settings-button remove-settings-button remove-${type}-word`;\r\n  removeButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.removeSVG;\r\n  attachRemoveListener(removeButton, item);\r\n  return removeButton;\r\n}\r\n\r\n// Helper function to create a snowflake button\r\nfunction createSnowflakeButton(state = 'thawed', username) {\r\n  const snowflakeButton = document.createElement('div');\r\n  snowflakeButton.className = `settings-button assigned-settings-button assigned-${state}-config`;\r\n  snowflakeButton.style.opacity = state === 'thawed' ? '0.3' : '1';\r\n  snowflakeButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.snowflakeSVG;\r\n  attachSnowflakeListener(snowflakeButton, username);\r\n  return snowflakeButton;\r\n}\r\n\r\n// Creator function for a tracked item\r\nfunction createTrackedItem(user) {\r\n  const item = createContainer('tracked');\r\n  const usernameInput = createInput('tracked-username', user.name, getPlaceholder('tracked', 'name'));\r\n  const pronunciationInput = createInput('tracked-pronunciation', user.pronunciation, getPlaceholder('tracked', 'pronunciation'));\r\n  const removeButton = createRemoveButton('tracked', item);\r\n  const initialState = (user.state === 'frozen') ? 'frozen' : 'thawed';\r\n  const snowflakeButton = createSnowflakeButton(initialState, user.name);\r\n\r\n  const genderSelect = document.createElement('select');\r\n  genderSelect.className = 'tracked-gender-select';\r\n  const genders = [\r\n    { value: 'Male', emoji: '👨' },\r\n    { value: 'Female', emoji: '👩' },\r\n  ];\r\n  genders.forEach(({ value, emoji }) => {\r\n    const option = document.createElement('option');\r\n    option.value = value;\r\n    option.textContent = `${emoji} ${value}`;\r\n    if (user.gender === value) option.selected = true;\r\n    genderSelect.appendChild(option);\r\n  });\r\n\r\n  item.appendChild(usernameInput);\r\n  item.appendChild(genderSelect);\r\n  item.appendChild(pronunciationInput);\r\n  item.appendChild(removeButton);\r\n  item.appendChild(snowflakeButton);\r\n  return item;\r\n}\r\n\r\n// Creator function for a mention item\r\nfunction createMentionItem(keyword) {\r\n  const item = createContainer('mention');\r\n  const mentionInput = createInput('mention', keyword, getPlaceholder('mention'));\r\n  const removeButton = createRemoveButton('mention', item);\r\n  item.appendChild(mentionInput);\r\n  item.appendChild(removeButton);\r\n  return item;\r\n}\r\n\r\n// Creator function for a replacement item\r\nfunction createReplacementItem(replacement = { original: '', replacement: '' }) {\r\n  const item = createContainer('replacement');\r\n  const originalInput = createInput('replacement-original', replacement.original, getPlaceholder('replacement', 'find'));\r\n  const replacementInput = createInput('replacement', replacement.replacement, getPlaceholder('replacement', 'replace'));\r\n  const removeButton = createRemoveButton('replacement', item);\r\n  item.appendChild(originalInput);\r\n  item.appendChild(replacementInput);\r\n  item.appendChild(removeButton);\r\n  return item;\r\n}\r\n\r\n// Creator function for a moderator item\r\nfunction createModeratorItem(moderator) {\r\n  const item = createContainer('moderator');\r\n  const moderatorInput = createInput('moderator', moderator, getPlaceholder('moderator'));\r\n  const removeButton = createRemoveButton('moderator', item);\r\n  item.appendChild(moderatorInput);\r\n  item.appendChild(removeButton);\r\n  return item;\r\n}\r\n\r\n// Creator function for an ignored item\r\nfunction createIgnoredItem(user) {\r\n  const item = createContainer('ignored');\r\n  const ignoredInput = createInput('ignored', user, getPlaceholder('ignored'));\r\n  const removeButton = createRemoveButton('ignored', item);\r\n  item.appendChild(ignoredInput);\r\n  item.appendChild(removeButton);\r\n  return item;\r\n}\r\n\r\n// Creator function for a toggle item\r\nfunction createToggleItem(toggleConfig, optionValue, localizedDescription) {\r\n  const item = createContainer('toggle');\r\n  if (toggleConfig.type === 'language') {\r\n    const select = document.createElement('select');\r\n    select.className = 'language-toggle-select';\r\n    (toggleConfig.languages || []).forEach(langOpt => {\r\n      const option = document.createElement('option');\r\n      option.value = langOpt.value;\r\n      option.textContent = langOpt.label;\r\n      select.appendChild(option);\r\n    });\r\n    select.value = optionValue;\r\n    const label = document.createElement('span');\r\n    label.className = 'toggle-description';\r\n    label.textContent = `${toggleConfig.emoji} ${localizedDescription}`;\r\n    item.appendChild(select);\r\n    item.appendChild(label);\r\n    return item;\r\n  }\r\n\r\n  const select = document.createElement('select');\r\n  select.className = 'toggle-select';\r\n\r\n  const description = document.createElement('span');\r\n  description.className = 'toggle-description';\r\n  description.dataset.category = toggleConfig.category;\r\n  description.dataset.type = toggleConfig.type;\r\n  description.textContent = `${toggleConfig.emoji} ${localizedDescription}`;\r\n\r\n  description.style.cursor = 'pointer';\r\n  description.style.transition = 'color 0.15s ease-in-out';\r\n\r\n  description.addEventListener('click', () => {\r\n    if (toggleConfig.image) window.open(toggleConfig.image, '_blank');\r\n  });\r\n\r\n  const options = [\r\n    { value: 'yes', emoji: '✔️' },\r\n    { value: 'no', emoji: '❌' }\r\n  ];\r\n  options.forEach(({ value, emoji }) => {\r\n    const option = document.createElement('option');\r\n    option.value = value;\r\n    option.textContent = `${emoji} ${value}`;\r\n    select.appendChild(option);\r\n  });\r\n  select.value = optionValue;\r\n\r\n  item.appendChild(select);\r\n  item.appendChild(description);\r\n  return item;\r\n}\r\n\r\n// Function to create an \"Add\" button for dynamic item creation\r\nfunction createAddButton(containerSelector, itemCreator) {\r\n  const middleWord = containerSelector.split('-')[1]; // Extract key type (e.g., tracked, mention)\r\n  const existingButton = document.querySelector(`.add-${middleWord}-item`); // Check if the button already exists\r\n  // If the button exists, remove it\r\n  if (existingButton) existingButton.remove();\r\n\r\n  const addButton = document.createElement('div');\r\n  // Set class, content, and style for the button\r\n  addButton.className = `settings-button add-settings-button add-${middleWord}-item`;\r\n  addButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_0__.addSVG; // Add SVG icon to the button\r\n\r\n  // On click, validate the last item and create a new one if valid\r\n  addButton.addEventListener('click', () => {\r\n    const container = document.querySelector(containerSelector); // Get the container element\r\n\r\n    // Get all settings {type} items and select the last one\r\n    const allItems = container.querySelectorAll(`.${middleWord}-item`);\r\n    const lastItem = allItems.length > 0 ? allItems[allItems.length - 1] : null;\r\n\r\n    // Check if the last item has any input fields\r\n    const inputFields = lastItem ? lastItem.querySelectorAll('input') : []; // Get all input fields in the last item\r\n    const hasEmptyFields = Array.from(inputFields).some(field => field.value.trim().length === 0); // Check for empty fields\r\n\r\n    // Allow creation only if the last item has no empty fields (or if there are no items yet)\r\n    const canCreateNewItem = !lastItem || !hasEmptyFields;\r\n\r\n    if (canCreateNewItem) {\r\n      // Create a new empty item based on the item creator function\r\n      const emptyItem = itemCreator === createTrackedItem\r\n        ? itemCreator({ name: '', pronunciation: '' }) // Remove gender from tracked item creation\r\n        : itemCreator('');\r\n\r\n      // Check if the new item is a valid HTMLElement before inserting\r\n      if (emptyItem instanceof HTMLElement) {\r\n        container.insertBefore(emptyItem, addButton); // Insert the new item before the Add button\r\n      } else {\r\n        console.error('Invalid item created.'); // Log an error if the item is not valid\r\n      }\r\n    } else {\r\n      // Localized alert if the last item is not filled\r\n      (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.localizedMessage)({\r\n        en: 'Please fill in the previous field before adding a new one.',\r\n        ru: 'Пожалуйста, заполните предыдущее поле перед добавлением нового.'\r\n      }, 'alert');\r\n    }\r\n  });\r\n\r\n  return addButton; // Return the created button\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settingsCreators.js?");

/***/ }),

/***/ "./src/panels/settings/settingsFileHandlers.js":
/*!*****************************************************!*\
  !*** ./src/panels/settings/settingsFileHandlers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSettingsData: () => (/* binding */ getSettingsData),\n/* harmony export */   handleDownloadSettings: () => (/* binding */ handleDownloadSettings),\n/* harmony export */   handleUploadSettings: () => (/* binding */ handleUploadSettings),\n/* harmony export */   processUploadedSettings: () => (/* binding */ processUploadedSettings)\n/* harmony export */ });\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings.js */ \"./src/panels/settings/settings.js\");\n/* harmony import */ var _settingsConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settingsConfig.js */ \"./src/panels/settings/settingsConfig.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\n\r\n// Global function to handle file input and process uploaded settings\r\nasync function handleUploadSettings(event) {\r\n  const file = event.target.files[0];\r\n  if (file) {\r\n    const reader = new FileReader();\r\n\r\n    // Return a Promise to handle the asynchronous reading\r\n    return new Promise((resolve, reject) => {\r\n      reader.onload = function (e) {\r\n        const jsonData = e.target.result; // Get the raw JSON string\r\n        try {\r\n          const settingsData = JSON.parse(jsonData); // Attempt to parse the JSON data\r\n          // Call a function to process the uploaded settings data\r\n          processUploadedSettings(settingsData);\r\n          resolve(); // Resolve the promise if successful\r\n        } catch (error) {\r\n          console.error('Error parsing JSON data:', error.message); // Log the error message\r\n          console.error('Invalid JSON:', jsonData); // Log the raw JSON string for debugging\r\n          // Optional: Notify the user about the error\r\n          (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.localizedMessage)({\r\n            en: 'Failed to parse JSON data. Please check the format and try again.',\r\n            ru: 'Не удалось разобрать данные JSON. Пожалуйста, проверьте формат и попробуйте снова.'\r\n          }, 'alert');\r\n          reject(error); // Reject the promise on error\r\n        }\r\n      };\r\n\r\n      reader.onerror = function (e) {\r\n        console.error('Error reading file:', e.target.error); // Handle file reading errors\r\n        reject(e.target.error); // Reject the promise on error\r\n      };\r\n\r\n      reader.readAsText(file); // Read the file as text\r\n    });\r\n  }\r\n}\r\n\r\nfunction handleDownloadSettings(settingsData) {\r\n  if (!settingsData || typeof settingsData !== 'object') {\r\n    console.error('Invalid settings data for download.');\r\n    (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.localizedMessage)({\r\n      en: 'Cannot import settings. Please try again.',\r\n      ru: 'Не удалось импортировать настройки. Пожалуйста, попробуйте снова.'\r\n    }, 'alert');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const tabSize2 = '  ';\r\n    const tabSize4 = '    ';\r\n    let jsonData = '{\\n';\r\n\r\n    // Iterate over settingsConfig to build each key-value pair dynamically\r\n    _settingsConfig_js__WEBPACK_IMPORTED_MODULE_1__.settingsConfig.forEach((config, index) => {\r\n      const key = config.key;\r\n      const data = settingsData[key];\r\n      let formattedValue = '';\r\n\r\n      if (Array.isArray(data)) {\r\n        // Format each array element using JSON.stringify with proper indentation.\r\n        formattedValue = `[\\n${data\r\n          .map(item => `${tabSize4}${JSON.stringify(item)}`)\r\n          .join(',\\n')}\\n${tabSize2}]`;\r\n      } else {\r\n        // For non-array values, simply stringify them.\r\n        formattedValue = JSON.stringify(data);\r\n      }\r\n\r\n      // Append the formatted key-value pair\r\n      jsonData += `${tabSize2}\"${key}\": ${formattedValue}`;\r\n      if (index < _settingsConfig_js__WEBPACK_IMPORTED_MODULE_1__.settingsConfig.length - 1) {\r\n        jsonData += ',\\n';\r\n      } else {\r\n        jsonData += '\\n';\r\n      }\r\n    });\r\n\r\n    jsonData += '}';\r\n\r\n    // Generate filename with current date\r\n    const currentDate = new Intl.DateTimeFormat('en-CA').format(new Date());\r\n    const filename = `KG_Chat_Empowerment_Settings_${currentDate}.json`;\r\n\r\n    // Create blob and trigger download\r\n    const blob = new Blob([jsonData], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const tempLink = document.createElement('a');\r\n    tempLink.href = url;\r\n    tempLink.download = filename;\r\n    document.body.appendChild(tempLink);\r\n    tempLink.click();\r\n    document.body.removeChild(tempLink);\r\n    URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error exporting settings:', error);\r\n    (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__.localizedMessage)({\r\n      en: 'Failed to export settings. Please try again.',\r\n      ru: 'Не удалось экспортировать настройки. Пожалуйста, попробуйте снова.'\r\n    }, 'alert');\r\n  }\r\n}\r\n\r\nfunction getSettingsData() {\r\n  return Object.fromEntries(_settingsConfig_js__WEBPACK_IMPORTED_MODULE_1__.settingsConfig.map(config => [config.key, JSON.parse(localStorage.getItem(config.key)) || []]));\r\n}\r\n\r\nfunction saveSettingsToLocalStorage() {\r\n  _settingsConfig_js__WEBPACK_IMPORTED_MODULE_1__.settingsConfig.forEach(config => {\r\n    localStorage.setItem(config.key, JSON.stringify(_settings_js__WEBPACK_IMPORTED_MODULE_0__.settingsState[config.key]));\r\n  });\r\n}\r\n\r\n// Process and apply uploaded settings dynamically\r\nfunction processUploadedSettings(uploadedSettings) {\r\n  // Iterate over the settingsConfig to apply each setting\r\n  _settingsConfig_js__WEBPACK_IMPORTED_MODULE_1__.settingsConfig.forEach(config => {\r\n    if (Array.isArray(uploadedSettings[config.key])) {\r\n      // If the setting is an array, update it in the settingsState\r\n      _settings_js__WEBPACK_IMPORTED_MODULE_0__.settingsState[config.key] = uploadedSettings[config.key];\r\n    }\r\n\r\n    // Save the updated settings to localStorage\r\n    saveSettingsToLocalStorage();\r\n\r\n    // Log the updated settings for debugging\r\n    console.log(`Updated setting for ${config.key}:`, _settings_js__WEBPACK_IMPORTED_MODULE_0__.settingsState[config.key]);\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settingsFileHandlers.js?");

/***/ }),

/***/ "./src/panels/settings/settingsPopulator.js":
/*!**************************************************!*\
  !*** ./src/panels/settings/settingsPopulator.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearSettingsContainers: () => (/* binding */ clearSettingsContainers),\n/* harmony export */   populateSettings: () => (/* binding */ populateSettings)\n/* harmony export */ });\n/* harmony import */ var _settingsConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settingsConfig.js */ \"./src/panels/settings/settingsConfig.js\");\n/* harmony import */ var _settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settingsFileHandlers.js */ \"./src/panels/settings/settingsFileHandlers.js\");\n/* harmony import */ var _settingsCreators_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settingsCreators.js */ \"./src/panels/settings/settingsCreators.js\");\n/* harmony import */ var _settingsTitles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settingsTitles.js */ \"./src/panels/settings/settingsTitles.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nfunction clearSettingsContainers() {\r\n  _settingsConfig_js__WEBPACK_IMPORTED_MODULE_0__.settingsConfig.forEach(config => {\r\n    const container = document.querySelector(config.selector);\r\n    if (container) {\r\n      const addButton = container.querySelector('.add-settings-button');\r\n      container.replaceChildren();\r\n      if (addButton) container.appendChild(addButton);\r\n    }\r\n  });\r\n}\r\n\r\nfunction populateSettings() {\r\n  const data = (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_1__.getSettingsData)();\r\n  const settingsContainer = document.querySelector('.settings-content-container');\r\n  settingsContainer.innerHTML = '';\r\n\r\n  _settingsConfig_js__WEBPACK_IMPORTED_MODULE_0__.settingsConfig.forEach(config => {\r\n    const { key, creator, type } = config;\r\n    const container = document.createElement('div');\r\n    container.className = `settings-${type}-container`;\r\n    container.classList.add('settings-container');\r\n\r\n    if (type !== 'toggle') {\r\n      const items = data[key] || [];\r\n      items.forEach(item => container.appendChild(creator(item)));\r\n      const addButton = (0,_settingsCreators_js__WEBPACK_IMPORTED_MODULE_2__.createAddButton)(`.settings-${type}-container`, creator);\r\n      container.appendChild(addButton);\r\n    } else {\r\n      const storedToggleSettings = JSON.parse(localStorage.getItem(key)) || [];\r\n      const lang = (0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentLanguage)();\r\n      _settingsConfig_js__WEBPACK_IMPORTED_MODULE_0__.toggleSettingsConfig.forEach(toggle => {\r\n        const storedSetting = storedToggleSettings.find(\r\n          s => s.category === toggle.category && s.type === toggle.type\r\n        );\r\n        let optionValue = 'yes';\r\n        if (toggle.type === 'language') {\r\n          const storedSetting = storedToggleSettings.find(s => s.category === 'ui' && s.type === 'language');\r\n          optionValue = storedSetting ? storedSetting.option : 'en';\r\n        } else {\r\n          optionValue = storedSetting ? storedSetting.option : 'yes';\r\n        }\r\n        const localizedDescription = _settingsTitles_js__WEBPACK_IMPORTED_MODULE_3__.settingsTitles.toggleTitles[toggle.type][lang];\r\n        const toggleItem = creator(toggle, optionValue, localizedDescription);\r\n        container.appendChild(toggleItem);\r\n      });\r\n    }\r\n\r\n    const spoiler = (0,_settingsCreators_js__WEBPACK_IMPORTED_MODULE_2__.createSpoilerContainer)(container, {\r\n      type,\r\n      showText: undefined,\r\n      hideText: undefined\r\n    });\r\n    settingsContainer.appendChild(spoiler);\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settingsPopulator.js?");

/***/ }),

/***/ "./src/panels/settings/settingsSaveButton.js":
/*!***************************************************!*\
  !*** ./src/panels/settings/settingsSaveButton.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeSaveButtonLogic: () => (/* binding */ initializeSaveButtonLogic)\n/* harmony export */ });\n/* harmony import */ var _animations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../animations.js */ \"./src/animations.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/helpers.js */ \"./src/helpers/helpers.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _settingsConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settingsConfig.js */ \"./src/panels/settings/settingsConfig.js\");\n/* harmony import */ var _settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./settingsFileHandlers.js */ \"./src/panels/settings/settingsFileHandlers.js\");\n/* harmony import */ var _components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/tooltip.js */ \"./src/components/tooltip.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Initializes save button logic for the settings panel\r\n * @param {HTMLElement} saveButton - The save button element\r\n */\r\nfunction initializeSaveButtonLogic(saveButton) {\r\n  const container = document.querySelector('.settings-content-container');\r\n  if (!container) return console.error(\"Container not found.\");\r\n\r\n  const showButton = () => {\r\n    saveButton.style.visibility = 'visible'; // Make the element interactable\r\n    saveButton.style.display = 'flex'; // Set display to flex to reveal it\r\n    setTimeout(() => {\r\n      saveButton.style.opacity = '1'; // Gradually change opacity\r\n    }, 10); // Small delay to trigger the transition\r\n  };\r\n\r\n  const hideButton = () => {\r\n    saveButton.style.opacity = '0'; // Fade out\r\n    setTimeout(() => {\r\n      saveButton.style.visibility = 'hidden'; // Hide the element after fading out\r\n      saveButton.style.display = 'none'; // Hide the element from layout\r\n    }, 300); // Match the transition duration for smooth disappearance\r\n  };\r\n\r\n  // Get previous values from localStorage\r\n  const previousValues = (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_4__.getSettingsData)();\r\n\r\n  const handleInputChange = () => {\r\n    // Dynamically create the currentValues object with empty arrays\r\n    const currentValues = {};\r\n    _settingsConfig_js__WEBPACK_IMPORTED_MODULE_3__.settingsConfig.forEach(config => {\r\n      currentValues[config.key] = [];\r\n    });\r\n\r\n    // Process tracked items\r\n    container.querySelectorAll('.settings-tracked-container .tracked-item').forEach(item => {\r\n      const usernameField = item.querySelector('.tracked-username-field');\r\n      const genderField = item.querySelector('.tracked-gender-select');\r\n      const pronunciationField = item.querySelector('.tracked-pronunciation-field');\r\n      const snowflakeButton = item.querySelector('.assigned-thawed-config, .assigned-frozen-config');\r\n\r\n      const usernameValue = usernameField ? usernameField.value.trim() : '';\r\n      const genderValue = genderField ? genderField.value.trim() : '';\r\n      const pronunciationValue = pronunciationField ? pronunciationField.value.trim() : '';\r\n      // Determine the state based on the button's class\r\n      const state = snowflakeButton.classList.contains('assigned-frozen-config') ? 'frozen' : 'thawed';\r\n\r\n      // Push current values to usersToTrack\r\n      currentValues.usersToTrack.push({\r\n        name: usernameValue,\r\n        gender: genderValue,\r\n        pronunciation: pronunciationValue,\r\n        state\r\n      });\r\n    });\r\n\r\n    // Create a set of tracked usernames (case-insensitive)\r\n    const trackedNames = new Set(\r\n      currentValues.usersToTrack.map(user => user.name.toLowerCase())\r\n    );\r\n\r\n    // Process mention items, prevent adding myNickname as a mention keyword\r\n    container.querySelectorAll('.settings-mention-container .mention-item').forEach(item => {\r\n      const mentionField = item.querySelector('.mention-field');\r\n      const mentionValue = mentionField ? mentionField.value.trim() : '';\r\n      if (\r\n        mentionValue &&\r\n        typeof _definitions_js__WEBPACK_IMPORTED_MODULE_2__.myNickname !== 'undefined' &&\r\n        _definitions_js__WEBPACK_IMPORTED_MODULE_2__.myNickname &&\r\n        mentionValue.toLowerCase() === _definitions_js__WEBPACK_IMPORTED_MODULE_2__.myNickname.toLowerCase()\r\n      ) {\r\n        mentionField.classList.add('input-error');\r\n        (0,_animations_js__WEBPACK_IMPORTED_MODULE_0__.addShakeEffect)(mentionField);\r\n        (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__.createCustomTooltip)(mentionField, {\r\n          en: 'You cannot add your own nickname as a mention keyword.',\r\n          ru: 'Нельзя добавить свой собственный ник в ключевые слова упоминаний.'\r\n        });\r\n        return; // Skip pushing this mention keyword\r\n      } else {\r\n        mentionField.classList.remove('input-error');\r\n        (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__.disableCustomTooltip)(mentionField);\r\n      }\r\n      currentValues.mentionKeywords.push(mentionValue);\r\n    });\r\n\r\n    // Process replacement items\r\n    container.querySelectorAll('.settings-replacement-container .replacement-item').forEach(item => {\r\n      const originalField = item.querySelector('.replacement-original-field');\r\n      const replacementField = item.querySelector('.replacement-field');\r\n      const originalValue = originalField ? originalField.value.trim() : '';\r\n      const replacementValue = replacementField ? replacementField.value.trim() : '';\r\n\r\n      // If the original value exists in tracked users, prevent creating a new replacement item.\r\n      if (trackedNames.has(originalValue.toLowerCase())) {\r\n        originalField.classList.add('input-error');\r\n        (0,_animations_js__WEBPACK_IMPORTED_MODULE_0__.addShakeEffect)(originalField);\r\n        (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__.createCustomTooltip)(originalField, {\r\n          en: 'You cannot create a replacement for a user you are already tracking.',\r\n          ru: 'Нельзя создать замену для пользователя, который уже отслеживается.'\r\n        });\r\n        return; // Skip pushing this replacement item.\r\n      } else {\r\n        originalField.classList.remove('input-error');\r\n        (0,_components_tooltip_js__WEBPACK_IMPORTED_MODULE_5__.disableCustomTooltip)(originalField);\r\n      }\r\n\r\n      currentValues.usernameReplacements.push({\r\n        original: originalValue,\r\n        replacement: replacementValue\r\n      });\r\n    });\r\n\r\n    // Process moderator\r\n    container.querySelectorAll('.settings-moderator-container .moderator-item').forEach(item => {\r\n      const moderatorField = item.querySelector('.moderator-field');\r\n      const moderatorValue = moderatorField ? moderatorField.value.trim() : '';\r\n      currentValues.moderator.push(moderatorValue);\r\n    });\r\n\r\n    // Process ignored items\r\n    container.querySelectorAll('.settings-ignored-container .ignored-item').forEach(item => {\r\n      const ignoredField = item.querySelector('.ignored-field');\r\n      const ignoredValue = ignoredField ? ignoredField.value.trim() : '';\r\n      currentValues.ignored.push(ignoredValue);\r\n    });\r\n\r\n    // In your save logic where you process toggle items\r\n    container.querySelectorAll('.settings-toggle-container .toggle-item').forEach(item => {\r\n      const selectElement = item.querySelector('select');\r\n\r\n      if (selectElement.classList.contains('language-toggle-select')) {\r\n        currentValues.toggle.push({\r\n          category: 'ui',\r\n          type: 'language',\r\n          option: selectElement.value\r\n        });\r\n      } else if (selectElement.classList.contains('toggle-select')) {\r\n        const descriptionElement = item.querySelector('.toggle-description');\r\n        const selectedValue = selectElement.value.trim() || 'no';\r\n        currentValues.toggle.push({\r\n          category: descriptionElement.dataset.category,\r\n          type: descriptionElement.dataset.type,\r\n          option: selectedValue\r\n        });\r\n      }\r\n    });\r\n\r\n    // If no language setting was found in the form, preserve the existing one\r\n    const hasLanguageSetting = currentValues.toggle.some(item => item.type === 'language');\r\n    if (!hasLanguageSetting) {\r\n      const existingLanguageSetting = previousValues.toggle?.find(item => item.type === 'language');\r\n      if (existingLanguageSetting) {\r\n        currentValues.toggle.push(existingLanguageSetting);\r\n      }\r\n    }\r\n\r\n    // Check if any values have changed compared to previous state\r\n    const valuesChanged = JSON.stringify(previousValues) !== JSON.stringify(currentValues);\r\n\r\n    // Show or hide the save button based on whether values have changed\r\n    valuesChanged ? showButton() : hideButton();\r\n\r\n    return currentValues; // Return current values for saving later\r\n  };\r\n\r\n  // Attach click event to save settings when there are changes\r\n  saveButton.addEventListener('click', () => {\r\n    const currentValues = handleInputChange(); // Get current values before saving\r\n    (0,_settingsFileHandlers_js__WEBPACK_IMPORTED_MODULE_4__.processUploadedSettings)(currentValues); // Process and save the current settings\r\n    // Update previousValues to the current state after saving\r\n    Object.assign(previousValues, currentValues);\r\n    hideButton(); // Optionally hide the button after saving\r\n  });\r\n\r\n  // Add input listeners to existing fields\r\n  container.querySelectorAll('input, select').forEach(field => {\r\n    field.addEventListener('input', handleInputChange);\r\n  });\r\n\r\n  // Function to attach event listeners to dynamically added input and select elements\r\n  const attachEventListeners = (element) => {\r\n    if (element.tagName === 'INPUT' || element.tagName === 'SELECT') {\r\n      element.addEventListener('input', handleInputChange);\r\n      // console.log('Listener attached to:', element);\r\n    } else {\r\n      // Check its children for input or select elements\r\n      element.querySelectorAll('input, select').forEach((child) => {\r\n        child.addEventListener('input', handleInputChange);\r\n        // console.log('Listener attached to child:', child);\r\n      });\r\n    }\r\n  };\r\n\r\n  // Create a mutation observer to monitor changes in the target container\r\n  const observer = new MutationObserver((0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.debounce)((mutationsList) => {\r\n    mutationsList.forEach((mutation) => {\r\n      if (mutation.type === 'childList') {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType === Node.ELEMENT_NODE) {\r\n            // console.log('Added:', node);\r\n            attachEventListeners(node); // Attach event listeners to new elements\r\n          }\r\n        });\r\n\r\n        mutation.removedNodes.forEach((node) => {\r\n          if (node.nodeType === Node.ELEMENT_NODE) {\r\n            // console.log('Removed:', node);\r\n            handleInputChange(); // Call handleInputChange to check the state after any changes\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, _definitions_js__WEBPACK_IMPORTED_MODULE_2__.debounceTimeout));\r\n\r\n  // Start observing the target container for child list changes\r\n  observer.observe(container, {\r\n    childList: true,\r\n    subtree: true, // Observe all descendants as well\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settingsSaveButton.js?");

/***/ }),

/***/ "./src/panels/settings/settingsTitles.js":
/*!***********************************************!*\
  !*** ./src/panels/settings/settingsTitles.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   settingsTitles: () => (/* binding */ settingsTitles)\n/* harmony export */ });\nconst settingsTitles = {\r\n  spoilerTitles: {\r\n    tracked: {\r\n      en: { show: 'Show tracked users', hide: 'Hide tracked users' },\r\n      ru: { show: 'Показать отслеживаемых пользователей', hide: 'Скрыть отслеживаемых пользователей' }\r\n    },\r\n    mention: {\r\n      en: { show: 'Show mention keywords', hide: 'Hide mention keywords' },\r\n      ru: { show: 'Показать ключевые слова упоминаний', hide: 'Скрыть ключевые слова упоминаний' }\r\n    },\r\n    replacement: {\r\n      en: { show: 'Show username replacements', hide: 'Hide username replacements' },\r\n      ru: { show: 'Показать замены имен пользователей', hide: 'Скрыть замены имен пользователей' }\r\n    },\r\n    moderator: {\r\n      en: { show: 'Show moderator', hide: 'Hide moderators' },\r\n      ru: { show: 'Показать модераторов', hide: 'Скрыть модераторов' }\r\n    },\r\n    ignored: {\r\n      en: { show: 'Show ignored users', hide: 'Hide ignored users' },\r\n      ru: { show: 'Показать игнорируемых пользователей', hide: 'Скрыть игнорируемых пользователей' }\r\n    },\r\n    toggle: {\r\n      en: { show: 'Show toggle options', hide: 'Hide toggle options' },\r\n      ru: { show: 'Показать переключатели', hide: 'Скрыть переключатели' }\r\n    }\r\n  },\r\n  toggleTitles: {\r\n    static: {\r\n      en: 'Show chat static notifications',\r\n      ru: 'Показывать статические уведомления чата'\r\n    },\r\n    dynamic: {\r\n      en: 'Show global dynamic notifications',\r\n      ru: 'Показывать глобальные динамические уведомления'\r\n    },\r\n    presence: {\r\n      en: 'Play a beep sound and speak feedback when the user enters or leaves the chat',\r\n      ru: 'Воспроизводить звук и озвучивать, когда пользователь входит или выходит из чата'\r\n    },\r\n    gTTS: {\r\n      en: 'Switch to google TTS engine if available',\r\n      ru: 'Переключиться на Google TTS, если доступно'\r\n    },\r\n    counter: {\r\n      en: 'Create participants counter',\r\n      ru: 'Создать счетчик участников'\r\n    },\r\n    language: {\r\n      en: 'Interface language',\r\n      ru: 'Язык интерфейса'\r\n    }\r\n  },\r\n  placeholderTitles: {\r\n    tracked: {\r\n      name: {\r\n        en: 'Username',\r\n        ru: 'Пользователь'\r\n      },\r\n      pronunciation: {\r\n        en: 'Pronunciation',\r\n        ru: 'Произношение'\r\n      }\r\n    },\r\n    mention: {\r\n      en: 'Alias',\r\n      ru: 'Псевдоним'\r\n    },\r\n    replacement: {\r\n      find: {\r\n        en: 'Original',\r\n        ru: 'Оригинал'\r\n      },\r\n      replace: {\r\n        en: 'Replacement',\r\n        ru: 'Замена'\r\n      }\r\n    },\r\n    moderator: {\r\n      en: 'Moderator',\r\n      ru: 'Модератор'\r\n    },\r\n    ignored: {\r\n      en: 'Ignored',\r\n      ru: 'Игнорируемый'\r\n    }\r\n  }\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./src/panels/settings/settingsTitles.js?");

/***/ }),

/***/ "./src/style.scss":
/*!************************!*\
  !*** ./src/style.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./style.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/style.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/style.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;